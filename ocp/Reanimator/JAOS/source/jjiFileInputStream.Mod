MODULE jjiFileInputStream;	(*automatically generated stub for java/io/FileInputStream *)	(*WARNING: DON'T CHANGE THE PROCEDURE NAMES*)IMPORT 	SYSTEM,	JT := JVMTypes, 	jjlObject, jjlString,	jjiInputStream,  jjiFileDescriptor, jjiFile	(*, java/nio/channels/FileChannel *);TYPE	FileInputStream* = OBJECT (jjiInputStream.InputStream)		VAR			fd-: jjiFileDescriptor.FileDescriptor;			ch-: PTR (*java/nio/channels/FileChannel.Class*);					PROCEDURE init8336*(p0: jjiFile.File);   (* <init>(Ljava/io/File;)V *)		BEGIN	(* DON'T IMPLEMENT THIS METHOD *)		END init8336;		PROCEDURE init646*(p0: jjiFileDescriptor.FileDescriptor);   (* <init>(Ljava/io/FileDescriptor;)V *)		BEGIN	(* DON'T IMPLEMENT THIS METHOD *)		END init646;		PROCEDURE init1930*(p0: jjlString.String);   (* <init>(Ljava/lang/String;)V *)		BEGIN	(* DON'T IMPLEMENT THIS METHOD *)		END init1930;		PROCEDURE available*(): JT.Int;   (* available()I *)		BEGIN	(* DON'T IMPLEMENT THIS METHOD *)		END available;		PROCEDURE close*();   (* close()V *)		BEGIN	(* DON'T IMPLEMENT THIS METHOD *)		END close;		PROCEDURE finalize();   (* finalize()V *)		BEGIN	(* DON'T IMPLEMENT THIS METHOD *)		END finalize;		PROCEDURE getChannel*(): PTR (*jjncFileChannel.Class*);   (* getChannel()Ljava/nio/channels/FileChannel; *)		BEGIN	(* DON'T IMPLEMENT THIS METHOD *)		END getChannel;		PROCEDURE getFD*(): jjiFileDescriptor.FileDescriptor;   (* getFD()Ljava/io/FileDescriptor; *)		BEGIN	(* DON'T IMPLEMENT THIS METHOD *)		END getFD;		PROCEDURE read187*(): JT.Int;   (* read()I *)		BEGIN	(* DON'T IMPLEMENT THIS METHOD *)		END read187;		PROCEDURE read331*(p0: jjlObject.ByteArray): JT.Int;   (* read([B)I *)		BEGIN	(* DON'T IMPLEMENT THIS METHOD *)		END read331;		PROCEDURE read1591*(p0: jjlObject.ByteArray; p1: JT.Int; p2: JT.Int): JT.Int;   (* read([BII)I *)		BEGIN	(* DON'T IMPLEMENT THIS METHOD *)		END read1591;					(** skip - native implementation for bootstrap purposed *)					PROCEDURE skip(len: HUGEINT): HUGEINT;			VAR new, pos: HUGEINT;		BEGIN			IF (len = 0) THEN RETURN 0 END;						pos := fd.nativeGetFilePointer(fd.nativeFd);			new := fd.nativeSeek(fd.nativeFd, len, jjiFileDescriptor.CUR, TRUE);			RETURN new-pos;		END skip;			(** readByteArray - native implementation for bootstrap purposed *)		PROCEDURE readByteArray*(VAR buf: ARRAY OF CHAR; ofs, len: LONGINT): LONGINT;		BEGIN			RETURN fd.nativeReadBuf0(fd.nativeFd, buf, ofs, len)		END readByteArray;			END FileInputStream;END jjiFileInputStream.(*	11.01.04	prk	update to classpath 0.06*)