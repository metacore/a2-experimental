(* Jaos, Copyright 2003, Patrik Reali, ETH Zurich *)MODULE jjlVMSystem;	(*automatically generated stub for java/lang/VMSystem *)	(*WARNING: DON'T CHANGE THE PROCEDURE NAMES*)IMPORT	 JT := JVMTypes, JC := JVMConsole, jjlObject(*, jjuProperties*),	AosKernel;TYPE	Object = jjlObject.Object;	Properties = Object(*jjuProperties.Properties*);	InputStream = Object	(*InputStream*);	PrintStream = Object	(*PrintStream*);VAR	infoInfo: JC.LoggingInfo;TYPE	VMSystem* = OBJECT (Object)		VAR		PROCEDURE init();   (* <init>()V *)		BEGIN	(* DON'T IMPLEMENT THIS METHOD *)		END init;	END VMSystem;	PROCEDURE arraycopy(p0: Object; p1: JT.Int; p2: Object; p3: JT.Int; p4: JT.Int);   (* arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V *)	BEGIN	(* put your implementation here *)		HALT(99)	END arraycopy;	PROCEDURE identityHashCode(p0: Object): JT.Int;   (* identityHashCode(Ljava/lang/Object;)I *)	BEGIN	(* put your implementation here *)		HALT(99)	END identityHashCode;	PROCEDURE insertSystemProperties(p0: Properties);   (* insertSystemProperties(Ljava/util/Properties;)V *)	BEGIN	(* put your implementation here *)		(* no properties yet*)(*		HALT(99)*)	END insertSystemProperties;	PROCEDURE setIn(p0: InputStream);	BEGIN		JC.String(infoInfo, "VMSystem.setIn called"); JC.Ln(infoInfo)	END setIn;		PROCEDURE setOut(p0: PrintStream);	BEGIN		JC.String(infoInfo, "VMSystem.setOut called"); JC.Ln(infoInfo)	END setOut;		PROCEDURE setErr(p0: PrintStream);	BEGIN		JC.String(infoInfo, "VMSystem.setOut called"); JC.Ln(infoInfo)	END setErr;		PROCEDURE currentTimeMillis*(): JT.Long;   (* currentTimeMillis()J *)	BEGIN		RETURN AosKernel.GetTimer( );	END currentTimeMillis;	PROCEDURE isWordsBigEndian(): BOOLEAN;   (* isWordsBigEndian()Z *)	BEGIN	(* put your implementation here *)		RETURN FALSE	END isWordsBigEndian;	PROCEDURE makeStandardInputStream;	BEGIN	END makeStandardInputStream;		PROCEDURE makeStandardOutputStream;	BEGIN	END makeStandardOutputStream;		PROCEDURE makeStandardErrorStream;	BEGIN	END makeStandardErrorStream;	BEGIN	infoInfo.kind := JC.Info; infoInfo.source := JC.VM;END jjlVMSystem.(*	30.07.03	prk	Logging functions, add kind and source; filtering support	12.02.03	prk	Logging functions, use same interface as AosOut	29.12.02	prk	update to classpath snapshot 28.12.02	05.06.01	prk	System, use classpath 0.02 implementation*)