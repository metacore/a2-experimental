MODULE WMNavigator;
	IMPORT Modules, Kernel, Locks, Displays, Raster, Strings, XML, WMRectangles, WMGraphics, WMGraphicUtilities, WMWindowManager, WMComponents;
CONST 
TYPE 
	Level = RECORD 
		x, y, width, height: LONGINT; 
	END; 

	OnDrawnProc = PROCEDURE {DELEGATE}; 

	ViewPort* = OBJECT (WMWindowManager.ViewPort)
	VAR 
		backbuffer-: WMGraphics.Image; 
		deviceRect: WMRectangles.Rectangle; 
		width, height: LONGINT; 
		canvas: WMGraphics.BufferCanvas; 
		state: WMGraphics.CanvasState; 
		internnavig, navig: BOOLEAN; 
		fx, fy, inffx, inffy, factor, intfactor: REAL; 
		lock: Locks.Lock; 
		onDrawn: OnDrawnProc; 
		zoomLevel: ARRAY 7 OF Level; 
		currentZoomLevel: LONGINT; 

		PROCEDURE ^  & New*; 
		PROCEDURE ^ SetZoomLevels(width, height: LONGINT); 
		PROCEDURE ^ SetZoomLevel(level, xg, yg: LONGINT); 
		PROCEDURE ^ ChangeZoom(dz, xg, yg: LONGINT); 
		PROCEDURE ^ ReInit(width, height, format: LONGINT; onDrawn: OnDrawnProc); 
		PROCEDURE ^ GetWMCoordinates*(CONST r: WMRectangles.Rectangle): WMRectangles.Rectangle; 
		PROCEDURE ^ GetWMPosition(x, y: LONGINT; VAR xg, yg: LONGINT); 
		PROCEDURE ^ GetKeyState*(VAR state: SET); 
		PROCEDURE ^ SetRange*(x, y, w, h: REAL; showTransition: BOOLEAN); 
		PROCEDURE ^ Update*(r: WMRectangles.Rectangle; top: WMWindowManager.Window); 
		PROCEDURE ^ Refresh*(top: WMWindowManager.Window); 
		PROCEDURE ^ DrawWindow(window: WMWindowManager.Window): BOOLEAN; 
		PROCEDURE ^ Draw(r: WMRectangles.Rectangle; top: WMWindowManager.Window); 
	END ViewPort; 

	Navigator = OBJECT {EXCLUSIVE} (WMComponents.VisualComponent)
	VAR 
		viewPort: ViewPort; 
		selectedWindow: WMWindowManager.Window; 
		timer: Kernel.Timer; 
		alive, dead, refresh, doRefresh: BOOLEAN; 
		offsetX, offsetY: LONGINT; 
		lastX, lastY: LONGINT; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ Finalize*; 
		PROCEDURE ^ PropertyChanged*(sender, data: ANY); 
		PROCEDURE ^ RecacheProperties*; 
		PROCEDURE ^ PointerLeave*; 
		PROCEDURE ^ PointerDown*(x, y: LONGINT; keys: SET); 
		PROCEDURE ^ PointerMove*(x, y: LONGINT; keys: SET); 
		PROCEDURE ^ WheelMove*(dz: LONGINT); 
		PROCEDURE ^ PointerUp*(x, y: LONGINT; keys: SET); 
		PROCEDURE ^ Refresh; 
		PROCEDURE ^ Draw*(canvas: WMGraphics.Canvas); 
	BEGIN{ACTIVE} 
	END Navigator; 

	Window = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)

		PROCEDURE ^ Close*; 
	END Window; 
VAR 
	manager: WMWindowManager.WindowManager; 
	viewport: WMWindowManager.ViewPort; 
	window: Window; 

	PROCEDURE ^ GenNavigator*(): XML.Element; 
	PROCEDURE ^ Init; 
	PROCEDURE ^ Open*; 
	PROCEDURE ^ Close*; 
BEGIN
END WMNavigator.
