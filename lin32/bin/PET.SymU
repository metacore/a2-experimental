MODULE PET;
	IMPORT KernelLog, KernelLogger, Modules, Commands, Options, Streams, Inputs, Files, WMRestorable, XML, XMLScanner, XMLParser, XMLObjects, WMStandardComponents, WMGraphics, CompilerInterface, WhitespaceRemover, WMComponents, WMRectangles, WMMessages, WMDialogs, WMDiagnostics, WMTextView, WMEditors, Strings, TextUtilities, Texts, WMWindowManager, WMGrids, WMMacros, WMPopups, WMDropTarget, PETTrees, Configuration, Codecs, WMTabComponents, UndoManager, WMSearchComponents, Kernel;
CONST 
	WindowWidth = 800; 
	WindowHeight = 600; 
	No = 0; 
	Yes = 1; 
	Paranoid = 2; 
	DefaultBackupOnStore = No; 
	DefaultBackupOnCompile = FALSE; 
	DefaultShowPathInTabs = FALSE; 
	DefaultScratchPanelHeight = 250; 
	DefaultEnableWhitespaceWarnings = FALSE; 
	DefaultShowLineNumbers = FALSE; 
	DefaultIndicateTabs = FALSE; 
	DefaultCurrentLineColor = 0; 
	DefaultCompilerName = \"Fox"\; 
	DefaultCompilerCaption = \"Compile"\; 
	DefaultCompilerOptions = \"-b=AMD --warnings"\; 
	DefaultCompilerLoadModule = \"Compiler"\; 
	DefaultCompilerFileExtension = \"MOD"\; 
	DefaultCompilerFindPC = TRUE; 
	DefaultDiffCommand = \"WMDiff.Open"\; 
	DefaultDiffPrefix = \""\; 
	DefaultDiffSuffix = \".Bak"\; 
	DefaultSearchWrap = FALSE; 
	DefaultSearchCaseSensitive = TRUE; 
	DefaultSearchHighlightAll = FALSE; 
	DisableShortcuts = FALSE; 
	BackupOnCompileFilename = \"PETBackup.Mod.Bak"\; 
	ScratchTextFilename = \"PETScratch.Text"\; 
	StateFileExtension = \".pet"\; 
	SearchStringMaxLen = 128; 
	MaxNbrOfTabs = 100; 
	MaxNbrOfCompilers = 8; 
	WindowTitle = \"Programmer's Editing Tool v2.1"\; 
	DefaultTextFormat = \"UTF-8"\; 
	EditorFocus = 1; 
	SplitEditorFocus = 2; 
TYPE 
	CompilerOptions = ARRAY 256 OF CHAR; 

	Filename = ARRAY 256 OF CHAR; 

	String = ARRAY 128 OF CHAR; 

	SearchString = ARRAY SearchStringMaxLen OF CHAR; 

	CompilerSettings = RECORD 
		name: ARRAY 32 OF CHAR; 
		caption: ARRAY 16 OF CHAR; 
		options: CompilerOptions; 
		fileExtension: ARRAY 16 OF CHAR; 
		loadmodule: Filename; 
		genTree: ARRAY 128 OF CHAR; 
		findPC: BOOLEAN; 
	END; 

	Settings = OBJECT 
	VAR 
		backupOnStore: LONGINT; 
		backupOnCompile: BOOLEAN; 
		showPathInTabs: BOOLEAN; 
		scratchPanelHeight: LONGINT; 
		enableWhitespaceWarnings: BOOLEAN; 
		showLineNumbers: BOOLEAN; 
		indicateTabs: BOOLEAN; 
		currentLineColor: LONGINT; 
		defaultCompilerOptions: CompilerOptions; 
		defaultCompilerSettings: CompilerSettings; 
		compilers: ARRAY MaxNbrOfCompilers OF CompilerSettings; 
		nofCompilers: LONGINT; 
		diffCommand, diffPrefix, diffSuffix: String; 
		searchWrap, searchHighlightAll, searchCaseSensitive: BOOLEAN; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ GetCompilerSettings(CONST filename: ARRAY OF CHAR): CompilerSettings; 
		PROCEDURE ^ LoadCompilerSettings; 
		PROCEDURE ^ Load; 
	END Settings; 

	CaptionObject = OBJECT 
	VAR 
		caption: ARRAY 128 OF CHAR; 

		PROCEDURE ^  & New*(CONST caption: ARRAY OF CHAR); 
	END CaptionObject; 

	Position = OBJECT 
	VAR 
		marker: WMTextView.PositionMarker; 
		ucs, keysym: LONGINT; 
		flags: SET; 
		next: Position; 

		PROCEDURE ^  & Init*(ucs, keysym: LONGINT; flags: SET); 
	END Position; 

	Positions = OBJECT 
	VAR 
		textView: WMTextView.TextView; 
		positions: Position; 

		PROCEDURE ^  & Init*(textView: WMTextView.TextView); 
		PROCEDURE ^ FindPosition(ucs, keysym: LONGINT; flags: SET): Position; 
		PROCEDURE ^ StoreCurrentPosition(ucs, keysym: LONGINT; flags: SET); 
		PROCEDURE ^ RecallPosition(ucs, keysym: LONGINT; flags: SET); 
	END Positions; 

	ScratchPanel = OBJECT {EXCLUSIVE} (WMComponents.VisualComponent)
	VAR 
		editor: WMEditors.Editor; 
		label: WMStandardComponents.Label; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ SetText(text: Texts.Text); 
	END ScratchPanel; 

	URLDropTarget = OBJECT (WMDropTarget.DropTarget)
	VAR 
		win: Window; 

		PROCEDURE ^  & New*(win: Window); 
		PROCEDURE ^ GetInterface*(type: LONGINT): WMDropTarget.DropInterface; 
	END URLDropTarget; 

	DropURL = OBJECT (WMDropTarget.DropURLs)
	VAR 
		win: Window; 

		PROCEDURE ^  & New*(win: Window); 
		PROCEDURE ^ URL*(CONST url: ARRAY OF CHAR; VAR res: LONGINT); 
	END DropURL; 

	TextWriter = OBJECT (TextUtilities.TextWriter)
	VAR 
		update: PROCEDURE {DELEGATE}; 

		PROCEDURE ^ Update*; 
	END TextWriter; 

	PETPanel = OBJECT {EXCLUSIVE} (WMComponents.VisualComponent)
	VAR 
		editor, splitEditor: WMEditors.Editor; 
		logEdit: WMEditors.Editor; 
		scratchPanel, splitPanel: WMStandardComponents.Panel; 
		scratch: ScratchPanel; 
		sidePanel: WMStandardComponents.Panel; 
		logPanel, editPanel: WMStandardComponents.Panel; 
		logWriter, errorWriter: TextWriter; 
		searchPanel: WMSearchComponents.SearchPanel; 
		errorGrid: WMDiagnostics.DiagnosticsView; 
		diagnostics: WMDiagnostics.Model; 
		tree: PETTrees.Tree; 
		modified, splitted, wrap: BOOLEAN; 
		focus: LONGINT; 
		codecFormat: ARRAY 128 OF CHAR; 
		autoCodecFormat: ARRAY 128 OF CHAR; 
		name: Filename; 
		filename: Filename; 
		options: CompilerOptions; 
		compilerSettings: CompilerSettings; 
		showErrorMarkers: BOOLEAN; 
		positions: Positions; 
		owner: Window; 
		settings: Settings; 

		PROCEDURE ^  & InitPanel*(window: Window); 
		PROCEDURE ^ CreateSidePanel(settings: CompilerSettings); 
		PROCEDURE ^ OnGoToFile(sender, data: ANY); 
		PROCEDURE ^ OnGoToDefinition(sender, data: ANY); 
		PROCEDURE ^ OnNodeExpand(sender, data: ANY); 
		PROCEDURE ^ HandleTreeRefresh(sender, data: ANY); 
		PROCEDURE ^ ClearLog; 
		PROCEDURE ^ DoCompile(findPC: BOOLEAN; CONST pc: ARRAY OF CHAR; options: CompilerOptions); 
		PROCEDURE ^ ErrorClick(sender, data: ANY); 
		PROCEDURE ^ GoToNextError(forward: BOOLEAN); 
		PROCEDURE ^ EditorFocusHandler(hasFocus: BOOLEAN); 
		PROCEDURE ^ SplitEditorFocusHandler(hasFocus: BOOLEAN); 
		PROCEDURE ^ ToggleLabels; 
		PROCEDURE ^ ToggleWrap; 
		PROCEDURE ^ TextChanged(sender, data: ANY); 
		PROCEDURE ^ CursorChanged; 
		PROCEDURE ^ OpenLogEditor; 
		PROCEDURE ^ HandleShortcut(ucs: LONGINT; flags: SET; keysym: LONGINT): BOOLEAN; 
		PROCEDURE ^ Finalize*; 
	END PETPanel; 

	KillerMsg = OBJECT 
	END KillerMsg; 

	BrowseEntry = POINTER TO RECORD 
		prev, next: BrowseEntry; 
		filename: Filename; 
		pos: LONGINT; 
	END; 

	Window = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		filenameEdit, optionsEdit, positionEdit: WMEditors.Editor; 
		loadBtn, storeBtn, closeBtn, compileBtn, findPCBtn, undoBtn, redoBtn: WMStandardComponents.Button; 
		splitBtn, formatBtn, searchBtn, labelsBtn, wrapBtn, errListBtn, findBtn, logBtn, forwardBtn, backBtn: WMStandardComponents.Button; 
		popup: WMPopups.Popup; 
		tabs: WMTabComponents.Tabs; 
		pages: ARRAY MaxNbrOfTabs OF PETPanel; 
		tabList: ARRAY MaxNbrOfTabs OF WMTabComponents.Tab; 
		currentPage: PETPanel; 
		currentPageNr: LONGINT; 
		page: WMStandardComponents.Panel; 
		xmlHasErrors: BOOLEAN; 
		codecFormat: ARRAY 128 OF CHAR; 
		autoCodecFormat: ARRAY 128 OF CHAR; 
		projectText: Texts.Text; 
		projectTextFilename: Filename; 
		projectTextModified: BOOLEAN; 
		showTypeHierarchy, showImportedModules: BOOLEAN; 
		windowInfo: WMWindowManager.WindowInfo; 
		currentIcon: WMGraphics.Image; 
		iconIdle, iconWorking: WMGraphics.Image; 
		modifierFlags: SET; 
		browseBase, browseTOS: BrowseEntry; 
		settings: Settings; 

		PROCEDURE ^  & New*(c: WMRestorable.Context); 
		PROCEDURE ^ CreateForm(): WMComponents.VisualComponent; 
		PROCEDURE ^ ButtonHandler(sender, data: ANY); 
		PROCEDURE ^ NrUpdatesChanged(nrUndos, nrRedos: LONGINT); 
		PROCEDURE ^ ProjectTextModified(sender, data: ANY); 
		PROCEDURE ^ InitCodecs; 
		PROCEDURE ^ SelectNextTab; 
		PROCEDURE ^ SelectPreviousTab; 
		PROCEDURE ^ SelectTab(tabNr: LONGINT); 
		PROCEDURE ^ RecordCurrentPos; 
		PROCEDURE ^ GotoFileInternal(CONST filename: ARRAY OF CHAR; pos: LONGINT); 
		PROCEDURE ^ BrowseBack; 
		PROCEDURE ^ BrowseForward; 
		PROCEDURE ^ GotoFile(CONST filename: ARRAY OF CHAR; pos: LONGINT); 
		PROCEDURE ^ GotoDefinition(info: PETTrees.ExternalDefinitionInfo); 
		PROCEDURE ^ GetNrFromPage(page: PETPanel): LONGINT; 
		PROCEDURE ^ TabSelected(sender, data: ANY); 
		PROCEDURE ^ UpdatePages; 
		PROCEDURE ^ UpdateInfo; 
		PROCEDURE ^ HandleDocumentInfo(CONST info: WMWindowManager.DocumentInfo; new: BOOLEAN; VAR res: LONGINT); 
		PROCEDURE ^ UpdateState; 
		PROCEDURE ^ DragDroppedHandler(x, y: LONGINT; dragInfo: WMWindowManager.DragInfo; VAR handled: BOOLEAN); 
		PROCEDURE ^ PositionHandler(sender, data: ANY); 
		PROCEDURE ^ FormatHandler(x, y: LONGINT; keys: SET; VAR handled: BOOLEAN); 
		PROCEDURE ^ SetFormatCaption(CONST format: ARRAY OF CHAR); 
		PROCEDURE ^ SetCursorPosition(position: LONGINT); 
		PROCEDURE ^ SetModified(modified: BOOLEAN); 
		PROCEDURE ^ SetIcon*(icon: WMGraphics.Image); 
		PROCEDURE ^ FormatPopupHandler(sender, data: ANY); 
		PROCEDURE ^ FilenameEditEscapeHandler(sernder, data: ANY); 
		PROCEDURE ^ LoadHandler(sender, data: ANY); 
		PROCEDURE ^ Load(CONST filename, format: ARRAY OF CHAR); 
		PROCEDURE ^ StoreHandler(sender, data: ANY); 
		PROCEDURE ^ Store(CONST filename, format: ARRAY OF CHAR); 
		PROCEDURE ^ NewTab; 
		PROCEDURE ^ HasModifiedPage(): BOOLEAN; 
		PROCEDURE ^ CloseAllTabs(): BOOLEAN; 
		PROCEDURE ^ CloseHandler(sender, data: ANY); 
		PROCEDURE ^ SplitHandler(sender, data: ANY); 
		PROCEDURE ^ LinkClickedHandler(sender, data: ANY); 
		PROCEDURE ^ FindPC(sender, data: ANY); 
		PROCEDURE ^ UnloadModule; 
		PROCEDURE ^ Close*; 
		PROCEDURE ^ Error(pos, line, row: LONGINT; CONST msg: ARRAY OF CHAR); 
		PROCEDURE ^ LoadState(CONST filename: ARRAY OF CHAR): BOOLEAN; 
		PROCEDURE ^ StoreState(CONST filename: ARRAY OF CHAR); 
		PROCEDURE ^ LoadPages(pages: XML.Element); 
		PROCEDURE ^ StorePages(): XML.Element; 
		PROCEDURE ^ LoadPage(page: WMRestorable.XmlElement); 
		PROCEDURE ^ StorePage(page: PETPanel): WMRestorable.XmlElement; 
		PROCEDURE ^ HandleShortcut(ucs: LONGINT; flags: SET; keysym: LONGINT): BOOLEAN; 
		PROCEDURE ^ Handle*(VAR m: WMMessages.Message); 
	END Window; 
VAR 
	nofWindows: LONGINT; 
	scratchText: Texts.Text; 
	scratchModified: BOOLEAN; 
	gsettings: Settings; 
	StrScratchPanel, StrPETPanel: Strings.String; 
	timeout: BOOLEAN; 

	PROCEDURE ^ Open*(context: Commands.Context); 
	PROCEDURE ^ OpenState*(context: Commands.Context); 
	PROCEDURE ^ Restore*(context: WMRestorable.Context); 
	PROCEDURE ^ CommentSelection*(text: Texts.Text; from, to: Texts.TextPosition); 
	PROCEDURE ^ UncommentSelection*(text: Texts.Text; from, to: Texts.TextPosition); 
	PROCEDURE ^ Comment*; 
	PROCEDURE ^ Uncomment*; 
	PROCEDURE ^ GetSyntaxHighlighterName*(fullname: ARRAY OF CHAR; VAR name: ARRAY OF CHAR); 
	PROCEDURE ^ ControlKeyDown(flags: SET): BOOLEAN; 
	PROCEDURE ^ EitherShiftOrControlDown(flags: SET): BOOLEAN; 
	PROCEDURE ^ ContainsFileExtension(filename, extension: ARRAY OF CHAR): BOOLEAN; 
	PROCEDURE ^ ScratchModified(sender, data: ANY); 
	PROCEDURE ^ StoreScratchText; 
	PROCEDURE ^ LoadScratchText; 
	PROCEDURE ^ StoreText(CONST filename: ARRAY OF CHAR; text: Texts.Text); 
	PROCEDURE ^ LoadText(CONST filename: ARRAY OF CHAR): Texts.Text; 
	PROCEDURE ^ GetSettings(): Settings; 
	PROCEDURE ^ IncCount; 
	PROCEDURE ^ DecCount; 
	PROCEDURE ^ Timeout; 
	PROCEDURE ^ Cleanup; 
	PROCEDURE ^ LoadModule(CONST moduleName: ARRAY OF CHAR); 
	PROCEDURE ^ InitStrings; 
BEGIN
END PET.
