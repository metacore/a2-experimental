MODULE HyperDocs IN Oberon;
	IMPORT Files, BTrees, Strings, Objects, Display3, Fonts, Texts, Oberon, Attributes, Links, Modules, Gadgets, TextGadgets0, TextGadgets, Documents, Desktops, Pictures, Display, MIME;
CONST 
	PrefixStrLen* = 16; 
	MaxLink* = 1024; 
	ServerStrLen* = 64; 
	PathStrLen* = 256; 
	UndefKey* =  -1; 
TYPE 
	LinkScheme* = POINTER TO LinkSchemeDesc; 

	Node* = POINTER TO NodeDesc; 

	LinkSchemeDesc* = RECORD (Gadgets.ObjDesc)
		prefix*: ARRAY PrefixStrLen OF CHAR; 
		usePath*: BOOLEAN; 
		next: LinkScheme; 
	END; 

	LinkSchemeMsg* = RECORD (Objects.ObjMsg)
		key*: LONGINT; 
		res*: INTEGER; 
	END; 

	DefURL* = POINTER TO DefURLDesc; 

	DefURLDesc* = RECORD 
		key*: LONGINT; 
		prefix*: ARRAY PrefixStrLen OF CHAR; 
		host*: ARRAY ServerStrLen OF CHAR; 
		path*: ARRAY PathStrLen OF CHAR; 
		label*: ARRAY 64 OF CHAR; 
		port*: INTEGER; 
	END; 

	RegisterLinkMsg* = RECORD (LinkSchemeMsg)
		link*: ARRAY MaxLink OF CHAR; 
		base*: DefURL; 
	END; 

	InfoMsg* = RECORD (LinkSchemeMsg)
		contType*: MIME.ContentType; 
		size*, date*, time*: LONGINT; 
	END; 

	FetchMsg* = RECORD (LinkSchemeMsg)
		R*: Files.Rider; 
	END; 

	NodeDesc* = RECORD 
		id, key*, org*: LONGINT; 
		old*, prev*: Node; 
	END; 

	Context* = POINTER TO ContextDesc; 

	ContextDesc* = RECORD 
		old*, new*: Node; 
		curDoc*: Documents.Document; 
		replace*, history*: BOOLEAN; 
	END; 
VAR 
	linkSchemes: LinkScheme; 
	linksIndex, keysIndex: BTrees.Tree; 
	linksFile: Files.File; 
	curKey, curID, loadingKey*: LONGINT; 
	history: Node; 
	context*: Context; 
	linkC*, oldLinkC*: INTEGER; 
	linkMethods*, linkPictMethods*: TextGadgets0.Methods; 
	link, cmpBuf: ARRAY MaxLink OF CHAR; 
	diskCache: Files.File; 
	linkBeg, linkEnd: LONGINT; 
	linkF: Gadgets.Frame; 
	docW*, docH*: INTEGER; 
	keepurls: BOOLEAN; 

	PROCEDURE ^ HexVal(ch: CHAR): INTEGER; 
	PROCEDURE ^ HexDigit(i: INTEGER): CHAR; 
	PROCEDURE ^ UnESC*(VAR url: ARRAY OF CHAR); 
	PROCEDURE ^ ESC*(VAR str: ARRAY OF CHAR; special: CHAR); 
	PROCEDURE ^ LinkSchemeByPrefix*(prefix: ARRAY OF CHAR): LinkScheme; 
	PROCEDURE ^ LinkSchemeByKey*(key: LONGINT): LinkScheme; 
	PROCEDURE ^ RegisterLink*(VAR link: ARRAY OF CHAR): LONGINT; 
	PROCEDURE ^ BuildKey*(base: DefURL; link: ARRAY OF CHAR): LONGINT; 
	PROCEDURE ^ TempDocName*(prefix: ARRAY OF CHAR; VAR name: ARRAY OF CHAR; VAR key: LONGINT); 
	PROCEDURE ^ RetrieveLink*(key: LONGINT; VAR link: ARRAY OF CHAR); 
	PROCEDURE ^ StoreLink*(VAR R: Files.Rider; key: LONGINT); 
	PROCEDURE ^ LoadLink*(VAR R: Files.Rider; VAR key: LONGINT); 
	PROCEDURE ^ LinkSchemeHandler*(L: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ LinkControlHandler(obj: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ NewLinkControl*; 
	PROCEDURE ^ LinkControl*(key: LONGINT): Objects.Object; 
	PROCEDURE ^ NodeByDoc*(doc: Documents.Document): Node; 
	PROCEDURE ^ LinkNodeToDoc*(doc: Documents.Document; node: Node); 
	PROCEDURE ^ Remember*(key: LONGINT; old: Node; VAR new: Node); 
	PROCEDURE ^ RememberOrg*(org: LONGINT; old: Node; VAR new: Node); 
	PROCEDURE ^ RemoveNode(node: Node); 
	PROCEDURE ^ DocNameByKey*(VAR name: ARRAY OF CHAR; key: LONGINT); 
	PROCEDURE ^ SetVisited(key: LONGINT); 
	PROCEDURE ^ SetVisitedCol(doc: Documents.Document); 
	PROCEDURE ^ Open(VAR name: ARRAY OF CHAR): Documents.Document; 
	PROCEDURE ^ FollowKeyLink*(cont: Context; newDoc: LONGINT); 
	PROCEDURE ^ FollowLink*; 
	PROCEDURE ^ ReplaceCurDoc*(key: LONGINT; newD: Documents.Document); 
	PROCEDURE ^ FindBeg(T: Texts.Text; VAR pos: LONGINT); 
	PROCEDURE ^ ScrollTo*(F: TextGadgets.Frame; pos: LONGINT); 
	PROCEDURE ^ VisitNode(curDoc: Documents.Document; cnode, node: Node); 
	PROCEDURE ^ Back*; 
	PROCEDURE ^ LocateString(F: TextGadgets0.Frame; x, y, X, Y: INTEGER; VAR loc: TextGadgets0.Loc); 
	PROCEDURE ^ SplitFileAdr*(VAR url, path, label: ARRAY OF CHAR): LONGINT; 
	PROCEDURE ^ DecPath(VAR path, dpath: ARRAY OF CHAR); 
	PROCEDURE ^ Path*(base: DefURL; VAR url, value: ARRAY OF CHAR); 
	PROCEDURE ^ CheckPrefix*(VAR link: ARRAY OF CHAR): LONGINT; 
	PROCEDURE ^ FileSchemeHandler(L: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ NewLinkScheme*; 
	PROCEDURE ^ LoadDoc(D: Documents.Document); 
	PROCEDURE ^ NewDoc*; 
	PROCEDURE ^ CacheText*(key: LONGINT; text: Texts.Text); 
	PROCEDURE ^ CacheDoc*(key: LONGINT; doc: Documents.Document); 
	PROCEDURE ^ Reload*; 
	PROCEDURE ^ GetCachedDoc*(key: LONGINT): Documents.Document; 
	PROCEDURE ^ GetCachedText*(key: LONGINT): Texts.Text; 
	PROCEDURE ^ ClearCache*; 
	PROCEDURE ^ Background(F: TextGadgets0.Frame; R: Display3.Mask; X, Y, x, y, w, h: INTEGER); 
	PROCEDURE ^ Visited*(key: LONGINT): BOOLEAN; 
	PROCEDURE ^ InitIndex(new: BOOLEAN); 
	PROCEDURE ^ FreeMod; 
	PROCEDURE ^ Init; 
BEGIN
END HyperDocs.
