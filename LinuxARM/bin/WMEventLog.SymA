MODULE WMEventLog;
	IMPORT Events, EventsUtils, EventsMemoryLog, Commands, Modules, Kernel, Dates, Strings, WMWindowManager, WMComponents, WMStandardComponents, WMGrids, WMStringGrids, WMGraphics, WMEditors, WMMessages, WMRestorable, WMRectangles, WMEvents, WMDialogs;
CONST 
	WindowTitle = \"Event Log"\; 
	DefaultWidth = 640; 
	DefaultHeight = 300; 
	PollingInterval = 1000; 
	GridBgFillColor = SIGNED32(3772834047); 
	NofColumns = 7; 
	ColorUnknown = SIGNED32(3233857791); 
	ColorInformation = WMGraphics.White; 
	ColorWarning = WMGraphics.Yellow; 
	ColorError = SIGNED32(4278190272); 
	ColorCritical = SIGNED32(4278190304); 
	ColorAlert = WMGraphics.Blue; 
	ColorFailure = WMGraphics.Red; 
	ColorOther = WMGraphics.White; 
	DateTimeFormat = \"yyyy.mm.dd hh:nn:ss"\; 
	Running = 1; 
	Terminating = 2; 
	Terminated = 3; 
TYPE 
	EventLog* = OBJECT {EXCLUSIVE} (WMComponents.VisualComponent)
	VAR 
		grid: WMStringGrids.StringGrid; 
		spacings: WMGrids.Spacings; 
		events: EventsUtils.EventContainer; 
		eventsInGrid: SIZE; 
		timeEdit, originatorEdit, typeEdit, classEdit, subclassEdit, codeEdit, messageEdit: WMEditors.Editor; 
		updateBtn, clearBtn: WMStandardComponents.Button; 
		statusLabel: WMStandardComponents.Label; 
		nofEventsInGrid, nofEventsTot, containerSize: SIZE; 
		lastCleared, stamp, lastStamp: SIZE; 
		update, fullUpdate: BOOLEAN; 
		state: SIGNED32; 
		timer: Kernel.Timer; 

		PROCEDURE ^ HandleButtons(sender, data: ANY ); 
		PROCEDURE ^ HandleEditors(sender, data: ANY ); 
		PROCEDURE ^ FilterTime(event: Events.Event; VAR discard: BOOLEAN); 
		PROCEDURE ^ FilterType(event: Events.Event; VAR discard: BOOLEAN); 
		PROCEDURE ^ FilterOriginator(event: Events.Event; VAR discard: BOOLEAN); 
		PROCEDURE ^ FilterClassification(event: Events.Event; VAR discard: BOOLEAN); 
		PROCEDURE ^ FilterMessage(event: Events.Event; VAR discard: BOOLEAN); 
		PROCEDURE ^ Filter(event: Events.Event; VAR discard: BOOLEAN); 
		PROCEDURE ^ UpdateRow(row: SIGNED32; event: Events.Event); 
		PROCEDURE ^ FullUpdate(wrapper: EventsUtils.EventWrapper; nofEvents: SIZE); 
		PROCEDURE ^ IncrementalUpdate(wrapper: EventsUtils.EventWrapper; nofEvents: SIZE): SIZE; 
		PROCEDURE ^ UpdateStatusLabel; 
		PROCEDURE ^ Update; 
		PROCEDURE ^ NewGrid(): WMStringGrids.StringGrid; 
		PROCEDURE ^ CreateFilterPanel(): WMStandardComponents.Panel; 
		PROCEDURE ^ CreateStatusPanel(): WMStandardComponents.Panel; 
		PROCEDURE ^ Finalize*; 
		PROCEDURE ^ SetEvents*(events: EventsUtils.EventContainer); 
		PROCEDURE ^ ClearLog; 
		PROCEDURE ^  & Init*; 
	BEGIN{ACTIVE} 
	END EventLog; 

	KillerMsg = OBJECT 
	END KillerMsg; 

	Window = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		eventLog: EventLog; 
		loadBtn, storeBtn: WMStandardComponents.Button; 
		filenameEdit: WMEditors.Editor; 

		PROCEDURE ^ HandleLoadButton(sender, data: ANY ); 
		PROCEDURE ^ HandleStoreButton(sender, data: ANY ); 
		PROCEDURE ^ SetEvents(events: EventsUtils.EventContainer); 
		PROCEDURE ^ CreateFilePanel(): WMComponents.VisualComponent; 
		PROCEDURE ^ CreateForm(): WMComponents.VisualComponent; 
		PROCEDURE ^ Handle*(VAR x: WMMessages.Message); 
		PROCEDURE ^  & New*(c: WMRestorable.Context); 
		PROCEDURE ^ Close*; 
	END Window; 
VAR 
	nofWindows: SIGNED32; 
	StrEventLog: Strings.String; 

	PROCEDURE ^ InitStrings; 
	PROCEDURE ^ NewEditor(CONST caption: ARRAY OF CHAR; alignment: INTEGER; width: SIZE; onEnter: WMEvents.EventListener): WMEditors.Editor; 
	PROCEDURE ^ Open*; 
	PROCEDURE ^ OpenFile*(context: Commands.Context); 
	PROCEDURE ^ Restore*(context: WMRestorable.Context); 
	PROCEDURE ^ IncCount; 
	PROCEDURE ^ DecCount; 
	PROCEDURE ^ Cleanup; 
BEGIN
END WMEventLog.
