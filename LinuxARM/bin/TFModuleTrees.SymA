MODULE TFModuleTrees;
	IMPORT WMStandardComponents, WMGraphics, WMProperties, WMComponents, Strings, KernelLog, WMTrees, PETTrees, BimboScanner, TFAOParser, TS := TFTypeSys, ST := TFScopeTools, Kernel, WMPopups, WMTextView, WMEditors, TextUtilities, Texts, WMDialogs, Diagnostics, Streams, Raster, WMRectangles, WMStringGrids, WMGrids, WMWindowManager, WMMessages;
CONST 
	ProcOther = 0; 
	ProcCommand = 1; 
	ImageCommandProc = \"ModuleTreesIcons.tar://arrow-red.png"\; 
	DoAutoRefresh = FALSE; 
TYPE 
	Reference = POINTER TO RECORD 
		next: Reference; 
		fp, tp, np: SIZE; 
		no: TS.NamedObject; 
	END; 

	RefArray = POINTER TO ARRAY OF Reference; 

	Comment = POINTER TO RECORD 
		next: Comment; 
		fp, tp: SIZE; 
		h: WMTextView.Highlight; 
	END; 

	CurrentHighlights = POINTER TO RECORD 
		next: CurrentHighlights; 
		h: WMTextView.Highlight; 
	END; 

	TextInfo = OBJECT (PETTrees.TreeNode)
	VAR 
		next: TextInfo; 
		fp, tp: SIZE; 
		name: Strings.String; 
		def: TS.NamedObject; 
	END TextInfo; 

	SelectWindow* = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		edit: WMEditors.Editor; 
		list: WMStringGrids.StringGrid; 
		spacings: WMGrids.Spacings; 
		curEditStr: ARRAY 64 OF CHAR; 
		table: TS.ObjectList; 
		scope: TS.Scope; 
		firstLevel: BOOLEAN; 
		destinationText: Texts.Text; 
		startPos, cursorPos: SIZE; 

		PROCEDURE ^ CreateForm(): WMComponents.VisualComponent; 
		PROCEDURE ^  & New*(text: Texts.Text; startPos, cursorPos: SIZE; x, y: SIZE; CONST prefix: ARRAY OF CHAR; scope: TS.Scope; first: BOOLEAN); 
		PROCEDURE ^ ListKeyPressed(ucs: SIZE; flags: SET; VAR keySym: SIZE; VAR handled: BOOLEAN); 
		PROCEDURE ^ EditKeyPressed(ucs: SIZE; flags: SET; VAR keySym: SIZE; VAR handled: BOOLEAN); 
		PROCEDURE ^ ScheduleHide; 
		PROCEDURE ^ WriteSelected; 
		PROCEDURE ^ ClearSelection; 
		PROCEDURE ^ Ok*(sender, data: ANY ); 
		PROCEDURE ^ TextChanged*(sender, data: ANY ); 
		PROCEDURE ^ FocusLost*; 
		PROCEDURE ^ Hide; 
		PROCEDURE ^ Handle*(VAR x: WMMessages.Message); 
	END SelectWindow; 

	ModuleTree* = OBJECT {EXCLUSIVE} (PETTrees.Tree)
	VAR 
		nextUseBtn, renameBtn, publicBtn: WMStandardComponents.Button; 
		updateTimer: WMStandardComponents.Timer; 
		useHighlights: CurrentHighlights; 
		currentNode: TextInfo; 
		definitions: TextInfo; 
		currentUse: Reference; 
		actualParameter: Reference; 
		modified: BOOLEAN; 
		module: TS.Module; 
		posKeeper: TextUtilities.TextPositionKeeper; 
		comments: Comment; 
		references: Reference; 
		errorHighlights, tempHighlights: CurrentHighlights; 
		singleSuggestion: TS.NamedObject; 
		suggestionStart: SIZE; 
		cursorScope: TS.Scope; 
		cursorIsFirstLevelScope: BOOLEAN; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ OnStartDrag(sender, data: ANY ); 
		PROCEDURE ^ SetEditor*(e: WMEditors.Editor); 
		PROCEDURE ^ BrowseToDefinition*(sender, data: ANY ); 
		PROCEDURE ^ Complete*(sender, data: ANY ); 
		PROCEDURE ^ ContextMenu(sender: ANY ; x, y: SIZE); 
		PROCEDURE ^ Refresh(rootNode: WMTrees.TreeNode); 
		PROCEDURE ^ AddNodes*(parent: PETTrees.TreeNode; diagnostics: Diagnostics.Diagnostics; log: Streams.Writer); 
		PROCEDURE ^ HighlightReferences(no: TS.NamedObject); 
		PROCEDURE ^ SelectReferences(d: TextInfo; gotoDef: BOOLEAN); 
		PROCEDURE ^ SelectActualParameters(def: TS.NamedObject); 
		PROCEDURE ^ HasActualParameters(def: TS.NamedObject): BOOLEAN; 
		PROCEDURE ^ ClickNode*(sender, data: ANY ); 
		PROCEDURE ^ ClearHighlights; 
		PROCEDURE ^ ClearErrorHighlights; 
		PROCEDURE ^ PublicBtnHandler(sender, data: ANY ); 
		PROCEDURE ^ RenameHandler(sender, data: ANY ); 
		PROCEDURE ^ SelectRangeHandler(sender, data: ANY ); 
		PROCEDURE ^ DelActualParameterHandler(sender, data: ANY ); 
		PROCEDURE ^ NextUseHandler(sender, data: ANY ); 
		PROCEDURE ^ GetTextInfo(CONST name: ARRAY OF CHAR; fp, tp: SIZE; color: WMGraphics.Color; style: SET; def: TS.NamedObject): TextInfo; 
		PROCEDURE ^ NewNode(parent: WMTrees.TreeNode; caption: Strings.String; ti: TextInfo): WMTrees.TreeNode; 
		PROCEDURE ^ TraverseTypeScope(curNode: WMTrees.TreeNode; t: TS.Type); 
		PROCEDURE ^ TraverseProcDecl(curNode: WMTrees.TreeNode; p: TS.ProcDecl); 
		PROCEDURE ^ MakeReference(no: TS.NamedObject; from, to: SIZE); 
		PROCEDURE ^ UnknownIdentifierError(scope: TS.Scope; first: BOOLEAN; ident: TS.Ident); 
		PROCEDURE ^ TraverseScope(curNode: WMTrees.TreeNode; scope: TS.Scope); 
		PROCEDURE ^ GetNextNode(this: WMTrees.TreeNode; ignoreChildren: BOOLEAN): WMTrees.TreeNode; 
		PROCEDURE ^ SelectNodeByNamedObject(no: TS.NamedObject; gotoDef: BOOLEAN): BOOLEAN; 
		PROCEDURE ^ FindScopeByPos(pos: SIGNED32); 
		PROCEDURE ^ FindIdentByPos(pos: SIZE); 
		PROCEDURE ^ HandleMacro*(sender, data: ANY ); 
		PROCEDURE ^ Follow(sender, data: ANY ); 
		PROCEDURE ^ AddComments(c: TS.Comments); 
		PROCEDURE ^ SearchUses*(d: TS.Scope; VAR ref: Reference); 
		PROCEDURE ^ TextChanged(sender, data: ANY ); 
		PROCEDURE ^ Finalize*; 
	END ModuleTree; 
VAR 
	PrototypeShowTypeHierarchy, PrototypeShowImportedModules: WMProperties.BooleanProperty; 
	treeFontOberon10Plain, treeFontOberon10Bold, treeFontOberon10Italic: WMGraphics.Font; 
	PMTonBrowseExternal: Strings.String; 

	PROCEDURE ^ GetInsertString(ident: TS.NamedObject; VAR newStr: ARRAY OF CHAR); 
	PROCEDURE ^ FindSuggestions(scope: TS.Scope; first: BOOLEAN; prefix: ARRAY OF CHAR; suggestions: TS.ObjectList); 
	PROCEDURE ^ GetProcedureType(proc: TS.ProcDecl): SIGNED32; 
	PROCEDURE ^ GenModuleTree*(): PETTrees.Tree; 
BEGIN
END TFModuleTrees.
