MODULE TestMenu;
	IMPORT KernelLog, Streams, Modules, Commands, Strings, Files, XML, XMLObjects, XMLScanner, XMLParser, WMGraphics, WMMessages, WM := WMWindowManager, WMComponents, WMStandardComponents, WMTrees, WMMenus;
CONST 
TYPE 
	KillerMsg = OBJECT 
	END KillerMsg; 

	Window* = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		menu: WMTrees.Tree; 
		menuPanel: WMMenus.MenuPanel; 
		hasErrors: BOOLEAN; 

		PROCEDURE ^ CreateForm(): WMComponents.VisualComponent; 
		PROCEDURE ^  & New*; 
		PROCEDURE ^ AddMenuItem(node: WMTrees.TreeNode; xml: XML.Element); 
		PROCEDURE ^ Selected(sender, data: ANY ); 
		PROCEDURE ^ AddSubMenu(node: WMTrees.TreeNode; xml: XML.Element); 
		PROCEDURE ^ SetDocument(xml: XML.Element); 
		PROCEDURE ^ Error(pos, line, row: Streams.Position; CONST msg: ARRAY OF CHAR); 
		PROCEDURE ^ Read(CONST name: ARRAY OF CHAR); 
		PROCEDURE ^ Close*; 
		PROCEDURE ^ Handle*(VAR x: WMMessages.Message); 
	END Window; 

	Command = OBJECT 
	VAR 
		commandString: ARRAY 256 OF CHAR; 

		PROCEDURE ^  & Init(CONST commandString: ARRAY OF CHAR); 
		PROCEDURE ^ Execute; 
	END Command; 
VAR 
	nofWindows: SIGNED32; 
	lastMenu: WMTrees.Tree; 

	PROCEDURE ^ Open*; 
	PROCEDURE ^ HandleItemSelected(sender, data: ANY ); 
	PROCEDURE ^ OpenPopup*(context: Commands.Context); 
	PROCEDURE ^ IncCount; 
	PROCEDURE ^ DecCount; 
	PROCEDURE ^ Cleanup; 
BEGIN
END TestMenu.
