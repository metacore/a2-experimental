MODULE FoxDisassembler;
	IMPORT Streams, ObjectFile, Scanner := FoxScanner, Basic := FoxBasic, BitSets, D := Debugging, Files, Commands;
CONST 
	Trace = FALSE; 
TYPE 
	Unit* = ObjectFile.Unit; 

	Block* = POINTER TO RECORD (ObjectFile.Section)
		to-: Unit; 
		next-: Block; 
	END; 

	Disassembler* = OBJECT 
	VAR 
		first, block: Block; 
		w: Streams.Writer; 
		stringWriter: Streams.StringWriter; 
		code, data: BitSets.BitSet; 
		codeUnit, dataUnit: ObjectFile.Bits; 
		codeDisplacement-, dataDisplacement: Unit; 

		PROCEDURE ^  & Init*(w: Streams.Writer); 
		PROCEDURE ^ GetLogFile*(CONST binaryFileName: ARRAY OF CHAR): Files.File; 
		PROCEDURE ^ BlockHeader(block: Block); 
		PROCEDURE ^ WriteReference*(adr: Unit; isCode: BOOLEAN; w: Streams.Writer); 
		PROCEDURE ^ DisassembleInstruction*(bitset: BitSets.BitSet; VAR address: Unit; maxInstructionSize: Unit; w: Streams.Writer); 
		PROCEDURE ^ DisassembleBlock(from, to: Unit); 
		PROCEDURE ^ DataBlock(from, to: Unit); 
		PROCEDURE ^ ParseLogFile*(file: Files.File): Block; 
		PROCEDURE ^ Disassemble*(code, data: BitSets.BitSet; codeUnit, dataUnit: ObjectFile.Bits; logFile: Files.File; address: ADDRESS); 
		PROCEDURE ^ SetDisplacements*(code, data: Unit); 
	END Disassembler; 

	PROCEDURE ^ FindPC*(context: Commands.Context); 
BEGIN
END FoxDisassembler.
