MODULE WMUtilities;
	IMPORT Modules, Commands, Options, Strings, TextUtilities, WMWindowManager, WMMessages, WMGraphics, WMComponents, WMDocumentEditor, Kernel;
CONST 
	Buttons = ((((WMDocumentEditor.StoreButton + WMDocumentEditor.FormatButton) + WMDocumentEditor.SearchButton) + WMDocumentEditor.WrapButton) + WMDocumentEditor.ClearButton); 
TYPE 
	KillerMsg = OBJECT 
	END KillerMsg; 

	Window* = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		editor-: WMDocumentEditor.Editor; 
		visible: BOOLEAN; 

		PROCEDURE ^  & New*(CONST title: ARRAY OF CHAR; width, height: LONGINT; alpha: BOOLEAN); 
		PROCEDURE ^ Handle*(VAR x: WMMessages.Message); 
		PROCEDURE ^ Close*; 
	END Window; 

	WindowWriter* = OBJECT (TextUtilities.TextWriter)
	VAR 
		window-: Window; 

		PROCEDURE ^ IsVisible*(): BOOLEAN; 
		PROCEDURE ^ SetWindowBgColor*(color: LONGINT); 
		PROCEDURE ^ SetWindowIcon*(image: WMGraphics.Image); 
		PROCEDURE ^ Close*; 
		PROCEDURE ^  & New*(CONST title: ARRAY OF CHAR; width, height: LONGINT; alpha: BOOLEAN); 
	END WindowWriter; 
VAR 
	nofWindows: LONGINT; 
	timeout: BOOLEAN; 

	PROCEDURE ^ Call*(context: Commands.Context); 
	PROCEDURE ^ TestWindow*; 
	PROCEDURE ^ TestWindowWriter*; 
	PROCEDURE ^ IncCount; 
	PROCEDURE ^ DecCount; 
	PROCEDURE ^ Timeout; 
	PROCEDURE ^ Cleanup; 
BEGIN
END WMUtilities.
