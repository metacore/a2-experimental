MODULE HTMLScanner;
	IMPORT KernelLog, Streams, Strings, DynamicStrings;
CONST 
	Invalid* =  -1; 
	TagElemStartOpen* = 0; 
	TagElemEndOpen* = 1; 
	TagDeclOpen* = 2; 
	TagClose* = 3; 
	TagEmptyElemClose* = 4; 
	TagXMLDeclOpen* = 5; 
	TagPIOpen* = 6; 
	TagPIClose* = 7; 
	TagCondSectOpen* = 8; 
	TagCondSectClose* = 9; 
	BracketOpen* = 10; 
	BracketClose* = 11; 
	ParenOpen* = 12; 
	ParenClose* = 13; 
	Comment* = 14; 
	CDataSect* = 15; 
	CharRef* = 16; 
	EntityRef* = 17; 
	ParamEntityRef* = 18; 
	CharData* = 19; 
	Literal* = 20; 
	Name* = 21; 
	Nmtoken* = 22; 
	PoundName* = 23; 
	Question* = 24; 
	Asterisk* = 25; 
	Plus* = 26; 
	Or* = 27; 
	Comma* = 28; 
	Percent* = 29; 
	Equal* = 30; 
	Eof* = 31; 
	LF = 0AX; 
	CR = 0DX; 
TYPE 
	String = Strings.String; 

	Scanner* = OBJECT 
	VAR 
		sym-: SHORTINT; 
		line-, col-, oldpos, pos: LONGINT; 
		reportError*: PROCEDURE {DELEGATE}(pos, line, row: LONGINT; msg: ARRAY OF CHAR); 
		nextCh: CHAR; 
		dynstr: DynamicStrings.DynamicString; 
		r: Streams.Reader; 

		PROCEDURE ^  & Init*(r: Streams.Reader); 
		PROCEDURE ^ Error(msg: ARRAY OF CHAR); 
		PROCEDURE ^ NextCh; 
		PROCEDURE ^ ReadTillChar(ch: CHAR); 
		PROCEDURE ^ SkipWhiteSpaces; 
		PROCEDURE ^ ScanNm; 
		PROCEDURE ^ ScanComment; 
		PROCEDURE ^ ScanSCRIPT*; 
		PROCEDURE ^ ScanSTYLE*; 
		PROCEDURE ^ ScanPInstruction*; 
		PROCEDURE ^ ScanMarkup*; 
		PROCEDURE ^ ScanContent*; 
		PROCEDURE ^ ScanAttributeValue*; 
		PROCEDURE ^ GetStr*(): String; 
		PROCEDURE ^ GetPos*(): LONGINT; 
		PROCEDURE ^ GetOldPos*(): LONGINT; 
	END Scanner; 

	PROCEDURE ^ IsWhiteSpace(ch: CHAR): BOOLEAN; 
	PROCEDURE ^ DefaultReportError(pos, line, col: LONGINT; msg: ARRAY OF CHAR); 
BEGIN
END HTMLScanner.
