MODULE LeoFrames IN Oberon;
	IMPORT Files, Display, Printer, Objects, Oberon, Display3, Printer3, Gadgets, Colors, GfxRegions, Gfx, GfxDisplay, GfxPrinter, Leonardo;
CONST 
TYPE 
	Frame* = POINTER TO FrameDesc; 

	FrameDesc* = RECORD (Gadgets.FrameDesc)
		ox*, oy*: INTEGER; 
		scale*: REAL; 
		col*: Display.Color; 
		framed*: BOOLEAN; 
	END; 

	RegData = RECORD (GfxRegions.EnumData)
		reg: GfxRegions.Region; 
		scale: REAL; 
		border: INTEGER; 
		dx, dy: INTEGER; 
	END; 

	MaskData = RECORD (GfxRegions.EnumData)
		mask: Display3.Mask; 
	END; 
VAR 
	MaskReg, ScaleReg: GfxRegions.Region; 
	DC: GfxDisplay.Context; 
	PC: GfxPrinter.Context; 

	PROCEDURE ^ AddRegionRect(x, y, w, h: INTEGER); 
	PROCEDURE ^ RegionFromMask*(mask: Display3.Mask): GfxRegions.Region; 
	PROCEDURE ^ AddScaledRect(llx, lly, urx, ury: INTEGER; VAR data: GfxRegions.EnumData); 
	PROCEDURE ^ ScaledRegion*(src: GfxRegions.Region; scale, border: REAL; dx, dy: INTEGER): GfxRegions.Region; 
	PROCEDURE ^ AddMaskRect(llx, lly, urx, ury: INTEGER; VAR data: GfxRegions.EnumData); 
	PROCEDURE ^ MaskFromRegion*(reg: GfxRegions.Region): Display3.Mask; 
	PROCEDURE ^ DisplayContext*(frame: Frame; llx, lly, urx, ury: INTEGER; clip: GfxRegions.Region): Gfx.Context; 
	PROCEDURE ^ PrinterContext*(frame: Frame; llx, lly, urx, ury: INTEGER; clip: GfxRegions.Region): Gfx.Context; 
	PROCEDURE ^ Color*(frame: Frame): Display.Color; 
	PROCEDURE ^ Restore(frame: Frame; x, y, w, h, fx, fy: INTEGER; mask: Display3.Mask); 
	PROCEDURE ^ Print(frame: Frame; VAR msg: Display.DisplayMsg); 
	PROCEDURE ^ Update(frame: Frame; VAR msg: Leonardo.UpdateMsg); 
	PROCEDURE ^ Select(frame: Frame; VAR msg: Display.SelectMsg); 
	PROCEDURE ^ HandleAttr*(frame: Frame; VAR msg: Objects.AttrMsg); 
	PROCEDURE ^ Copy*(VAR msg: Objects.CopyMsg; from, to: Frame); 
	PROCEDURE ^ Handle*(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ Init*(frame: Frame; fig: Leonardo.Figure); 
	PROCEDURE ^ New*; 
	PROCEDURE ^ NewFrame*; 
	PROCEDURE ^ ReadContainer(VAR r: Files.Rider; cont: Leonardo.Container); 
	PROCEDURE ^ HandleLayer(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ NewLayer*; 
BEGIN
END LeoFrames.
