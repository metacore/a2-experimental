MODULE GfxImages;
	IMPORT SYSTEM, Raster, GfxMatrix;
TYPE 
	Image* = Raster.Image; 

	ShiftProc* = PROCEDURE (VAR filter: Raster.Mode; src, dst: Image; sadr: ADDRESS; sbit: LONGINT; dadr: ADDRESS; dbit, len: LONGINT; t: REAL); 

	ScaleProc* = PROCEDURE (VAR filter: Raster.Mode; src, dst: Image; sadr: ADDRESS; sbit: LONGINT; dadr: ADDRESS; dbit, len: LONGINT; xy, dxy: REAL); 

	Filter* = RECORD (Raster.Mode)
		hshift*, vshift*: ShiftProc; 
		hscale*, vscale*: ScaleProc; 
	END; 
VAR 
	PreCache, Cache: Image; 
	hshift*, vshift*: ShiftProc; 

	PROCEDURE ^ HShift*(VAR filter: Raster.Mode; src, dst: Image; sadr: ADDRESS; sbit: LONGINT; dadr: ADDRESS; dbit, len: LONGINT; tx: REAL); 
	PROCEDURE ^ VShift*(VAR filter: Raster.Mode; src, dst: Image; sadr: ADDRESS; sbit: LONGINT; dadr: ADDRESS; dbit, len: LONGINT; ty: REAL); 
	PROCEDURE ^ HScale*(VAR filter: Raster.Mode; src, dst: Image; sadr: ADDRESS; sbit: LONGINT; dadr: ADDRESS; dbit, dlen: LONGINT; x, dx: REAL); 
	PROCEDURE ^ VScale*(VAR filter: Raster.Mode; src, dst: Image; sadr: ADDRESS; sbit: LONGINT; dadr: ADDRESS; dbit, dlen: LONGINT; y, dy: REAL); 
	PROCEDURE ^ LinearHShift*(VAR filter: Raster.Mode; src, dst: Image; sadr: ADDRESS; sbit: LONGINT; dadr: ADDRESS; dbit, len: LONGINT; tx: REAL); 
	PROCEDURE ^ LinearVShift*(VAR filter: Raster.Mode; src, dst: Image; sadr: ADDRESS; sbit: LONGINT; dadr: ADDRESS; dbit, len: LONGINT; ty: REAL); 
	PROCEDURE ^ LinearHScale*(VAR filter: Raster.Mode; src, dst: Image; sadr: ADDRESS; sbit: LONGINT; dadr: ADDRESS; dbit, dlen: LONGINT; x, dx: REAL); 
	PROCEDURE ^ LinearVScale*(VAR filter: Raster.Mode; src, dst: Image; sadr: ADDRESS; sbit: LONGINT; dadr: ADDRESS; dbit, dlen: LONGINT; y, dy: REAL); 
	PROCEDURE ^ InitFilter*(VAR filter: Filter; op: SHORTINT; hshift, vshift: ShiftProc; hscale, vscale: ScaleProc); 
	PROCEDURE ^ GetTempImage(VAR img, cache: Raster.Image; w, h: LONGINT); 
	PROCEDURE ^ FreeTempImage(VAR img, cache: Raster.Image); 
	PROCEDURE ^ Preprocess(VAR src: Raster.Image; VAR m: GfxMatrix.Matrix; VAR filter: Filter); 
	PROCEDURE ^ SkewRow(src, dst: Image; si, sj, w, di, dj: LONGINT; tx: REAL; VAR filter: Filter); 
	PROCEDURE ^ SkewRows(src, dst: Image; si, sj, w, h, dj: LONGINT; x, dx: REAL; VAR filter: Filter); 
	PROCEDURE ^ SkewCol(src, dst: Image; si, sj, h, di, dj: LONGINT; ty: REAL; VAR filter: Filter); 
	PROCEDURE ^ SkewCols(src, dst: Image; si, sj, w, h, di: LONGINT; y, dy: REAL; VAR filter: Filter); 
	PROCEDURE ^ Translate*(src, dst: Image; tx, ty: REAL; VAR filter: Filter); 
	PROCEDURE ^ Scale*(src, dst: Image; sx, sy, tx, ty: REAL; VAR filter: Filter); 
	PROCEDURE ^ Rotate*(src, dst: Image; sin, cos, tx, ty: REAL; VAR filter: Filter); 
	PROCEDURE ^ ShearRows*(src, dst: Image; sx, tx: REAL; VAR filter: Filter); 
	PROCEDURE ^ ShearCols*(src, dst: Image; sy, ty: REAL; VAR filter: Filter); 
	PROCEDURE ^ Transform*(src, dst: Image; m: GfxMatrix.Matrix; VAR filter: Filter); 
	PROCEDURE ^ InitNoFilter*(VAR filter: Filter); 
	PROCEDURE ^ InitLinearFilter*(VAR filter: Filter); 
BEGIN
END GfxImages.
