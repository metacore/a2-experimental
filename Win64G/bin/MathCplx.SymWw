MODULE MathCplx;
	IMPORT NbrInt, NbrRe, NbrCplx, DataErrors, MathRe;
CONST 
VAR 
	ln2, ln2Inv, ln10, ln10Inv: NbrRe.Real; 

	PROCEDURE ^ Random*(): NbrCplx.Complex; 
	PROCEDURE ^ Sqrt*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ IntPower*(z: NbrCplx.Complex; n: NbrInt.Integer): NbrCplx.Complex; 
	PROCEDURE ^ LnMod(z: NbrCplx.Complex): NbrRe.Real; 
	PROCEDURE ^ RealPower*(z: NbrCplx.Complex; x: NbrRe.Real): NbrCplx.Complex; 
	PROCEDURE ^ Power*(zc, ze: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ Exp*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ Exp2*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ Exp10*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ Ln*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ Log2*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ Log*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ Sin*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ Cos*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ Tan*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ ArcSin*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ ArcCos*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ ArcTan*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ Sinh*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ Cosh*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ Tanh*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ ArcSinh*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ ArcCosh*(z: NbrCplx.Complex): NbrCplx.Complex; 
	PROCEDURE ^ ArcTanh*(z: NbrCplx.Complex): NbrCplx.Complex; 
BEGIN
END MathCplx.
