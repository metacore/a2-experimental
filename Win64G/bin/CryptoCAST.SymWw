MODULE CryptoCAST;
	IMPORT S := SYSTEM, Ciphers := CryptoCiphers, U := CryptoUtils;
CONST 
TYPE 
	LI = LONGINT; 

	Key = RECORD 
		val: LONGINT; 
		rot: SHORTINT; 
	END; 

	Keys = RECORD 
		short: BOOLEAN; 
		data: ARRAY 16 OF Key; 
	END; 

	Block = ARRAY 2 OF SET; 

	Cipher* = OBJECT (Ciphers.Cipher)
	VAR 
		keys: Keys; 
		iv: Block; 

		PROCEDURE ^ InitKey*(CONST src: ARRAY OF CHAR; keybits: LONGINT); 
		PROCEDURE ^ SetIV*(CONST src: ARRAY OF CHAR; mode: SHORTINT); 
		PROCEDURE ^ Encrypt*(VAR buf: ARRAY OF CHAR; ofs, len: LONGINT); 
		PROCEDURE ^ Decrypt*(VAR buf: ARRAY OF CHAR; ofs, len: LONGINT); 
		PROCEDURE ^ EncryptBlock(VAR buf: ARRAY OF CHAR; p: LONGINT); 
		PROCEDURE ^ DecryptBlock(VAR buf: ARRAY OF CHAR; p: LONGINT); 
		PROCEDURE ^  & Init*; 
	END Cipher; 
VAR 
	T0, T1, T2, T3: ARRAY 256 OF LONGINT; 
	T4, T5, T6, T7: ARRAY 256 OF SET; 

	PROCEDURE ^ NewCipher*(): Ciphers.Cipher; 
	PROCEDURE ^ InitKeys(VAR keys: Keys; CONST src: ARRAY OF CHAR; len: LONGINT); 
	PROCEDURE ^ CAST1(VAR k: Key; VAR L, R: SET); 
	PROCEDURE ^ CAST2(VAR k: Key; VAR L, R: SET); 
	PROCEDURE ^ CAST3(VAR k: Key; VAR L, R: SET); 
	PROCEDURE ^ encrypt(VAR k: Keys; VAR b: Block); 
	PROCEDURE ^ decrypt(VAR k: Keys; VAR b: Block); 
	PROCEDURE ^ Init; 
BEGIN
END CryptoCAST.
