MODULE Scramble IN Oberon;
	IMPORT RandomNumbers, Files, Objects, Display, Fonts, Texts, Pictures, Display3, Effects, Strings, Gadgets, Oberon, Documents, Desktops;
CONST 
	Border = 1; 
	middle = 1; 
	left = 2; 
	MaxN = 6; 
	MaxM = 6; 
	Left = CHR(196); 
	Right = CHR(195); 
	Up = CHR(193); 
	Down = CHR(194); 
	CurVer = 0; 
	PictMenu = \"Scramble.Scramble[Start] Scramble.Num[Pict] Desktops.StoreDoc[Store]"\; 
	NumMenu = \"Scramble.Scramble[Start] Scramble.Num[Num] Desktops.StoreDoc[Store]"\; 
TYPE 
	Frame* = POINTER TO FrameDesc; 

	FrameDesc* = RECORD (Gadgets.FrameDesc)
		pict: Pictures.Picture; 
		n, m: INTEGER; 
		arrange: ARRAY MaxN OF ARRAY MaxM OF RECORD 
			x, y: INTEGER; 
		END; 
		empty: RECORD 
			x, y: INTEGER; 
		END; 
		focus, done, num: BOOLEAN; 
	END; 

	UpdateMsg = RECORD (Display.FrameMsg)
		i0, i1, j0, j1: INTEGER; 
	END; 
VAR 
	W: Texts.Writer; 

	PROCEDURE ^ CalcSize(F: Frame; x, y: INTEGER; VAR xo, yo, dx, dy: INTEGER); 
	PROCEDURE ^ DrawRect(F: Frame; Q: Display3.Mask; i0, i1, j0, j1, xo, yo, dx, dy: INTEGER); 
	PROCEDURE ^ Restore(F: Frame; Q: Display3.Mask; x, y, w, h: INTEGER); 
	PROCEDURE ^ Update(F: Frame; Q: Display3.Mask; x, y, w, h: INTEGER; VAR U: UpdateMsg); 
	PROCEDURE ^ CheckDone(F: Frame); 
	PROCEDURE ^ Consume(F: Frame; VAR M: Oberon.InputMsg); 
	PROCEDURE ^ Track(F: Frame; x, y: INTEGER; VAR M: Oberon.InputMsg); 
	PROCEDURE ^ Arrange(F: Frame; scramble: BOOLEAN); 
	PROCEDURE ^ CopyFrame(VAR M: Objects.CopyMsg; F, F1: Frame); 
	PROCEDURE ^ Handle*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ NewFrame*; 
	PROCEDURE ^ LoadDoc(D: Documents.Document); 
	PROCEDURE ^ StoreDoc(D: Documents.Document); 
	PROCEDURE ^ DocHandler*(D: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ NewDoc*; 
	PROCEDURE ^ Scramble*; 
	PROCEDURE ^ Num*; 
	PROCEDURE ^ Env(VAR S: Texts.Scanner; VAR F: Frame); 
	PROCEDURE ^ ChangePict*; 
	PROCEDURE ^ ChangeSize*; 
BEGIN
END Scramble.
