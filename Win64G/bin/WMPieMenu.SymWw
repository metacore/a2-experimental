MODULE WMPieMenu;
	IMPORT Strings, WMMessages, WMEvents, WMWindowManager, WMComponents, WMGraphics, WMProperties;
CONST 
	MenuPoints = 8; 
	InnerRadius = 15; 
	OuterRadius = 84; 
TYPE 
	String = Strings.String; 

	PieMenu = OBJECT {EXCLUSIVE} (WMComponents.VisualComponent)
	TYPE 
		; 
	VAR 
		lastX, lastY: LONGINT; 
		dir: ARRAY (4 * MenuPoints) OF RECORD 
			x, y: LONGINT; 
		END; 
		clDefault, clHover, clShadow, clLine: WMProperties.ColorProperty; 
		useBgBitmap: WMProperties.BooleanProperty; 
		bgBitmapName: WMProperties.StringProperty; 
		bgBitmap: WMGraphics.Image; 
		shadow: WMProperties.Int32Property; 
		dx, dy: LONGINT; 
		dirNr: LONGINT; 
		on0, on1, on2, on3, closeIt: WMEvents.EventSource; 
		images: ARRAY 4 OF WMGraphics.Image; 
		texts: ARRAY 4 OF Strings.String; 
		enabled, hover: SET; 
		sent: BOOLEAN; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ RecacheProperties*; 
		PROCEDURE ^ PropertyChanged*(sender, prop: ANY); 
		PROCEDURE ^ GetSector(nr: LONGINT; VAR s: ARRAY OF WMGraphics.Point2d); 
		PROCEDURE ^ SetImage(nr: LONGINT; image: WMGraphics.Image); 
		PROCEDURE ^ SetText(nr: LONGINT; text: Strings.String); 
		PROCEDURE ^ SetEnabled(s: SET); 
		PROCEDURE ^ SetHover(s: SET); 
		PROCEDURE ^ PointerMove*(x, y: LONGINT; keys: SET); 
		PROCEDURE ^ PointerUp*(x, y: LONGINT; keys: SET); 
		PROCEDURE ^ KeyEvent*(ucs: LONGINT; flags: SET; VAR keySym: LONGINT); 
		PROCEDURE ^ Draw*(canvas: WMGraphics.Canvas); 
	END PieMenu; 

	Menu* = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		piemenu: PieMenu; 
		on0-, on1-, on2-, on3-, onClose-: WMEvents.EventSource; 
		lastX*, lastY*: LONGINT; 
		caller: WMWindowManager.Window; 
		pointerReturned, bt*: BOOLEAN; 
		userData*: ANY; 
		shown: BOOLEAN; 

		PROCEDURE ^ CreateForm(): WMComponents.VisualComponent; 
		PROCEDURE ^ FocusLost*; 
		PROCEDURE ^ CloseIt(sender, data: ANY); 
		PROCEDURE ^  & New*; 
		PROCEDURE ^ SetImage*(nr: LONGINT; image: WMGraphics.Image); 
		PROCEDURE ^ SetText*(nr: LONGINT; text: Strings.String); 
		PROCEDURE ^ SetEnabled*(enabled: SET); 
		PROCEDURE ^ Show*(caller: WMWindowManager.Window; x, y: LONGINT; bt: BOOLEAN); 
		PROCEDURE ^ Close*; 
	END Menu; 
VAR 
	ColorPrototype, ProtoPmClDefault, ProtoPmClHover, ProtoPmClShadow, ProtoPmClLine: WMProperties.ColorProperty; 
	Int32Prototype, ProtoPmShadow: WMProperties.Int32Property; 
	BooleanPrototype, ProtoPmUseBgBitmap: WMProperties.BooleanProperty; 
	StringPrototype, ProtoPmBgBitmapName: WMProperties.StringProperty; 
	StrPieMenu: Strings.String; 

	PROCEDURE ^ InitStrings; 
	PROCEDURE ^ InitPrototypes; 
BEGIN
END WMPieMenu.
