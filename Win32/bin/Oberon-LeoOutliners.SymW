MODULE LeoOutliners IN Oberon;
	IMPORT Files, Math IN A2, Objects, Gadgets, GfxMatrix, GfxPaths, Gfx, LeoPens;
CONST 
	outlined* = 0; 
	inverted* = 1; 
	parallel* = 2; 
	left* = 3; 
	right* = 4; 
	forwards* = 0; 
	both* = 1; 
	backwards* = 2; 
TYPE 
	Outliner* = POINTER TO OutlinerDesc; 

	OutlinerDesc* = RECORD (LeoPens.WidePenDesc)
		base*: LeoPens.Pen; 
		mode*: SIGNED8; 
	END; 

	Arrow* = POINTER TO ArrowDesc; 

	ArrowDesc* = RECORD (OutlinerDesc)
		dir*: SIGNED8; 
		len*: FLOAT32; 
		coff*, cdist*: FLOAT32; 
		bdist, edist, length: LeoPens.DistArray; 
		n: SIGNED32; 
	END; 
VAR 
	OutlinerMethods, ArrowMethods: LeoPens.Methods; 
	Split: ARRAY 3 OF FLOAT32; 

	PROCEDURE ^ GetHalfAxisVector(dxi, dyi, dxo, dyo: FLOAT32; VAR hx, hy: FLOAT32); 
	PROCEDURE ^ Enter(pen: Outliner; w, x, y, dxi, dyi, dxo, dyo, tan: FLOAT32); 
	PROCEDURE ^ Join(pen: Outliner; w, x, y, dxi, dyi, dxo, dyo, tani, tano: FLOAT32); 
	PROCEDURE ^ Exit(pen: Outliner; w, x, y, dxi, dyi, dxo, dyo, tan: FLOAT32); 
	PROCEDURE ^ CopyOutliner*(VAR msg: Objects.CopyMsg; from, to: Outliner); 
	PROCEDURE ^ HandleOutliner*(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ InitOutliner*(pen: Outliner; base: LeoPens.Pen; width: FLOAT32; mode: SIGNED8); 
	PROCEDURE ^ NewOutliner*; 
	PROCEDURE ^ DrawOutline(pen: Outliner; w: FLOAT32; path: GfxPaths.Path); 
	PROCEDURE ^ OutlinePath(pen: Outliner; ctxt: Gfx.Context); 
	PROCEDURE ^ BeginOutliner(pen: LeoPens.Pen; ctxt: Gfx.Context); 
	PROCEDURE ^ EndOutliner(pen: LeoPens.Pen); 
	PROCEDURE ^ RenderOutliner(pen: LeoPens.Pen; ctxt: Gfx.Context; VAR bdist, edist: ARRAY OF FLOAT32; n: SIGNED32); 
	PROCEDURE ^ InitOutliners; 
	PROCEDURE ^ CopyArrow*(VAR msg: Objects.CopyMsg; from, to: Arrow); 
	PROCEDURE ^ HandleArrow*(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ InitArrow*(pen: Arrow; base: LeoPens.Pen; dir, mode: SIGNED8; len, coff, cdist, w: FLOAT32); 
	PROCEDURE ^ NewArrow*; 
	PROCEDURE ^ DrawArrowSide(pen: Arrow; sign, split: FLOAT32; path: GfxPaths.Path); 
	PROCEDURE ^ DrawArrow(pen: Arrow; ctxt: Gfx.Context); 
	PROCEDURE ^ BeginArrow(pen: LeoPens.Pen; ctxt: Gfx.Context); 
	PROCEDURE ^ EndArrow(pen: LeoPens.Pen); 
	PROCEDURE ^ EnterArrow(pen: LeoPens.Pen; x, y, dx, dy, blen: FLOAT32); 
	PROCEDURE ^ ExitArrow(pen: LeoPens.Pen; dx, dy, elen: FLOAT32); 
	PROCEDURE ^ RenderArrow(pen: LeoPens.Pen; ctxt: Gfx.Context; VAR blen, elen: ARRAY OF FLOAT32; n: SIGNED32); 
	PROCEDURE ^ InitArrows; 
BEGIN
END LeoOutliners.
