MODULE vyBitmaps IN Oberon;
	IMPORT Files, vyBase, vyHostTexts;
CONST 
	ClusterSize = 1024; 
	MaxNumOfClusters = 1024; 
	BUFSIZE = 1024; 
TYPE 
	Color* = RECORD 
		r*, g*, b*: SIGNED16; 
	END; 

	Colors* = ARRAY 256 OF Color; 

	PixelCluster = POINTER TO PixelClusterDesc; 

	PixelClusterDesc = RECORD 
		pixel: ARRAY ClusterSize OF SET; 
	END; 

	PClusterArray = ARRAY MaxNumOfClusters OF PixelCluster; 

	tBitmap* = POINTER TO tBitmapDesc; 

	tBitmapDesc* = RECORD (vyBase.ObjDesc)
		W-, H-, Depth-, ColorDepth-: SIGNED16; 
		PCluster: POINTER TO PClusterArray; 
		colors-: Colors; 
	END; 
VAR 
	NPOS, NCLUSTER, NSET, NBIT: SIGNED32; 
	BUFFER: ARRAY BUFSIZE OF CHAR; 

	PROCEDURE ^ exp2*(z: SIGNED16): SIGNED16; 
	PROCEDURE ^ bit*(VAR pos: SIGNED8; VAR number: SIGNED16): SIGNED16; 
	PROCEDURE ^ NewBitmap*(W, H, Depth, ColorDepth: SIGNED32): tBitmap; 
	PROCEDURE ^ GetPosition(bmp: tBitmap; x, y: SIGNED32; VAR pos, cluster, set, bit: SIGNED32); 
	PROCEDURE ^ SetNextPixel*(Bitmap: tBitmap; val: SIGNED32); 
	PROCEDURE ^ SetAPixel*(Bitmap: tBitmap; X, Y: SIGNED32; val: SIGNED32); 
	PROCEDURE ^ SetARect*(Bitmap: tBitmap; RectX, RectY, W, H: SIGNED32; val: SIGNED32); 
	PROCEDURE ^ SetALine*(Bitmap: tBitmap; FromX, FromY, ToX, ToY: SIGNED32; val: SIGNED32); 
	PROCEDURE ^ GetAPixel*(Bitmap: tBitmap; X, Y: SIGNED32): SIGNED32; 
	PROCEDURE ^ SetAColor*(Bitmap: tBitmap; i: SIGNED16; col: Color); 
	PROCEDURE ^ WriteColor(RF: vyBase.FilesWriter; col: Color); 
	PROCEDURE ^ ReadColor(RF: vyBase.FilesReader; VAR col: Color); 
	PROCEDURE ^ Write*(VAR RF: vyBase.FilesWriter; Bitmap: tBitmap); 
	PROCEDURE ^ Read*(VAR RF: vyBase.FilesReader; VAR Bitmap: tBitmap); 
	PROCEDURE ^ ImportGIF*(VAR RF: vyBase.FilesReader; VAR Bitmap: tBitmap); 
	PROCEDURE ^ ExportGIF*(VAR RF: vyBase.FilesWriter; Bitmap: tBitmap); 
	PROCEDURE ^ CopyColors*(source: tBitmap; VAR dest: tBitmap); 
	PROCEDURE ^ CopyBitmap*(source: tBitmap; VAR dest: tBitmap); 
	PROCEDURE ^ ResizedBitmap*(source: tBitmap; w, h: SIGNED16): tBitmap; 
BEGIN
END vyBitmaps.
