MODULE EFIA2Loader;
	IMPORT SYSTEM, EFI, Machine := EFIMachine, EFILib, EFIFileProtocol, EFIGraphicsOutput, EFIGraphicalConsole, Trace;
CONST 
	traceDebug = TRUE; 
	kernelAddress = 1048576; 
	bootTableAddress =  -1; 
VAR 
	bootTableBegin: ADDRESS; 
	bootTableEnd: ADDRESS; 
	bootTableCfgStrEntry: ADDRESS; 

	PROCEDURE ^ SearchGraphicsMode(prot: EFIGraphicsOutput.Protocol; prefWidth, prefHeight, prefDepth, prefFormat: SIGNED32; VAR info: EFIGraphicsOutput.GraphicsModeInfo): SIGNED32; 
	PROCEDURE ^ GetFrameBuffer(prefWidth, prefHeight, prefDepth, prefFormat: SIGNED32; VAR framebufAddr: ADDRESS; VAR framebufSize: SIZE; VAR info: EFIGraphicsOutput.GraphicsModeInfo): EFI.Status; 
	PROCEDURE ^ PrintGraphicsModes; 
	PROCEDURE ^ LoadBootTable(CONST configFileName: ARRAY OF EFI.Char16; VAR btAddr: ADDRESS): EFI.Status; 
	PROCEDURE ^ AddConfig(CONST name, val: ARRAY OF CHAR); 
	PROCEDURE ^ AddConfigA(name: ADDRESS; namelen: SIGNED32; val: ADDRESS; vallen: SIGNED32); 
	PROCEDURE ^ GetConfig(CONST name: ARRAY OF CHAR; VAR val: ARRAY OF CHAR); 
	PROCEDURE ^ Allocate(allocAddr: EFI.PhysicalAddress; kernelPages: SIGNED32): EFI.Status; 
	PROCEDURE ^ LoadKernel(CONST kernelFileName: ARRAY OF EFI.Char16; VAR kernelAddr: ADDRESS; VAR kernelSize: SIGNED32): EFI.Status; 
	PROCEDURE ^ LoadA2; 
BEGIN
END EFIA2Loader.
