MODULE Hex IN Oberon;
	IMPORT BIT IN A2, Reals IN A2, Input, Files, Fonts, Display, Display3, Printer, Printer3, Objects, Texts, ListRiders, Gadgets, Views, Effects, Oberon, Documents, Desktops, Strings;
CONST 
	Version = 1; 
	FlipCol = 2; 
	bufSize = 512; 
	MaxPatLen = 32; 
	BarW = 15; 
	SliderH = 3; 
	Gab = 5; 
	Left = 4; 
	Top = 4; 
	Bot = 4; 
	LArrow = 0C4X; 
	RArrow = 0C3X; 
	UArrow = 0C1X; 
	DArrow = 0C2X; 
	UPage = 0A2X; 
	DPage = 0A3X; 
	Home = 0A8X; 
	End = 0A9X; 
	TAB = 9X; 
	CR = 0DX; 
	BS = 7FX; 
	DEL = 0A1X; 
	INS = 0A0X; 
	Menu = \"Desktops.Copy[Copy] Hex.Search[Search] Desktops.StoreDoc[Store]"\; 
TYPE 
	Loc* = RECORD 
		org*, pos*: SIGNED32; 
		x*, y*, w*: SIGNED16; 
		x1, w1: SIGNED16; 
	END; 

	Frame* = POINTER TO FrameDesc; 

	FrameDesc* = RECORD (Gadgets.FrameDesc)
		file: Texts.Text; 
		org*: SIGNED32; 
		nibble, insert: BOOLEAN; 
		car*: BOOLEAN; 
		carloc*: Loc; 
		pointloc: Loc; 
	END; 

	CaretMsg* = RECORD (Display.FrameMsg)
		loc*: Loc; 
	END; 

	ScrollMsg = RECORD (Display.FrameMsg)
		org: SIGNED32; 
		oldLines, newLines: SIGNED32; 
		dy: SIGNED16; 
	END; 

	StoreMsg = RECORD (Display.FrameMsg)
		text: Texts.Text; 
	END; 
VAR 
	W: Texts.Writer; 
	R: Texts.Reader; 
	fnt: Fonts.Font; 
	list: Gadgets.Frame; 
	lastF: Frame; 
	hBlock, tBlock: SIGNED16; 
	charW, lineH: SIGNED16; 
	ch: CHAR; 
	Hex: ARRAY 16 OF CHAR; 
	buf: ARRAY bufSize OF CHAR; 
	sPat: ARRAY MaxPatLen OF CHAR; 
	sDv: ARRAY (MaxPatLen + 1) OF SIGNED16; 
	sLen: SIGNED32; 
	PrintertopY, PrinterbotY, PrinterleftX, PagenoX, HeaderY: SIGNED16; 

	PROCEDURE ^ P(x: SIGNED32): SIGNED16; 
	PROCEDURE ^ IsHexDigit(ch: CHAR): BOOLEAN; 
	PROCEDURE ^ HexToInt(ch: CHAR): SIGNED32; 
	PROCEDURE ^ ClipAgainst(VAR x, y, w, h: SIGNED16; X, Y, W, H: SIGNED16); 
	PROCEDURE ^ LinesVisible*(H: SIGNED16): SIGNED32; 
	PROCEDURE ^ CalcPlace(x, y, w, h: SIGNED16; VAR px, py: SIGNED16); 
	PROCEDURE ^ LocateLine*(F: Frame; y, Y: SIGNED16; VAR loc: Loc); 
	PROCEDURE ^ LocateChar*(F: Frame; x, y, X, Y: SIGNED16; VAR loc: Loc); 
	PROCEDURE ^ LocatePos*(F: Frame; pos: SIGNED32; hexBlock: BOOLEAN; VAR loc: Loc); 
	PROCEDURE ^ ScrollTo*(F: Frame; pos: SIGNED32); 
	PROCEDURE ^ RemoveCaret(F: Frame); 
	PROCEDURE ^ SetCaret(F: Frame; pos: SIGNED32); 
	PROCEDURE ^ FlipCaret(F: Frame; Q: Display3.Mask; x, y: SIGNED16; loc: Loc); 
	PROCEDURE ^ RestoreSlider(F: Frame; Q: Display3.Mask; x, y: SIGNED16); 
	PROCEDURE ^ UpdateArea(F: Frame; u, v, w, h, px, py: SIGNED16; dlink: Objects.Object); 
	PROCEDURE ^ ScrollUpdate(F: Frame; Q: Display3.Mask; x, y, w, h: SIGNED16; VAR M: ScrollMsg); 
	PROCEDURE ^ DrawChar(Q: Display3.Mask; VAR X, Y: SIGNED16; ch: CHAR); 
	PROCEDURE ^ DrawLine(Q: Display3.Mask; x, Y, w, h: SIGNED16; pos: SIGNED32); 
	PROCEDURE ^ RestoreFrame(F: Frame; Q: Display3.Mask; x, y, w, h: SIGNED16); 
	PROCEDURE ^ RestoreFrameArea(F: Frame; Q: Display3.Mask; x, y, w, h, U, V, W, H: SIGNED16); 
	PROCEDURE ^ PrintFrame(F: Frame; M: Display.DisplayMsg); 
	PROCEDURE ^ TrackFrame(F: Frame; x, y, w, h: SIGNED16; VAR M: Oberon.InputMsg); 
	PROCEDURE ^ Write(F: Frame; VAR M: Oberon.InputMsg); 
	PROCEDURE ^ Update(F: Frame; Q: Display3.Mask; x, y, w, h: SIGNED16; M: Texts.UpdateMsg); 
	PROCEDURE ^ Modify(F: Frame; VAR M: Display.ModifyMsg); 
	PROCEDURE ^ FrameAttr(F: Frame; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ FrameFile(F: Frame; VAR M: Objects.FileMsg); 
	PROCEDURE ^ CopyFrame*(VAR M: Objects.CopyMsg; from, to: Frame); 
	PROCEDURE ^ FrameHandler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ InitFrame*(F: Frame; file: Texts.Text); 
	PROCEDURE ^ NewFrame*; 
	PROCEDURE ^ LoadDoc0(D: Documents.Document; F: Files.File); 
	PROCEDURE ^ LoadDoc(D: Documents.Document); 
	PROCEDURE ^ StoreDoc(D: Documents.Document); 
	PROCEDURE ^ ToggleMenu(set: BOOLEAN; dlink: Objects.Object); 
	PROCEDURE ^ SetCheck(D: Documents.Document; text: Texts.Text; dlink: Objects.Object); 
	PROCEDURE ^ ClearCheck(D: Documents.Document; text: Texts.Text; dlink: Objects.Object); 
	PROCEDURE ^ PrintHeader(title: ARRAY OF CHAR; page: SIGNED32); 
	PROCEDURE ^ InitPagePosition; 
	PROCEDURE ^ PrintLine(X, Y: SIGNED16; pos: SIGNED32); 
	PROCEDURE ^ PrintDoc(D: Documents.Document); 
	PROCEDURE ^ DocHandler(D: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ InitDoc(D: Documents.Document); 
	PROCEDURE ^ NewDoc*; 
	PROCEDURE ^ GetFrame(): Frame; 
	PROCEDURE ^ OpenFile*(F: Files.File); 
	PROCEDURE ^ OpenThis(name: ARRAY OF CHAR); 
	PROCEDURE ^ Open*; 
	PROCEDURE ^ Interpret*; 
	PROCEDURE ^ Search*; 
	PROCEDURE ^ Locate*; 
	PROCEDURE ^ MakeList; 
BEGIN
END Hex.
