MODULE RembrandtTools IN Oberon;
	IMPORT D3 := Display3, Display, Oberon, Pictures, Effects, Input, Rembrandt, Gadgets, Texts, Rembrandt0, Math IN A2, RembrandtDocs, Objects;
CONST 
	Yachse = 1; 
	Xachse = 2; 
	grad45 = 3; 
	up = 1; 
	down = 2; 
	right = 3; 
	left = 4; 
	MM = 1; 
	MR = 0; 
VAR 
	width, sprayspeed, smearspeed, smx, smy, cdx, cdy: SIGNED16; 
	symmetric: SET; 
	filled, double: BOOLEAN; 
	sintable: ARRAY 91 OF FLOAT32; 
	oldtrackMM: Rembrandt.TrackMMProc; 
	oldcursor: Oberon.Marker; 
	oldval: SIGNED16; 
	oldobj: Objects.Object; 

	PROCEDURE ^ Min(a, b: SIGNED16): SIGNED16; 
	PROCEDURE ^ Max(a, b: SIGNED16): SIGNED16; 
	PROCEDURE ^ Update(P: Pictures.Picture; x, y, w, h: SIGNED16); 
	PROCEDURE ^ GetRun(P: Pictures.Picture; VAR col, x: SIGNED16; y: SIGNED16); 
	PROCEDURE ^ FilledCircle(P: Pictures.Picture; xm, ym, r, col: SIGNED16); 
	PROCEDURE ^ SetPoint(P: Pictures.Picture; x, y, col: SIGNED16); 
	PROCEDURE ^ Circle(P: Pictures.Picture; xm, ym, r: SIGNED16); 
	PROCEDURE ^ SetLine(P: Pictures.Picture; x0, y0, x1, y1, col: SIGNED16); 
	PROCEDURE ^ SetRectangle(P: Pictures.Picture; x, y, w, h: SIGNED16); 
	PROCEDURE ^ Fillarea(F: Rembrandt.Frame; x0, y0: SIGNED16); 
	PROCEDURE ^ GetColor(P: Pictures.Picture; x, y: SIGNED16): SIGNED16; 
	PROCEDURE ^ SetSmear(F: Rembrandt.Frame; xm, ym, direction: SIGNED16); 
	PROCEDURE ^ SetClone(F: Rembrandt.Frame; xm, ym: SIGNED16); 
	PROCEDURE ^ Delete(F: Rembrandt.Frame; xm, ym: SIGNED16); 
	PROCEDURE ^ HandleScale(F: Rembrandt.Frame; VAR M: Oberon.InputMsg; x, y: SIGNED16); 
	PROCEDURE ^ ConvertInttoString(number: SIGNED16; VAR text: ARRAY OF CHAR); 
	PROCEDURE ^ Rot(mx, my: SIGNED16; VAR x, y: SIGNED16; VAR phi: SIGNED16); 
	PROCEDURE ^ HandleRotate(F: Rembrandt.Frame; VAR M: Oberon.InputMsg; x, y: SIGNED16); 
	PROCEDURE ^ HandlePoints(F: Rembrandt.Frame; VAR M: Oberon.InputMsg; x, y: SIGNED16); 
	PROCEDURE ^ HandleLines(F: Rembrandt.Frame; VAR M: Oberon.InputMsg; x, y: SIGNED16); 
	PROCEDURE ^ HandleRectangles(F: Rembrandt.Frame; VAR M: Oberon.InputMsg; x, y: SIGNED16); 
	PROCEDURE ^ HandleFill(F: Rembrandt.Frame; VAR M: Oberon.InputMsg; x, y: SIGNED16); 
	PROCEDURE ^ HandleSpray(F: Rembrandt.Frame; VAR M: Oberon.InputMsg; x, y: SIGNED16); 
	PROCEDURE ^ HandleSmear(F: Rembrandt.Frame; VAR M: Oberon.InputMsg; x, y: SIGNED16); 
	PROCEDURE ^ HandleClone(F: Rembrandt.Frame; VAR M: Oberon.InputMsg; x, y: SIGNED16); 
	PROCEDURE ^ HandleCircle(F: Rembrandt.Frame; VAR M: Oberon.InputMsg; x, y: SIGNED16); 
	PROCEDURE ^ HandleSpecialDel(F: Rembrandt.Frame; VAR M: Oberon.InputMsg; x, y: SIGNED16); 
	PROCEDURE ^ HandleErease(F: Rembrandt.Frame; VAR M: Oberon.InputMsg; x, y: SIGNED16); 
	PROCEDURE ^ HandlePick(F: Rembrandt.Frame; VAR M: Oberon.InputMsg; x, y: SIGNED16); 
	PROCEDURE ^ FlipH*; 
	PROCEDURE ^ FlipV*; 
	PROCEDURE ^ MakeIcon*; 
	PROCEDURE ^ Reduce*; 
	PROCEDURE ^ Oldval; 
	PROCEDURE ^ Assign*(proc: Rembrandt.TrackMMProc; cursor: Oberon.Marker); 
	PROCEDURE ^ Points*; 
	PROCEDURE ^ Lines*; 
	PROCEDURE ^ Rectangles*; 
	PROCEDURE ^ Fill*; 
	PROCEDURE ^ Spray*; 
	PROCEDURE ^ Smear*; 
	PROCEDURE ^ Clone*; 
	PROCEDURE ^ Circles*; 
	PROCEDURE ^ Rotate*; 
	PROCEDURE ^ Scale*; 
	PROCEDURE ^ SpecialDel*; 
	PROCEDURE ^ Erease*; 
	PROCEDURE ^ PickColor*; 
	PROCEDURE ^ SetSymmXaxis*; 
	PROCEDURE ^ SetSymmYaxis*; 
	PROCEDURE ^ SetSymmDeg45*; 
	PROCEDURE ^ SetFilled*; 
	PROCEDURE ^ GetFilled*(): BOOLEAN; 
	PROCEDURE ^ Filled*(set: BOOLEAN); 
	PROCEDURE ^ SetWidth*; 
	PROCEDURE ^ GetWidth*(): SIGNED16; 
	PROCEDURE ^ Width*(w: SIGNED16); 
	PROCEDURE ^ SetDouble*; 
	PROCEDURE ^ SetSpraySpeed*; 
	PROCEDURE ^ SetSmearSpeed*; 
	PROCEDURE ^ LoadColors*; 
	PROCEDURE ^ StoreColors*; 
BEGIN
END RembrandtTools.
