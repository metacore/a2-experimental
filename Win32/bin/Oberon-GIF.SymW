MODULE GIF IN Oberon;
	IMPORT Files, Objects, Display, Pictures;
CONST 
	dummy =  -1; 
TYPE 
	CodePages = RECORD 
		code, ref: INTEGER; 
	END; 

	CodeBook = ARRAY 4096 OF CodePages; 

	RGBType = RECORD 
		r, g, b: CHAR; 
	END; 

	ColorTable = RECORD 
		colTrans, IcolTrans: ARRAY 256 OF INTEGER; 
		rgb: ARRAY 256 OF RGBType; 
	END; 

	LogicalScrDesc = RECORD 
		width, height: INTEGER; 
		GCTSize: INTEGER; 
		GCTFlag: BOOLEAN; 
	END; 

	ImageDesc = RECORD 
		left, top, width, height: INTEGER; 
		sequential, LCTFlag: BOOLEAN; 
		LCTSize: INTEGER; 
		LCT: ColorTable; 
	END; 

	ExtBlock = RECORD 
		transparencyIndex: INTEGER; 
		transparency: BOOLEAN; 
	END; 

	Gif = RECORD 
		LSD: LogicalScrDesc; 
		GCT: ColorTable; 
		IDesc: ImageDesc; 
		Ext: ExtBlock; 
	END; 
VAR 
	GifImage: Gif; 
	CB: CodeBook; 

	PROCEDURE ^ ComputeColors(VAR CT: ColorTable; colorConversion: BOOLEAN); 
	PROCEDURE ^ GetLogicalScrDesc(VAR R: Files.Rider; VAR LSD: LogicalScrDesc); 
	PROCEDURE ^ GetCMap(VAR R: Files.Rider; VAR map: ColorTable; size: LONGINT); 
	PROCEDURE ^ GetExtBlock(VAR R: Files.Rider; VAR Ext: ExtBlock); 
	PROCEDURE ^ GetImageDesc(VAR R: Files.Rider; VAR IDesc: ImageDesc); 
	PROCEDURE ^ InitCodeBook(codeLen: LONGINT); 
	PROCEDURE ^ GetData(VAR r: Files.Rider; VAR Image: Gif; P: Pictures.Picture); 
	PROCEDURE ^ CheckFile*(f: Files.File): BOOLEAN; 
	PROCEDURE ^ Load*(VAR R: Files.Rider; transparentCol: INTEGER; colorConversion: BOOLEAN; pict: Pictures.Picture); 
	PROCEDURE ^ Handle*(obj: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ InitPicture*; 
	PROCEDURE ^ NewPicture*; 
BEGIN
END GIF.
