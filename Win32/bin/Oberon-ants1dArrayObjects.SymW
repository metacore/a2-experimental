MODULE ants1dArrayObjects IN Oberon;
	IMPORT vyBase, vyInteger, Objects, antsCommands, vyRanBase, vyRandom, Files, vyName, vyHostTexts, antsObjects, SYSTEM, vyLongrealVec, antsArrays, aM := antsMessages;
CONST 
	defaultdepth = 2; 
TYPE 
	tRArray* = antsArrays.X1d; 

	tLArray* = antsArrays.L1d; 

	tArray* = antsArrays.I1d; 

	tObject* = POINTER TO tObjectDesc; 

	tObjectDesc* = RECORD (vyBase.ObjDesc)
		w*, depth*: SIGNED32; 
		A*: tArray; 
		ACache*: tArray; 
	END; 
VAR 
	newobject-: tObject; 
	RandomR-: tRArray; 
	RandomL-: tLArray; 

	PROCEDURE ^ RandomRC(w: SIGNED32); 
	PROCEDURE ^ RandomLC(w: SIGNED32); 
	PROCEDURE ^ UniformR*(w: SIGNED32); 
	PROCEDURE ^ UniformL*(w, top: SIGNED32); 
	PROCEDURE ^ UniformA*(A: tArray; top: SIGNED32; x, w: SIGNED32); 
	PROCEDURE ^ UniformO*(o: tObject); 
	PROCEDURE ^ FillA*(A: tArray; val: SIGNED16; x, w: SIGNED32); 
	PROCEDURE ^ FillO*(o: tObject; val: SIGNED16); 
	PROCEDURE ^ Init*(o: tObject); 
	PROCEDURE ^ Gen*; 
	PROCEDURE ^ Refresh*(obj: vyBase.Object); 
	PROCEDURE ^ SetDepth*(obj: tObject; depth: SIGNED32); 
	PROCEDURE ^ EmbedArray*(A: tArray; o: tObject); 
	PROCEDURE ^ NewArray*(w: SIGNED32): tArray; 
	PROCEDURE ^ NewObject*(w, d: SIGNED32): tObject; 
	PROCEDURE ^ Min(x, y: SIGNED32): SIGNED32; 
	PROCEDURE ^ ChangeSize(o: tObject; w: SIGNED32); 
	PROCEDURE ^ HandleAttributes(o: tObject; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ FrameLinks(F: tObject; VAR M: Objects.LinkMsg); 
	PROCEDURE ^ StoreA(VAR R: Files.Rider; A: tArray); 
	PROCEDURE ^ LoadA(VAR R: Files.Rider): tArray; 
	PROCEDURE ^ HandleFileMsg(obj: tObject; VAR msg: Objects.FileMsg); 
	PROCEDURE ^ CopyArrayPart(from, to: tObject); 
	PROCEDURE ^ CopyObject*(from, to: tObject); 
	PROCEDURE ^ ObjectCopy(from: tObject): tObject; 
	PROCEDURE ^ Handler*(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ Copy*; 
	PROCEDURE ^ New*; 
	PROCEDURE ^ FromVec*; 
	PROCEDURE ^ Uniform*; 
	PROCEDURE ^ Channel*; 
	PROCEDURE ^ AddNoise*; 
BEGIN
END ants1dArrayObjects.
