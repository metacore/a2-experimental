MODULE ZlibInflate;
	IMPORT SYSTEM, Zlib, ZlibBuffers;
CONST 
	Ok* = Zlib.Ok; 
	StreamEnd* = Zlib.StreamEnd; 
	NeedDict* = Zlib.NeedDict; 
	StreamError* = Zlib.StreamError; 
	DataError* = Zlib.DataError; 
	MemError* = Zlib.MemError; 
	BufError* = Zlib.BufError; 
	NoFlush* = Zlib.NoFlush; 
	SyncFlush* = Zlib.SyncFlush; 
	FullFlush* = Zlib.FullFlush; 
	Finish* = Zlib.Finish; 
	MaxNodes = 1440; 
	MaxFixedNodes = 544; 
	MaxLitLenCodes = 288; 
	MaxNonSimpleCodes = ((MaxLitLenCodes - 256) - 1); 
	MaxDistCodes = 31; 
	OpBase =  -128; 
	OpSpecial = 64; 
	OpInvalid = 128; 
	OpEndBlock = 32; 
	OpExtra = 16; 
	WindowBits = 15; 
	WindowSize = ASH(1, WindowBits); 
	CodeStart = 0; 
	CodeLen = 1; 
	CodeLenExt = 2; 
	CodeDist = 3; 
	CodeDistExt = 4; 
	CodeCopy = 5; 
	CodeLit = 6; 
	CodeWash = 7; 
	CodeEnd = 8; 
	CodeBad = 9; 
	BlkType = 0; 
	BlkLens = 1; 
	BlkStored = 2; 
	BlkTable = 3; 
	BlkBTree = 4; 
	BlkDTree = 5; 
	BlkCodes = 6; 
	BlkDry = 7; 
	BlkDone = 8; 
	BlkBad = 9; 
	DeflateMethod* = 8; 
	PresetDict = 32; 
	InfMethod = 0; 
	InfFlag = 1; 
	InfDict4 = 2; 
	InfDict3 = 3; 
	InfDict2 = 4; 
	InfDict1 = 5; 
	InfDict0 = 6; 
	InfBlocks = 7; 
	InfCheck4 = 8; 
	InfCheck3 = 9; 
	InfCheck2 = 10; 
	InfCheck1 = 11; 
	InfDone = 12; 
	InfBad = 13; 
TYPE 
	Result* = RECORD 
		code-: LONGINT; 
		msg-: POINTER TO ARRAY OF CHAR; 
	END; 

	Lengths = ARRAY OF SHORTINT; 

	Code = RECORD 
		bits: INTEGER; 
		offset: INTEGER; 
		size: INTEGER; 
		simple: INTEGER; 
		extra: ARRAY MaxNonSimpleCodes OF SHORTINT; 
		base: ARRAY MaxNonSimpleCodes OF INTEGER; 
	END; 

	Node = RECORD 
		base: INTEGER; 
		exop: SHORTINT; 
		bits: SHORTINT; 
	END; 

	Nodes = POINTER TO ARRAY OF Node; 

	TreeNodes = RECORD 
		node: Nodes; 
		next: LONGINT; 
	END; 

	Tree = RECORD 
		node: Nodes; 
		base: LONGINT; 
		bits: INTEGER; 
	END; 

	Window = ARRAY WindowSize OF CHAR; 

	CheckFunc = PROCEDURE (old: LONGINT; CONST buf: ARRAY OF CHAR; idx, len: LONGINT):LONGINT; 

	Stream* = RECORD 
		in*, out*: ZlibBuffers.Buffer; 
		res-: Result; 
		wrapper-: BOOLEAN; 
		open-: BOOLEAN; 
		window: POINTER TO Window; 
		read, write: LONGINT; 
		checkFn: CheckFunc; 
		check: LONGINT; 
		buf: LONGINT; 
		bits: LONGINT; 
		inf: RECORD 
			state: INTEGER; 
			method: INTEGER; 
			marker: INTEGER; 
			check: RECORD 
				calc: LONGINT; 
				stored: LONGINT; 
			END; 
		END; 
		block: RECORD 
			state: SHORTINT; 
			last: BOOLEAN; 
			left: LONGINT; 
			nlit: INTEGER; 
			ndist: SHORTINT; 
			nclen: SHORTINT; 
			clen: ARRAY (MaxLitLenCodes + MaxDistCodes) OF SHORTINT; 
			index: INTEGER; 
			nodes: Nodes; 
			btree: Tree; 
		END; 
		decode: RECORD 
			state: SHORTINT; 
			lltree, dtree: Tree; 
			tree: Tree; 
			lit: INTEGER; 
			extra: INTEGER; 
			len: INTEGER; 
			dist: INTEGER; 
		END; 
	END; 
VAR 
	FixedBuilt: BOOLEAN; 
	FixedLitLenTree, FixedDistTree: Tree; 
	Order: ARRAY 19 OF SHORTINT; 

	PROCEDURE ^ SetMsg(VAR res: Result; msg: ARRAY OF CHAR); 
	PROCEDURE ^ MakeLitLenCode(VAR code: Code; bits, offset, size, simple: INTEGER); 
	PROCEDURE ^ MakeDistCode(VAR code: Code; bits, offset, size, simple: INTEGER); 
	PROCEDURE ^ MakeFixedLitLenCode(VAR len: Lengths; VAR code: Code); 
	PROCEDURE ^ MakeFixedDistCode(VAR len: Lengths; VAR code: Code); 
	PROCEDURE ^ BuildTree(VAR clen: Lengths; VAR code: Code; VAR tn: TreeNodes; VAR tree: Tree; VAR res: WORD); 
	PROCEDURE ^ Flush(VAR s: Stream); 
	PROCEDURE ^ Need(VAR s: Stream; bits: LONGINT): BOOLEAN; 
	PROCEDURE ^ Dump(VAR s: Stream; bits: LONGINT); 
	PROCEDURE ^ NeedOut(VAR s: Stream; VAR wavail: LONGINT): BOOLEAN; 
	PROCEDURE ^ NewCodes(VAR s: Stream; VAR lltree, dtree: Tree); 
	PROCEDURE ^ FreeCodes(VAR s: Stream); 
	PROCEDURE ^ InflateFast(VAR s: Stream; VAR wavail: LONGINT); 
	PROCEDURE ^ InflateCodes(VAR s: Stream); 
	PROCEDURE ^ ResetBlocks(VAR s: Stream; VAR check: LONGINT); 
	PROCEDURE ^ NewBlocks(VAR s: Stream; checkFn: CheckFunc); 
	PROCEDURE ^ FreeBlocks(VAR s: Stream); 
	PROCEDURE ^ InflateBlocks(VAR s: Stream); 
	PROCEDURE ^ SetBlockDict(VAR s: Stream; VAR dict: ARRAY OF CHAR; offset, len: LONGINT); 
	PROCEDURE ^ BlockSyncPoint(VAR s: Stream): BOOLEAN; 
	PROCEDURE ^ Reset0(VAR stream: Stream); 
	PROCEDURE ^ Reset*(VAR stream: Stream); 
	PROCEDURE ^ Open*(VAR stream: Stream; wrapper: BOOLEAN); 
	PROCEDURE ^ Close*(VAR stream: Stream); 
	PROCEDURE ^ Inflate*(VAR stream: Stream; flush: SHORTINT); 
	PROCEDURE ^ SetDictionary*(VAR stream: Stream; VAR dict: ARRAY OF CHAR; dictLen: LONGINT); 
	PROCEDURE ^ Sync*(VAR stream: Stream); 
	PROCEDURE ^ SyncPoint*(VAR stream: Stream): BOOLEAN; 
	PROCEDURE ^ Uncompress*(VAR src, dst: ARRAY OF CHAR; srcoffset, srclen, dstoffset, dstlen: LONGINT; VAR len: LONGINT; VAR res: Result); 
BEGIN
END ZlibInflate.
