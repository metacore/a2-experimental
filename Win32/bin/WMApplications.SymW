MODULE WMApplications;
	IMPORT KernelLog, Streams, Modules, Commands, Inputs, Strings, XML, XMLObjects, Repositories, WMGraphics, WMComponents, WMMessages, WMRestorable, WMWindowManager;
CONST 
	Ok = 0; 
	RepositoryNotFound = 1; 
	ApplicationNotFound = 2; 
	ParseError = 3; 
	DefaultWidth = 640; 
	DefaultHeight = 480; 
	DefaultAlpha = FALSE; 
	FlagFrame = TRUE; 
	FlagClose = TRUE; 
	FlagMinimize = TRUE; 
	FlagStayOnTop = FALSE; 
	FlagStayOnBottom = FALSE; 
	FlagNoFocus = FALSE; 
	FlagNavigation = FALSE; 
	FlagHidden = FALSE; 
	FlagNoResizing = FALSE; 
	Mode_Standard = 0; 
	Mode_Move = 1; 
	Mode_ResizeLeft = 2; 
	Mode_ResizeTopLeft = 3; 
	Mode_ResizeTop = 4; 
	Mode_ResizeTopRight = 5; 
	Mode_ResizeRight = 6; 
	Mode_ResizeBottomRight = 7; 
	Mode_ResizeBottom = 8; 
	Mode_ResizeBottomLeft = 9; 
	ResizeAreaSize = 10; 
	MinimumWidth = 20; 
	MinimumHeight = 20; 
TYPE 
	WindowInfo = RECORD 
		title: Strings.String; 
		icon: Strings.String; 
		width, height: LONGINT; 
		alpha: BOOLEAN; 
		flags: SET; 
		alternativeMoveResize: BOOLEAN; 
	END; 

	ApplicationInfo = RECORD 
		repository: Repositories.Repository; 
		name: Repositories.Name; 
		content: WMComponents.VisualComponent; 
		window: WindowInfo; 
	END; 

	KillerMsg = OBJECT 
	END KillerMsg; 

	Window = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		name: Repositories.Name; 
		repository: Repositories.Repository; 

		PROCEDURE ^  & New(CONST info: ApplicationInfo; context: WMRestorable.Context); 
		PROCEDURE ^ Close*; 
		PROCEDURE ^ Handle*(VAR x: WMMessages.Message); 
	END Window; 

	GadgetWindow = OBJECT {EXCLUSIVE} (Window)
	VAR 
		lastX, lastY: SIZE; 
		mode: WORD; 
		resized: BOOLEAN; 
		viewport: WMWindowManager.ViewPort; 

		PROCEDURE ^  & New(CONST info: ApplicationInfo; context: WMRestorable.Context); 
		PROCEDURE ^ GetMode(x, y: SIZE): WORD; 
		PROCEDURE ^ UpdatePointerInfo(mode: LONGINT); 
		PROCEDURE ^ MoveOrResize(): BOOLEAN; 
		PROCEDURE ^ PointerDown*(x, y: SIZE; keys: SET); 
		PROCEDURE ^ PointerMove*(x, y: SIZE; keys: SET); 
		PROCEDURE ^ Handle*(VAR m: WMMessages.Message); 
		PROCEDURE ^ PointerUp*(x, y: SIZE; keys: SET); 
		PROCEDURE ^ PointerLeave*; 
	END GadgetWindow; 
VAR 
	nofWindows: LONGINT; 

	PROCEDURE ^ Open*(context: Commands.Context); 
	PROCEDURE ^ Restore*(context: WMRestorable.Context); 
	PROCEDURE ^ ShowRes(res: WORD; CONST repositoryName, applicationName: ARRAY OF CHAR; out: Streams.Writer); 
	PROCEDURE ^ GetApplicationInfo(CONST repositoryName, applicationName: ARRAY OF CHAR; VAR info: ApplicationInfo): WORD; 
	PROCEDURE ^ ParseApplication(CONST applicationName: ARRAY OF CHAR; CONST application: XML.Element; VAR info: ApplicationInfo): BOOLEAN; 
	PROCEDURE ^ GetApplication(repository: Repositories.Repository; CONST applicationName: ARRAY OF CHAR): XML.Element; 
	PROCEDURE ^ GetInteger(element: XML.Element; CONST attributeName: ARRAY OF CHAR; VAR value: LONGINT): BOOLEAN; 
	PROCEDURE ^ GetBoolean(element: XML.Element; CONST attributeName: ARRAY OF CHAR; VAR value: BOOLEAN): BOOLEAN; 
	PROCEDURE ^ IncCount; 
	PROCEDURE ^ DecCount; 
	PROCEDURE ^ Cleanup; 
BEGIN
END WMApplications.
