MODULE VfW;
	IMPORT KernelLog, GDI32, Kernel32, User32, SYSTEM;
CONST 
	WS_POPUP* = SIGNED32(2147483648); 
	WM_CAP_START* = 1024; 
	WM_CAP_GET_CAPSTREAMPTR* = (WM_CAP_START + 1); 
	WM_CAP_SET_CALLBACK_ERROR* = (WM_CAP_START + 2); 
	WM_CAP_SET_CALLBACK_STATUS* = (WM_CAP_START + 3); 
	WM_CAP_SET_CALLBACK_YIELD* = (WM_CAP_START + 4); 
	WM_CAP_SET_CALLBACK_FRAME* = (WM_CAP_START + 5); 
	WM_CAP_SET_CALLBACK_VIDEOSTREAM* = (WM_CAP_START + 6); 
	WM_CAP_SET_CALLBACK_WAVESTREAM* = (WM_CAP_START + 7); 
	WM_CAP_GET_USER_DATA* = (WM_CAP_START + 8); 
	WM_CAP_SET_USER_DATA* = (WM_CAP_START + 9); 
	WM_CAP_DRIVER_CONNECT* = (WM_CAP_START + 10); 
	WM_CAP_DRIVER_DISCONNECT* = (WM_CAP_START + 11); 
	WM_CAP_DRIVER_GET_NAME* = (WM_CAP_START + 12); 
	WM_CAP_DRIVER_GET_VERSION* = (WM_CAP_START + 13); 
	WM_CAP_DRIVER_GET_CAPS* = (WM_CAP_START + 14); 
	WM_CAP_FILE_SET_CAPTURE_FILE* = (WM_CAP_START + 20); 
	WM_CAP_FILE_GET_CAPTURE_FILE* = (WM_CAP_START + 21); 
	WM_CAP_FILE_ALLOCATE* = (WM_CAP_START + 22); 
	WM_CAP_FILE_SAVEAS* = (WM_CAP_START + 23); 
	WM_CAP_FILE_SET_INFOCHUNK* = (WM_CAP_START + 24); 
	WM_CAP_FILE_SAVEDIB* = (WM_CAP_START + 25); 
	WM_CAP_EDIT_COPY* = (WM_CAP_START + 30); 
	WM_CAP_SET_AUDIOFORMAT* = (WM_CAP_START + 35); 
	WM_CAP_GET_AUDIOFORMAT* = (WM_CAP_START + 36); 
	WM_CAP_DLG_VIDEOFORMAT* = (WM_CAP_START + 41); 
	WM_CAP_DLG_VIDEOSOURCE* = (WM_CAP_START + 42); 
	WM_CAP_DLG_VIDEODISPLAY* = (WM_CAP_START + 43); 
	WM_CAP_GET_VIDEOFORMAT* = (WM_CAP_START + 44); 
	WM_CAP_SET_VIDEOFORMAT* = (WM_CAP_START + 45); 
	WM_CAP_DLG_VIDEOCOMPRESSION* = (WM_CAP_START + 46); 
	WM_CAP_SET_PREVIEW* = (WM_CAP_START + 50); 
	WM_CAP_SET_OVERLAY* = (WM_CAP_START + 51); 
	WM_CAP_SET_PREVIEWRATE* = (WM_CAP_START + 52); 
	WM_CAP_SET_SCALE* = (WM_CAP_START + 53); 
	WM_CAP_GET_STATUS* = (WM_CAP_START + 54); 
	WM_CAP_SET_SCROLL* = (WM_CAP_START + 55); 
	WM_CAP_GRAB_FRAME* = (WM_CAP_START + 60); 
	WM_CAP_GRAB_FRAME_NOSTOP* = (WM_CAP_START + 61); 
	WM_CAP_SEQUENCE* = (WM_CAP_START + 62); 
	WM_CAP_SEQUENCE_NOFILE* = (WM_CAP_START + 63); 
	WM_CAP_SET_SEQUENCE_SETUP* = (WM_CAP_START + 64); 
	WM_CAP_GET_SEQUENCE_SETUP* = (WM_CAP_START + 65); 
	WM_CAP_SET_MCI_DEVICE* = (WM_CAP_START + 66); 
	WM_CAP_GET_MCI_DEVICE* = (WM_CAP_START + 67); 
	WM_CAP_STOP* = (WM_CAP_START + 68); 
	WM_CAP_ABORT* = (WM_CAP_START + 69); 
	WM_CAP_SINGLE_FRAME_OPEN* = (WM_CAP_START + 70); 
	WM_CAP_SINGLE_FRAME_CLOSE* = (WM_CAP_START + 71); 
	WM_CAP_SINGLE_FRAME* = (WM_CAP_START + 72); 
	WM_CAP_PAL_OPEN* = (WM_CAP_START + 80); 
	WM_CAP_PAL_SAVE* = (WM_CAP_START + 81); 
	WM_CAP_PAL_PASTE* = (WM_CAP_START + 82); 
	WM_CAP_PAL_AUTOCREATE* = (WM_CAP_START + 83); 
	WM_CAP_PAL_MANUALCREATE* = (WM_CAP_START + 84); 
	WM_CAP_SET_CALLBACK_CAPCONTROL* = (WM_CAP_START + 85); 
	WM_CAP_END* = WM_CAP_SET_CALLBACK_CAPCONTROL; 
TYPE 
	HWND* = Kernel32.HANDLE; 

	VHdr* = RECORD 
		lpData*: ADDRESS; 
		dwBufferLength*, dwBytesUsed*, dwTimeCaptured*, dwUser*, dwFlags*: SIGNED32; 
		dwReserved*: ARRAY 4 OF ADDRESS; 
	END; 

	Capturerec* = RECORD 
		dwRequestMicroSecPerFrame*: SIGNED32; 
		fMakeUserHitOKToCapture*: SIGNED32; 
		wPercentDropForError*: SIGNED32; 
		fYield*: SIGNED32; 
		dwIndexSize*: SIGNED32; 
		wChunkGranularity*: SIGNED32; 
		fUsingDOSMemory*: SIGNED32; 
		wNumVideoRequested*: SIGNED32; 
		fCaptureAudio*: SIGNED32; 
		wNumAudioRequested*: SIGNED32; 
		vKeyAbort*: SIGNED32; 
		fAbortLeftMouse*: SIGNED32; 
		fAbortRightMouse*: SIGNED32; 
		fLimitEnabled*: SIGNED32; 
		wTimeLimit*: SIGNED32; 
		fMCIControl*: SIGNED32; 
		fStepMCIDevice*: SIGNED32; 
		dwMCIStartTime*: SIGNED32; 
		dwMCIStopTime*: SIGNED32; 
		fStepCaptureAt2x*: SIGNED32; 
		wStepCaptureAverageFrames*: SIGNED32; 
		dwAudioBufferSize*: SIGNED32; 
		fDisableWriteCache*: SIGNED32; 
		AVStreamMaster*: SIGNED32; 
	END; 

	CapVideoStreamCallback* = PROCEDURE {WINAPI}(hWnd: HWND; VAR lpVHdr: VHdr):User32.LResult; 

	CapYieldCallback* = PROCEDURE {WINAPI}(hWnd: HWND):User32.LResult; 
VAR 
	CapCreateCaptureWindow-: PROCEDURE {WINAPI}(CONST lpszWindowName: ARRAY OF CHAR; dwStyle, x, y, nWidth, nHeight: SIGNED32; ParentWin: HWND; nId: SIGNED32):HWND; 
	CapGetDriverDescription-: PROCEDURE {WINAPI}(wDriverIndex: SIGNED32; VAR lpszName: ARRAY OF CHAR; cbName: SIGNED32; VAR lpszVer: ARRAY OF CHAR; cbVar: SIGNED32):BOOLEAN; 
	PeekMessage-: PROCEDURE {WINAPI}(VAR lpMsg: User32.Msg; hWnd: HWND; wMsgFilterMin, wMsgFilterMax, wRemoveMsg: SIGNED32):SIGNED32; 

	PROCEDURE ^ GetProcAddress(hModule: ADDRESS; VAR adr: ADDRESS; CONST procName: ARRAY OF CHAR); 
	PROCEDURE ^ Init; 
	PROCEDURE ^ CapDriverConnect*(hwnd: HWND; index: SIGNED32): BOOLEAN; 
	PROCEDURE ^ CapDriverDisconnect*(hwnd: HWND): BOOLEAN; 
	PROCEDURE ^ CapSetCallbackFrame*(hwnd: HWND; proc: CapVideoStreamCallback): BOOLEAN; 
	PROCEDURE ^ CapSetCallbackStream*(hwnd: HWND; proc: CapVideoStreamCallback): BOOLEAN; 
	PROCEDURE ^ CapSetCallbackYield*(hwnd: HWND; proc: CapYieldCallback): BOOLEAN; 
	PROCEDURE ^ CapGetVideoFormat*(hwnd: HWND; VAR format: GDI32.BitmapInfoHeader): BOOLEAN; 
	PROCEDURE ^ CapSetVideoFormat*(hwnd: HWND; VAR format: GDI32.BitmapInfoHeader): BOOLEAN; 
	PROCEDURE ^ CapGetSequenceSetup*(hwnd: HWND; VAR format: Capturerec): BOOLEAN; 
	PROCEDURE ^ CapSetSequenceSetup*(hwnd: HWND; VAR format: Capturerec): BOOLEAN; 
	PROCEDURE ^ CapCaptureStop*(hwnd: HWND): BOOLEAN; 
	PROCEDURE ^ CapGrabFrame*(hwnd: HWND): BOOLEAN; 
	PROCEDURE ^ CapSequenceNoFile*(hwnd: HWND): BOOLEAN; 
	PROCEDURE ^ DumpCapRec*(CONST capRec: Capturerec); 
	PROCEDURE ^ DumpBitmapInfoHeader*(VAR info: GDI32.BitmapInfoHeader); 
BEGIN
END VfW.
