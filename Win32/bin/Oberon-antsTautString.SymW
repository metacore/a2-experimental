MODULE antsTautString IN Oberon;
	IMPORT aC := antsCommands, aA := antsArrays, antsSecurity, vyBase, vyLongreal, vyLongrealVec, vyName, math := MathL IN A2, antsTautStringTree;
CONST 
TYPE 
	Statistic* = POINTER TO StatisticDesc; 

	StatisticDesc* = RECORD (vyBase.ObjDesc)
		data*, reko*: aA.X1d; 
		n*: SIGNED32; 
	END; 

	PROCEDURE ^ tautstring(VAR fdist: ARRAY OF FLOAT64; VAR t: ARRAY OF FLOAT64; VAR lower: ARRAY OF FLOAT64; VAR upper: ARRAY OF FLOAT64; VAR y1: FLOAT64; VAR yn: FLOAT64; n: SIGNED32; VAR string: ARRAY OF FLOAT64; VAR knotsind: ARRAY OF SIGNED32; VAR knotst: ARRAY OF FLOAT64; VAR knotsy: ARRAY OF FLOAT64; VAR nknots: SIGNED32); 
	PROCEDURE ^ multiwdwr(y: ARRAY OF FLOAT64; n: SIGNED32; thresh: FLOAT64; squeezing: ARRAY OF CHAR): aA.L1d; 
	PROCEDURE ^ MakeStatistic*; 
	PROCEDURE ^ CreateTautString*(VAR s: Statistic; degraded: vyBase.Object; thr: FLOAT64; squfac: FLOAT64; squeezing: ARRAY OF CHAR); 
	PROCEDURE ^ GetTautString*(data: ARRAY OF FLOAT64; VAR s: Statistic; thr: FLOAT64; squfac: FLOAT64; squeezing: ARRAY OF CHAR); 
	PROCEDURE ^ DoGetTautString(VAR fdistx: ARRAY OF FLOAT64; VAR fdist: ARRAY OF FLOAT64; VAR lower: ARRAY OF FLOAT64; VAR upper: ARRAY OF FLOAT64; start: FLOAT64; ende: FLOAT64; VAR string: ARRAY OF FLOAT64; VAR knotsind: ARRAY OF SIGNED32; VAR knotst: ARRAY OF FLOAT64; VAR knotsy: ARRAY OF FLOAT64; VAR nknots: SIGNED32; VAR s: Statistic); 
	PROCEDURE ^ Mad*(y: ARRAY OF FLOAT64): FLOAT64; 
	PROCEDURE ^ Median(y: ARRAY OF FLOAT64): FLOAT64; 
	PROCEDURE ^ Mean(y: ARRAY OF FLOAT64): FLOAT64; 
	PROCEDURE ^ cumsum(y: ARRAY OF FLOAT64): aA.X1d; 
	PROCEDURE ^ MakeXInterval(len: SIGNED32): aA.X1d; 
	PROCEDURE ^ Min*(x: ARRAY OF FLOAT64): FLOAT64; 
	PROCEDURE ^ Max*(x: ARRAY OF FLOAT64): FLOAT64; 
BEGIN
END antsTautString.
