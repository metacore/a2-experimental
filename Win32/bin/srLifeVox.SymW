MODULE srLifeVox;
	IMPORT Random, Kernel, Math, srE, srBase, srVoxel2, srM5Space;
CONST 
	N = 32; 
	M = 32; 
	V = 10; 
	A = 80; 
	B = 20; 
	C =   3.0000000E-002; 
TYPE 
	SREAL = srBase.SREAL; 

	Voxel = srBase.Voxel; 

	LifeVox* = OBJECT (Voxel)
	VAR 
		m: ARRAY M OF ARRAY N OF BOOLEAN; 
		n: ARRAY M OF ARRAY N OF INTEGER; 
		gen: INTEGER; 
		i: LONGINT; 

		PROCEDURE ^  & init*; 
		PROCEDURE ^ seed*; 
		PROCEDURE ^ tick*; 
		PROCEDURE ^ Shade*(VAR ray: srBase.Ray); 
	END LifeVox; 

	RDVox* = OBJECT (Voxel)
	VAR 
		m1, m2, n1, n2: ARRAY M OF ARRAY N OF REAL; 
		gen: INTEGER; 
		i: LONGINT; 
		BLUE, RED: Voxel; 
		Cell: srM5Space.cell; 

		PROCEDURE ^  & init*; 
		PROCEDURE ^ Shade*(VAR ray: srBase.Ray); 
	END RDVox; 

	RDMirror* = OBJECT (RDVox)

		PROCEDURE ^ Shade*(VAR ray: srBase.Ray); 
	END RDMirror; 

	RDVolVox* = OBJECT (Voxel)
	VAR 
		m1*, m2, n1, n2: ARRAY V OF ARRAY V OF ARRAY V OF REAL; 
		gen: INTEGER; 
		i: LONGINT; 
		tock*: INTEGER; 
		BLUE: Voxel; 
		RED: Voxel; 
		YELLOW: Voxel; 
		timer: Kernel.Timer; 
		frame: LONGINT; 

		PROCEDURE ^  & init*(red, blue, yellow: Voxel); 
		PROCEDURE ^ clear*; 
		PROCEDURE ^ seed*; 
		PROCEDURE ^ bounds(i, j, k: LONGINT; VAR out: BOOLEAN); 
		PROCEDURE ^ tick*; 
		PROCEDURE ^ probe*(x, y, z: SREAL): Voxel; 
		PROCEDURE ^ Shade*(VAR ray: srBase.Ray); 
	END RDVolVox; 

	RDCloud* = OBJECT (RDVolVox)

		PROCEDURE ^ tick*; 
	END RDCloud; 

	LifeBloc* = OBJECT (srVoxel2.Bloc2)

		PROCEDURE ^  & init*; 
	END LifeBloc; 

	LifeBloc2* = OBJECT (srVoxel2.Bloc2)

		PROCEDURE ^  & init*; 
	END LifeBloc2; 
VAR 
	random: Random.Generator; 
	STOP: BOOLEAN; 

	PROCEDURE ^ STOPGO*; 
	PROCEDURE ^ normalize(VAR x, y, z: SREAL); 
	PROCEDURE ^ reflect(VAR x, y, z: SREAL; nx, ny, nz: SREAL); 
BEGIN
END srLifeVox.
