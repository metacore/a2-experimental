MODULE WMTCPTracker;
	IMPORT Modules, Commands, WMStandardComponents, IP, TCP, Kernel, WMRestorable, WMMessages, WMWindowManager, WMGraphics, WMComponents, Messages := WMMessages, Strings, WMGrids, WMStringGrids;
CONST 
	Running = 0; 
	Closing = 1; 
	Closed = 2; 
TYPE 
	Closer = OBJECT {EXCLUSIVE} 
	VAR 
		c: TCP.Connection; 

		PROCEDURE ^  & Init*(c: TCP.Connection); 
	BEGIN{ACTIVE} 
	END Closer; 

	Discarder = OBJECT {EXCLUSIVE} 
	VAR 
		c: TCP.Connection; 

		PROCEDURE ^  & Init*(c: TCP.Connection); 
	BEGIN{ACTIVE} 
	END Discarder; 

	ConnectionArray = POINTER TO ARRAY OF TCP.Connection; 

	Window = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		grid: WMStringGrids.StringGrid; 
		delay: SIGNED32; 
		timer: Kernel.Timer; 
		state: SIGNED32; 
		currentIndex, nofConnections: SIGNED32; 
		currentList: ConnectionArray; 
		colWidth: WMGrids.Spacings; 
		selectedConnection: TCP.Connection; 
		detailPanel: WMStandardComponents.Panel; 
		closeBtn, discardBtn: WMStandardComponents.Button; 

		PROCEDURE ^ CreateForm(): WMComponents.VisualComponent; 
		PROCEDURE ^  & New*(delay: SIGNED32; c: WMRestorable.Context); 
		PROCEDURE ^ GetTitleStr(col: SIGNED32; VAR x: ARRAY OF CHAR); 
		PROCEDURE ^ Click(sender, data: ANY); 
		PROCEDURE ^ CloseConnection(sender, data: ANY); 
		PROCEDURE ^ DiscardConnection(sender, data: ANY); 
		PROCEDURE ^ GetAlign(col: SIGNED32): SIGNED32; 
		PROCEDURE ^ StateToString(state: SIGNED32; VAR str: ARRAY OF CHAR); 
		PROCEDURE ^ GetConnectionStr(x, col: SIGNED32; VAR str: ARRAY OF CHAR); 
		PROCEDURE ^ AddConnection(obj: ANY; VAR cont: BOOLEAN); 
		PROCEDURE ^ ScanConnections; 
		PROCEDURE ^ Update; 
		PROCEDURE ^ Join; 
		PROCEDURE ^ Close*; 
		PROCEDURE ^ Handle*(VAR x: WMMessages.Message); 
	BEGIN{ACTIVE} 
	END Window; 
VAR 
	window: Window; 

	PROCEDURE ^ FreeWindow; 
	PROCEDURE ^ Open*(context: Commands.Context); 
	PROCEDURE ^ Restore*(context: WMRestorable.Context); 
	PROCEDURE ^ Close*; 
	PROCEDURE ^ Cleanup; 
BEGIN
END WMTCPTracker.
