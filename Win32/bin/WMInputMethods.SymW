MODULE WMInputMethods;
	IMPORT Streams, Strings, Configuration, Texts, TextUtilities, Commands, Modules;
CONST 
	CR = 0DX; 
	LF = 0AX; 
TYPE 
	IMEInterface* = RECORD 
		AcquireText*, ReleaseText*: PROCEDURE {DELEGATE}; 
		InsertUCS32*: PROCEDURE {DELEGATE}(atPosition: LONGINT; CONST string: Texts.UCS32String); 
		GetCursorPosition*: PROCEDURE {DELEGATE}():LONGINT; 
		GetCursorScreenPosition*: PROCEDURE {DELEGATE}(VAR x, y: LONGINT); 
		SetCursorInfo*: PROCEDURE {DELEGATE}(position: LONGINT); 
	END; 

	IME* = OBJECT {EXCLUSIVE} 
	VAR 
		interface: IMEInterface; 
		valid: BOOLEAN; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ GetName*(): Strings.String; 
		PROCEDURE ^ SetInterface*(i: IMEInterface); 
		PROCEDURE ^ InsertChar*(ucs: LONGINT); 
		PROCEDURE ^ InsertMultiChar*(CONST ucs: ARRAY OF LONGINT); 
		PROCEDURE ^ InsertUTF8String*(CONST string: ARRAY OF CHAR); 
		PROCEDURE ^ GetCursorScreenPosition*(VAR x, y: LONGINT); 
		PROCEDURE ^ KeyEvent*(ucs: LONGINT; flags: SET; keysym: LONGINT); 
		PROCEDURE ^ Hide*; 
		PROCEDURE ^ Finalize*; 
	END IME; 

	IMEInstaller* = PROCEDURE ; 

	IMToolSwitchCallback* = PROCEDURE ; 
VAR 
	defaultIME-: IME; 
	activeIME-: IME; 
	toolSwitch*: IMToolSwitchCallback; 
	None-: IMEInterface; 

	PROCEDURE ^ GetIME*(CONST name: ARRAY OF CHAR; VAR res: WORD): IMEInstaller; 
	PROCEDURE ^ SwitchIME*(): IME; 
	PROCEDURE ^ InstallIME*(newIME: IME); 
BEGIN
END WMInputMethods.
