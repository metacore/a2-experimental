MODULE antsMDimDiscreteS IN Oberon;
	IMPORT antsObjects, antsFunctions, Objects, Files, Gadgets, antsNeighbourhoods, antsRegions, aM := antsMessages, antsArrayObjects, Math := MathL IN A2, antsKernel, antsModels, antsCommands, vyName, vyBase, antsCaches, vyRanBase, Links;
CONST 
TYPE 
	intArray = POINTER TO ARRAY OF SIGNED16; 

	realArray = POINTER TO ARRAY OF FLOAT64; 

	realArrayArray = POINTER TO ARRAY OF ARRAY OF FLOAT64; 

	tModel* = POINTER TO tModelDesc; 

	tModelDesc* = RECORD (antsModels.tModelDesc)
		dim-: SIGNED32; 
		n*: antsNeighbourhoods.Neighbours; 
		externalF: antsFunctions.FunctionXd; 
		interactionF: antsFunctions.FunctionXd; 
		dataF: antsFunctions.FunctionXd; 
		interactionFcache: realArrayArray; 
		dataFcache: realArrayArray; 
		externalFcache: realArray; 
		current: intArray; 
		currentR: realArray; 
	END; 

	PROCEDURE ^ StoreM(VAR R: Files.Rider; s: tModel); 
	PROCEDURE ^ LoadM(VAR R: Files.Rider; s: tModel); 
	PROCEDURE ^ U(VAR values: ARRAY OF SIGNED16; M: tModel): FLOAT64; 
	PROCEDURE ^ GetNeighbourValues(o, orig: antsArrayObjects.tINTEGERObject; n: antsNeighbourhoods.Neighbours; y, x: SIGNED32; VAR values: ARRAY OF SIGNED16); 
	PROCEDURE ^ PseudoLikPrepare*(o: antsArrayObjects.tINTEGERObject; M: tModel; VAR T: antsNeighbourhoods.NeighbourTable); 
	PROCEDURE ^ PseudoLik*(o: antsNeighbourhoods.NeighbourTable; M: tModel; AIC: BOOLEAN): FLOAT64; 
	PROCEDURE ^ Sync1(m: tModel); 
	PROCEDURE ^ MakeCaches(m: tModel; depth: SIGNED32; data: BOOLEAN); 
	PROCEDURE ^ Sync(m: tModel; depth: SIGNED32); 
	PROCEDURE ^ OneSweep*(M: antsKernel.samplingMsg); 
	PROCEDURE ^ Metropolis(msg: antsKernel.samplingMsg); 
	PROCEDURE ^ Exchange(msg: antsKernel.samplingMsg); 
	PROCEDURE ^ CopyOrig(s: antsKernel.Kernel); 
	PROCEDURE ^ Uniform*(s: antsKernel.Kernel); 
	PROCEDURE ^ Handler*(o: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ OpenModel*(M: tModel; n: antsNeighbourhoods.Neighbours; ef: antsFunctions.FunctionXd; if: antsFunctions.FunctionXd; name: ARRAY OF CHAR); 
	PROCEDURE ^ Gen*; 
	PROCEDURE ^ NewModel*; 
	PROCEDURE ^ AttachDataF*; 
BEGIN
END antsMDimDiscreteS.
