MODULE vyStringVec IN Oberon;
	IMPORT Files, Objects, vyBase, vyLongintVec, vyName;
CONST 
	idversion* = \"vyStringVec 0.0d0"\; 
TYPE 
	index* = SIGNED32; 

	nameptr* = vyName.tName; 

	tVector* = POINTER TO tVectorDesc; 

	tVectorDesc* = RECORD (vyBase.tVectorDesc)
	END; 

	tBuf* = POINTER TO tBufDesc; 

	tBufDesc = RECORD (vyBase.tBufDesc)
		data: POINTER TO ARRAY OF nameptr; 
	END; 

	Op1Function* = PROCEDURE (x: nameptr):nameptr; 

	ArrayOp1Function* = PROCEDURE (VAR arg: ARRAY OF nameptr); 

	ArrayOp2Function* = PROCEDURE (VAR arg1, arg2: ARRAY OF nameptr); 

	tMatrixChunk* = POINTER TO tMatrixChunkDesc; 

	tMatrixChunkDesc = RECORD 
		row-, col-: index; 
	END; 

	tChunkedMatrix* = POINTER TO tChunkedMatrixDesc; 

	tChunkedMatrixDesc* = RECORD (vyBase.ObjDesc)
		buf*: tMatrixChunk; 
	END; 

	PROCEDURE ^ DoOp1*(v: vyBase.tVector; function: Op1Function); 
	PROCEDURE ^ NewBufs(size: index): tBuf; 
	PROCEDURE ^ FlushVecCaches(vec: vyBase.tVector); 
	PROCEDURE ^ GC*(vec: vyBase.tVector); 
	PROCEDURE ^ Allocate*(vec: vyBase.tVector; size: index); 
	PROCEDURE ^ SetLen*(vec: vyBase.tVector; size: index); 
	PROCEDURE ^ Len*(vec: vyBase.tVector): SIGNED32; 
	PROCEDURE ^ Store0(VAR R: Files.Rider; o: tVector); 
	PROCEDURE ^ Load0(VAR R: Files.Rider; o: tVector); 
	PROCEDURE ^ HandleAttributes(o: tVector; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ Handler*(o: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ Gen*; 
	PROCEDURE ^ New*(size: index): tVector; 
	PROCEDURE ^ NewAlikeVector*(model: vyBase.tVector): vyBase.tVector; 
	PROCEDURE ^ NewStringMatrix*(rows, columns: index): tVector; 
	PROCEDURE ^ NewStringArray*(sizes: ARRAY OF index): vyBase.tVector; 
	PROCEDURE ^ Append*(xx: nameptr; v: vyBase.tVector); 
	PROCEDURE ^ Get*(v: vyBase.tVector; pos: index): nameptr; 
	PROCEDURE ^ Set*(xval: nameptr; v: vyBase.tVector; pos: index); 
	PROCEDURE ^ GetIndexed*(v: vyBase.tVector; indexvec: vyBase.tVector; pos: index): nameptr; 
	PROCEDURE ^ SetIndexed*(xval: nameptr; v: vyBase.tVector; indexvec: vyBase.tVector; pos: index); 
	PROCEDURE ^ Fill*(v: vyBase.tVector; val: nameptr; offs, count: index); 
	PROCEDURE ^ NewFilledNamed*(count: SIGNED32; val: nameptr; name: ARRAY OF CHAR): tVector; 
	PROCEDURE ^ EvaluateCaseWise*(new: vyBase.tData; regressor: vyBase.tData; Function: Op1Function); 
BEGIN
END vyStringVec.
