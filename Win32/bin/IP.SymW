MODULE IP;
	IMPORT SYSTEM, WSock32, Network, Strings, Kernel, KernelLog;
CONST 
	Ok* = 0; 
	NumStates* = 12; 
	Closed* = 0; 
	Listen* = 1; 
	SynSent* = 2; 
	SynReceived* = 3; 
	Established* = 4; 
	CloseWait* = 5; 
	FinWait1* = 6; 
	Closing* = 7; 
	LastAck* = 8; 
	FinWait2* = 9; 
	TimeWait* = 10; 
	Unused* = 11; 
	Trace = TRUE; 
	NilAdrIPv4 = 0; 
	NilPort* = 0; 
	IPv4* = 4; 
	IPv6* = 6; 
	NilAdrIdent =  -1; 
TYPE 
	Adr* = RECORD 
		ipv4Adr*: SIGNED32; 
		ipv6Adr*: ARRAY 16 OF CHAR; 
		usedProtocol*: SIGNED32; 
		data*: SIGNED32; 
	END; 

	Name* = ARRAY 128 OF CHAR; 

	Interface* = OBJECT 
	VAR 
		localAdr-: Adr; 
		next*: Interface; 
	END Interface; 
VAR 
	pool*: Kernel.FinalizedCollection; 
	default-: Interface; 
	interfaces*: Interface; 
	NilAdr*: Adr; 

	PROCEDURE ^ IsNilAdr*(adr: Adr): BOOLEAN; 
	PROCEDURE ^ AdrsEqual*(adr1, adr2: Adr): BOOLEAN; 
	PROCEDURE ^ StrToAdr*(CONST s: ARRAY OF CHAR): Adr; 
	PROCEDURE ^ AdrToStr*(adr: Adr; VAR string: ARRAY OF CHAR); 
	PROCEDURE ^ ArrayToAdr*(CONST array: ARRAY OF CHAR; ofs, protocol: SIGNED32; LSBfirst: BOOLEAN): Adr; 
	PROCEDURE ^ AdrToArray*(adr: Adr; CONST array: ARRAY OF CHAR; ofs: SIGNED32; LSBfirst: BOOLEAN); 
	PROCEDURE ^ InterfaceByDstIP*(dst: Adr): Interface; 
	PROCEDURE ^ InitInterfaces(hostname: ARRAY OF CHAR; VAR res: INTEGER); 
	PROCEDURE ^ Init; 
	PROCEDURE {Fingerprint(7622940362159962290)}  - SwapEndian(VAR adr: SIGNED32);
	CODE
	END SwapEndian; 
BEGIN
END IP.
