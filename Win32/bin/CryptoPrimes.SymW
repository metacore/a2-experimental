MODULE CryptoPrimes;
	IMPORT B := CryptoBigNumbers, Out := KernelLog;
CONST 
	N = 2048; 
TYPE 
	BigNumber = B.BigNumber; 
VAR 
	one: BigNumber; 
	primes: ARRAY N OF LONGINT; 

	PROCEDURE ^ NewPrime*(bits: INTEGER; safe: BOOLEAN): BigNumber; 
	PROCEDURE ^ NewDHPrime*(bits: INTEGER; safe: BOOLEAN; add, rem: BigNumber): BigNumber; 
	PROCEDURE ^ Checks(b: SIZE): INTEGER; 
	PROCEDURE ^ ProbablePrime(bits: INTEGER): BigNumber; 
	PROCEDURE ^ ProbableDHPrime(bits: INTEGER; add, rem: BigNumber): BigNumber; 
	PROCEDURE ^ ProbableDHPrimeSafe(bits: INTEGER; padd, rem: BigNumber): BigNumber; 
	PROCEDURE ^ IsPrime*(a: BigNumber; checks: INTEGER; doTrialDiv: BOOLEAN): BOOLEAN; 
	PROCEDURE ^ witness(W, a, a1, a1odd: BigNumber; k: INTEGER): BOOLEAN; 
	PROCEDURE ^ Init; 
BEGIN
END CryptoPrimes.
