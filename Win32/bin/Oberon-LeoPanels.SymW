MODULE LeoPanels IN Oberon;
	IMPORT Files, Objects, Math IN A2, Display, Printer, Texts, Viewers, Oberon, Out, Strings, Attributes, Links, Gadgets, Documents, Views, Desktops, Images, ImageGadgets, ImageDocs, GfxMatrix, Gfx, GfxPrinter, GfxBuffer, GfxPS, Leonardo, LeoFrames, LeoTools, LeoDocs;
CONST 
TYPE 
	Editor* = POINTER TO EditorDesc; 

	EditorDesc* = RECORD (Gadgets.ObjDesc)
		apply*, revert*: PROCEDURE (editor: Editor); 
		fig*: Leonardo.Figure; 
		frame*: Gadgets.Frame; 
	END; 
VAR 
	ResizeType, ResizeDim, AlignType, SpaceType, SpaceDim: ARRAY 2 OF Objects.Object; 
	PrinterName, PrintLandscape, PrintPostscript, PSLevel2, PSDPI: Objects.Object; 
	ExportMode, ExportBorder, ExportCopy, ExportName: Objects.Object; 

	PROCEDURE ^ RevertEditor(editor: Editor); 
	PROCEDURE ^ ApplyEditor(editor: Editor); 
	PROCEDURE ^ HandleEditor*(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ NewEditor*; 
	PROCEDURE ^ LoadStoreDoc(doc: Documents.Document); 
	PROCEDURE ^ HandleDoc(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ InitDoc*(doc: Documents.Document; f: Gadgets.Frame); 
	PROCEDURE ^ NewDoc*; 
	PROCEDURE ^ FindFrame*(context: Objects.Object): Gadgets.Frame; 
	PROCEDURE ^ FindFigure*(context: Objects.Object): Leonardo.Figure; 
	PROCEDURE ^ FindEditor*(context: Objects.Object): Editor; 
	PROCEDURE ^ FindGen(CONST key: ARRAY OF CHAR; VAR gen: ARRAY OF CHAR); 
	PROCEDURE ^ Create*(obj: Objects.Object): Gadgets.Frame; 
	PROCEDURE ^ FindObj*(CONST name: ARRAY OF CHAR): Objects.Object; 
	PROCEDURE ^ CopyObj*(CONST name: ARRAY OF CHAR; deep: BOOLEAN): Gadgets.Frame; 
	PROCEDURE ^ Open*(f: Gadgets.Frame; context: Objects.Object); 
	PROCEDURE ^ Append*; 
	PROCEDURE ^ EditLink*; 
	PROCEDURE ^ EditCopy*; 
	PROCEDURE ^ Apply*; 
	PROCEDURE ^ Revert*; 
	PROCEDURE ^ Ok*; 
	PROCEDURE ^ RevertColor(e: Editor); 
	PROCEDURE ^ ApplyColor(e: Editor); 
	PROCEDURE ^ EditColor*; 
	PROCEDURE ^ GetTransform(e: Editor; VAR m: GfxMatrix.Matrix); 
	PROCEDURE ^ SetTransform(e: Editor; CONST m: GfxMatrix.Matrix); 
	PROCEDURE ^ ResetTransform(e: Editor); 
	PROCEDURE ^ ApplyTransform(e: Editor); 
	PROCEDURE ^ EditTransform*; 
	PROCEDURE ^ MakeTransform(e: Editor; VAR m: GfxMatrix.Matrix); 
	PROCEDURE ^ AppendTransform*; 
	PROCEDURE ^ PrependTransform*; 
	PROCEDURE ^ EditSelection*; 
	PROCEDURE ^ GetSelection*; 
	PROCEDURE ^ OpenDoc*; 
	PROCEDURE ^ Print*; 
	PROCEDURE ^ ExportFigure(fig: Leonardo.Figure; x0, y0, x1, y1: INTEGER); 
	PROCEDURE ^ ExportImage(fig: Leonardo.Figure; x0, y0, x1, y1: INTEGER); 
	PROCEDURE ^ ExportEPS(fig: Leonardo.Figure; x0, y0, x1, y1: INTEGER); 
	PROCEDURE ^ Export*; 
	PROCEDURE ^ RevertFrame(editor: Editor); 
	PROCEDURE ^ ApplyFrame(editor: Editor); 
	PROCEDURE ^ GetFramePanel(target: Gadgets.Frame; VAR p: Gadgets.Frame); 
	PROCEDURE ^ EditFrame*; 
	PROCEDURE ^ SetFrameUnit*; 
	PROCEDURE ^ SetFrameSize*; 
	PROCEDURE ^ SetFrameOrientation*; 
	PROCEDURE ^ ActivateFrame*; 
	PROCEDURE ^ PassivateFrame*; 
	PROCEDURE ^ RevertFigure(editor: Editor); 
	PROCEDURE ^ ApplyFigure(editor: Editor); 
	PROCEDURE ^ EditFigure*; 
	PROCEDURE ^ Undo*; 
	PROCEDURE ^ Redo*; 
	PROCEDURE ^ RevertLayer(editor: Editor); 
	PROCEDURE ^ ApplyLayer(editor: Editor); 
	PROCEDURE ^ EditLayers*; 
	PROCEDURE ^ UpdateLayer(layer: Leonardo.Layer); 
	PROCEDURE ^ Activate*; 
	PROCEDURE ^ AddLayer*; 
	PROCEDURE ^ DeleteLayer*; 
	PROCEDURE ^ MoveLayerUp*; 
	PROCEDURE ^ MoveLayerDown*; 
	PROCEDURE ^ SelectLayer*; 
	PROCEDURE ^ SelectionToLayer*; 
	PROCEDURE ^ OrderSelection*; 
	PROCEDURE ^ Arrange*; 
	PROCEDURE ^ EditTool*; 
	PROCEDURE ^ atan2(x, y: REAL): REAL; 
	PROCEDURE ^ RevertFocus(e: Editor); 
	PROCEDURE ^ ApplyFocus(e: Editor); 
	PROCEDURE ^ NewFocus*; 
BEGIN
END LeoPanels.
