MODULE TextFrames IN Oberon;
	IMPORT Input, Modules, Objects, Display, Viewers, Fonts, Texts, Oberon, MenuViewers;
CONST 
	CR = 0DX; 
	replace = Display.replace; 
	paint = Display.paint; 
	invert = Display.invert; 
	extend = Display.extend; 
	reduce = Display.reduce; 
	StandardMenu = \"System.Close System.Copy System.Grow Edit.Search Edit.Store"\; 
	LogMenu = \"System.Clear Edit.Locate Edit.Search Edit.Store"\; 
	OpenCmd = \"Edit.Open"\; 
	Modern = FALSE; 
	SmallDisplay = TRUE; 
	MoveArea = TRUE; 
TYPE 
	Line = POINTER TO LineDesc; 

	LineDesc = RECORD 
		len: SIGNED32; 
		wid: SIGNED16; 
		eot: BOOLEAN; 
		next: Line; 
	END; 

	Location* = RECORD 
		org*, pos*: SIGNED32; 
		dx*, x*, y*: SIGNED16; 
		lin: Line; 
	END; 

	Frame* = POINTER TO FrameDesc; 

	FrameDesc* = RECORD (Display.FrameDesc)
		text*: Texts.Text; 
		org*: SIGNED32; 
		col*: SIGNED16; 
		lsp*: SIGNED16; 
		left*, right*, top*, bot*: SIGNED16; 
		markH*: SIGNED16; 
		time*: SIGNED32; 
		mark*, car*, sel*: SIGNED16; 
		carloc*: Location; 
		selbeg*, selend*: Location; 
		trailer: Line; 
	END; 
VAR 
	menuH*, barW*, left*, right*, top*, bot*, lsp*: SIGNED16; 
	MarkColor, BarColor, MenuBG, TextBG, FullColor, mode: SIGNED16; 
	asr, dsr, selH, markW, eolW: SIGNED16; 
	ch: CHAR; 
	W, KW: Texts.Writer; 
	box: Fonts.Char; 
	BoxPat: ARRAY 12 OF SET; 
	hintPos: SIGNED32; 
	saved: Oberon.CaretMsg; 

	PROCEDURE ^ Min(i, j: SIGNED16): SIGNED16; 
	PROCEDURE ^ Max(i, j: SIGNED32): SIGNED32; 
	PROCEDURE ^ ReplConst(col: SIGNED16; F: Frame; X, Y, W, H: SIGNED16; mode: SIGNED16); 
	PROCEDURE ^ UpdateMark(F: Frame); 
	PROCEDURE ^ Width(VAR R: Texts.Reader; len: SIGNED32): SIGNED16; 
	PROCEDURE ^ DisplayLine(F: Frame; L: Line; VAR R: Texts.Reader; X, Y: SIGNED16; len: SIGNED32); 
	PROCEDURE ^ Validate(T: Texts.Text; VAR org: SIGNED32); 
	PROCEDURE ^ Mark*(F: Frame; mark: SIGNED16); 
	PROCEDURE ^ DrawIcon(F: Frame); 
	PROCEDURE ^ Restore*(F: Frame); 
	PROCEDURE ^ Suspend*(F: Frame); 
	PROCEDURE ^ Extend*(F: Frame; newY: SIGNED16); 
	PROCEDURE ^ Reduce*(F: Frame; newY: SIGNED16); 
	PROCEDURE ^ Show*(F: Frame; pos: SIGNED32); 
	PROCEDURE ^ LocateLine(F: Frame; y: SIGNED16; VAR loc: Location); 
	PROCEDURE ^ LocateString(F: Frame; x, y: SIGNED16; VAR loc: Location); 
	PROCEDURE ^ LocateChar(F: Frame; x, y: SIGNED16; VAR loc: Location); 
	PROCEDURE ^ LocatePos(F: Frame; pos: SIGNED32; VAR loc: Location); 
	PROCEDURE ^ Pos*(F: Frame; X, Y: SIGNED16): SIGNED32; 
	PROCEDURE ^ FlipCaret(F: Frame); 
	PROCEDURE ^ SetCaret*(F: Frame; pos: SIGNED32); 
	PROCEDURE ^ TrackCaret*(F: Frame; X, Y: SIGNED16; VAR keysum: SET); 
	PROCEDURE ^ RemoveCaret*(F: Frame); 
	PROCEDURE ^ FlipSelection(F: Frame; VAR beg, end: Location); 
	PROCEDURE ^ SetSelection*(F: Frame; beg, end: SIGNED32); 
	PROCEDURE ^ TrackSelection*(F: Frame; X, Y: SIGNED16; VAR keysum: SET); 
	PROCEDURE ^ RemoveSelection*(F: Frame); 
	PROCEDURE ^ TrackLine*(F: Frame; X, Y: SIGNED16; VAR org: SIGNED32; VAR keysum: SET); 
	PROCEDURE ^ TrackWord*(F: Frame; X, Y: SIGNED16; VAR pos: SIGNED32; VAR keysum: SET); 
	PROCEDURE ^ RemoveMarks(F: Frame); 
	PROCEDURE ^ GetAttr*(F: Frame; VAR s: ARRAY OF CHAR); 
	PROCEDURE ^ CallCmd(cmd: ARRAY OF CHAR; F: Frame; pos: SIGNED32; new: BOOLEAN); 
	PROCEDURE ^ Call*(F: Frame; pos: SIGNED32; new: BOOLEAN); 
	PROCEDURE ^ Write*(F: Frame; ch: CHAR; lib: Objects.Library; col, voff: SIGNED8); 
	PROCEDURE ^ Defocus*(F: Frame); 
	PROCEDURE ^ Neutralize*(F: Frame); 
	PROCEDURE ^ Modify*(F: Frame; id, dY, Y, H: SIGNED16); 
	PROCEDURE ^ Open*(F: Frame; H: Objects.Handler; T: Texts.Text; org: SIGNED32; col, left, right, top, bot, lsp: SIGNED16); 
	PROCEDURE ^ Copy*(F: Frame; VAR F1: Frame); 
	PROCEDURE ^ CopyOver*(F: Frame; text: Texts.Text; beg, end: SIGNED32); 
	PROCEDURE ^ GetSelection*(F: Frame; VAR M: Oberon.SelectMsg); 
	PROCEDURE ^ GetCaret*(F: Frame; VAR M: Oberon.CaretMsg); 
	PROCEDURE ^ LineLen(VAR R: Texts.Reader): SIGNED32; 
	PROCEDURE ^ Update*(F: Frame; beg, end, len: SIGNED32); 
	PROCEDURE ^ Recall(F: Frame); 
	PROCEDURE ^ SaveCaret; 
	PROCEDURE ^ RestoreCaret; 
	PROCEDURE ^ Edit*(F: Frame; X, Y: SIGNED16; Keys: SET); 
	PROCEDURE ^ Handle*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ Menu(name, commands: ARRAY OF CHAR): Texts.Text; 
	PROCEDURE ^ Text*(name: ARRAY OF CHAR): Texts.Text; 
	PROCEDURE ^ NewMenu*(name, commands: ARRAY OF CHAR): Frame; 
	PROCEDURE ^ NewText*(text: Texts.Text; pos: SIGNED32): Frame; 
	PROCEDURE ^ ShowText(title: ARRAY OF CHAR; T: Texts.Text; W, H: SIGNED16); 
	PROCEDURE ^ ReplaceSystemEditor*; 
BEGIN
END TextFrames.
