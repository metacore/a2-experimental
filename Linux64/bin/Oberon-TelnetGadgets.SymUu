MODULE TelnetGadgets IN Oberon;
	IMPORT Kernel, Fonts, Display, Printer, Texts, Oberon, Objects, Terminals, TerminalGadgets, Gadgets, NetSystem, NetTools, Strings, HyperDocs, Documents, Desktops, TextGadgets, TextDocs, Input;
CONST 
	OpenHeight = 24; 
	BufSize = 1500; 
	DefPort = 23; 
	Gap* = 2; 
	VSpace = (2 * Gap); 
	HSpace = (3 * Gap); 
	Menu = \"TelnetGadgets.CloseCon[Dis] TelnetGadgets.OpenLog[Log]"\; 
TYPE 
	Terminal = POINTER TO TerminalDesc; 

	Task = POINTER TO TaskDesc; 

	TerminalDesc = RECORD (Terminals.TerminalDesc)
		C: NetSystem.Connection; 
		task: Task; 
		message, localecho: BOOLEAN; 
	END; 

	TaskDesc = RECORD (Oberon.TaskDesc)
		T: Terminal; 
		colon: SIGNED16; 
		user, passwd: ARRAY 32 OF CHAR; 
	END; 
VAR 
	buf: ARRAY BufSize OF CHAR; 
	fnt: Fonts.Font; 
	W: Texts.Writer; 

	PROCEDURE ^ Connected(C: NetSystem.Connection): BOOLEAN; 
	PROCEDURE ^ Send0(T: Terminals.Terminal; ch: CHAR); 
	PROCEDURE ^ Break0(T: Terminals.Terminal); 
	PROCEDURE ^ WriteString(T: Terminals.Terminal; str: ARRAY OF CHAR); 
	PROCEDURE ^ WriteLn(T: Terminals.Terminal); 
	PROCEDURE ^ Sb(C: NetSystem.Connection; VAR l: SIGNED16); 
	PROCEDURE ^ Will(C: NetSystem.Connection; VAR l: SIGNED16); 
	PROCEDURE ^ Wont(C: NetSystem.Connection; VAR l: SIGNED16); 
	PROCEDURE ^ Do(C: NetSystem.Connection; VAR l: SIGNED16); 
	PROCEDURE ^ Dont(C: NetSystem.Connection; VAR l: SIGNED16); 
	PROCEDURE ^ Receiver(me: Oberon.Task); 
	PROCEDURE ^ SetUp(C: NetSystem.Connection); 
	PROCEDURE ^ CloseFrame(F: ANY); 
	PROCEDURE ^ OpenConn(F: TerminalGadgets.Frame; host, user, passwd: ARRAY OF CHAR; port: SIGNED16); 
	PROCEDURE ^ SplitTelnetAdr(VAR url, host, user, passwd: ARRAY OF CHAR; VAR port: SIGNED16; prefix: BOOLEAN): SIGNED32; 
	PROCEDURE ^ Open*; 
	PROCEDURE ^ Close*; 
	PROCEDURE ^ Reset*; 
	PROCEDURE ^ Log(F: TerminalGadgets.Frame); 
	PROCEDURE ^ OpenLog*; 
	PROCEDURE ^ SendString(T: Terminals.Terminal; VAR s: ARRAY OF CHAR); 
	PROCEDURE ^ Send*; 
	PROCEDURE ^ FrameHandler(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ NewFrame*; 
	PROCEDURE ^ SchemeHandler(L: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ NewLinkScheme*; 
	PROCEDURE ^ PrintCont(F: TerminalGadgets.Frame; VAR M: Display.DisplayMsg); 
	PROCEDURE ^ DocHandler(D: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ CloseCon*; 
	PROCEDURE ^ LoadDoc(D: Documents.Document); 
	PROCEDURE ^ NewDoc*; 
BEGIN
END TelnetGadgets.
