MODULE Printer3 IN Oberon;
	IMPORT Display3, Objects, Display, Printer, Fonts, Pictures;
CONST 
	replConst = 0; 
	replPattern = 2; 
	line = 3; 
	SizeHack = FALSE; 
	BrushSize = 100; 
TYPE 
	Brush = RECORD 
		brul, brur: ARRAY BrushSize OF SIGNED16; 
		bufl, bufr: ARRAY BrushSize OF SIGNED16; 
		bufh, brushr: SIGNED16; 
		x, y, mode: SIGNED16; 
		col: Display.Color; 
		M: Display3.Mask; 
		pat: Display.Pattern; 
	END; 
VAR 
	Pattern*: ARRAY 9 OF Display.Pattern; 
	class: SIGNED16; 
	ex, ey, ex1, ey1, pattern: SIGNED16; 
	tmpP: Pictures.Picture; 
	tX, tY, tW, tH: SIGNED16; 
	drawingPolygon: BOOLEAN; 
	brush: Brush; 

	PROCEDURE ^ Min(x, y: SIGNED16): SIGNED16; 
	PROCEDURE ^ Max(x, y: SIGNED16): SIGNED16; 
	PROCEDURE ^ ClipAgainst(VAR x, y, w, h: SIGNED16; x1, y1, w1, h1: SIGNED16); 
	PROCEDURE ^ IntersectLine(VAR x1, y1, x2, y2: SIGNED16; X, Y, W, H: SIGNED16): BOOLEAN; 
	PROCEDURE ^ PPat(pat: Display.Pattern): SIGNED16; 
	PROCEDURE ^ UseCol(col: Display.Color); 
	PROCEDURE ^ Enum(X, Y, W, H: SIGNED16); 
	PROCEDURE ^ ReplConst*(M: Display3.Mask; col: Display.Color; X, Y, W, H, mode: SIGNED16); 
	PROCEDURE ^ Dot*(M: Display3.Mask; col: Display.Color; X, Y, mode: SIGNED16); 
	PROCEDURE ^ FillPattern*(M: Display3.Mask; col: Display.Color; pat: Display.Pattern; pX, pY, X, Y, W, H, mode: SIGNED16); 
	PROCEDURE ^ Rect*(M: Display3.Mask; col: Display.Color; pat: Display.Pattern; X, Y, W, H, width, mode: SIGNED16); 
	PROCEDURE ^ Rect3D*(M: Display3.Mask; topcol, botcol: Display.Color; X, Y, W, H, width, mode: SIGNED16); 
	PROCEDURE ^ FilledRect3D*(M: Display3.Mask; topcol, botcol, incol: Display.Color; X, Y, W, H, width, mode: SIGNED16); 
	PROCEDURE ^ BrushJump(VAR b: Brush; x, y: SIGNED16); 
	PROCEDURE ^ BrushWalk(VAR b: Brush; x, y: SIGNED16); 
	PROCEDURE ^ BrushFlush(VAR b: Brush); 
	PROCEDURE ^ InitBrush(VAR b: Brush; M: Display3.Mask; pat: Display.Pattern; col: Display.Color; w, mode: SIGNED16); 
	PROCEDURE ^ Line*(M: Display3.Mask; col: Display.Color; pat: Display.Pattern; X, Y, X1, Y1, width, mode: SIGNED16); 
	PROCEDURE ^ FilledPoly(M: Display3.Mask; col: Display.Color; pat: Display.Pattern; VAR X, Y: ARRAY OF SIGNED16; n, mode: SIGNED16); 
	PROCEDURE ^ Poly*(M: Display3.Mask; col: Display.Color; pat: Display.Pattern; VAR X, Y: ARRAY OF SIGNED16; n, width: SIGNED16; style: SET; mode: SIGNED16); 
	PROCEDURE ^ Ellipse*(M: Display3.Mask; col: Display.Color; pat: Display.Pattern; X, Y, a, b, width: SIGNED16; style: SET; mode: SIGNED16); 
	PROCEDURE ^ Circle*(M: Display3.Mask; col: Display.Color; pat: Display.Pattern; X, Y, r, width: SIGNED16; style: SET; mode: SIGNED16); 
	PROCEDURE ^ PP(x: SIGNED16): SIGNED16; 
	PROCEDURE ^ Lookup(font, metric: Fonts.Font; ch: CHAR; VAR minY, maxY, dx, y, h: SIGNED16); 
	PROCEDURE ^ StringSize*(s: ARRAY OF CHAR; fnt: Fonts.Font; VAR w, h, dsr: SIGNED16); 
	PROCEDURE ^ StringSize0(font, metric: Fonts.Font; s: ARRAY OF CHAR; VAR x, y, w, h: SIGNED16; VAR dx: ARRAY OF SIGNED16); 
	PROCEDURE ^ String*(M: Display3.Mask; col: Display.Color; X, Y: SIGNED16; fnt: Fonts.Font; s: ARRAY OF CHAR; mode: SIGNED16); 
	PROCEDURE ^ CenterString*(M: Display3.Mask; col: Display.Color; X, Y, W, H: SIGNED16; fnt: Fonts.Font; s: ARRAY OF CHAR; mode: SIGNED16); 
	PROCEDURE ^ Print(px, py, pw, ph: SIGNED16; X, Y, W, H: SIGNED16; P: Pictures.Picture); 
	PROCEDURE ^ PrintEnum(X, Y, W, H: SIGNED16); 
	PROCEDURE ^ Pict*(M: Display3.Mask; P: Pictures.Picture; X, Y, W, H, mode: SIGNED16); 
	PROCEDURE ^ ReplPict*(M: Display3.Mask; P: Pictures.Picture; px, py, X, Y, W, H, mode: SIGNED16); 
	PROCEDURE ^ InitPat; 
BEGIN
END Printer3.
