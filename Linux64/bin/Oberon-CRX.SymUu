MODULE CRX IN Oberon;
	IMPORT Oberon, Texts, Sets, CRS, CRT, CRA, Files;
CONST 
	symSetSize = 100; 
	maxTerm = 3; 
	tErr = 0; 
	altErr = 1; 
	syncErr = 2; 
	EOL = 0DX; 
VAR 
	maxSS: SIGNED16; 
	errorNr: SIGNED16; 
	curSy: SIGNED16; 
	err, w: Texts.Writer; 
	fram: Texts.Reader; 
	syn: Texts.Writer; 
	scanner: ARRAY 32 OF CHAR; 
	symSet: ARRAY symSetSize OF CRT.Set; 

	PROCEDURE ^ Restriction(n: SIGNED16); 
	PROCEDURE ^ PutS(s: ARRAY OF CHAR); 
	PROCEDURE ^ PutI(i: SIGNED16); 
	PROCEDURE ^ Indent(n: SIGNED16); 
	PROCEDURE ^ PutSet(s: SET); 
	PROCEDURE ^ PutSet1(s: CRT.Set); 
	PROCEDURE ^ Length*(s: ARRAY OF CHAR): SIGNED16; 
	PROCEDURE ^ Alternatives(gp: SIGNED16): SIGNED16; 
	PROCEDURE ^ CopyFramePart(stopStr: ARRAY OF CHAR); 
	PROCEDURE ^ CopySourcePart(pos: CRT.Position; indent: SIGNED16); 
	PROCEDURE ^ GenErrorMsg(errTyp, errSym: SIGNED16; VAR errNr: SIGNED16); 
	PROCEDURE ^ NewCondSet(set: CRT.Set): SIGNED16; 
	PROCEDURE ^ GenCond(set: CRT.Set); 
	PROCEDURE ^ GenCode(gp, indent: SIGNED16; checked: CRT.Set); 
	PROCEDURE ^ GenCodePragmas; 
	PROCEDURE ^ GenProcedureHeading(sn: CRT.SymbolNode; forward: BOOLEAN); 
	PROCEDURE ^ GenForwardRefs; 
	PROCEDURE ^ GenProductions; 
	PROCEDURE ^ InitSets; 
	PROCEDURE ^ GenCompiler*; 
	PROCEDURE ^ WriteStatistics*; 
	PROCEDURE ^ Init*; 
BEGIN
END CRX.
