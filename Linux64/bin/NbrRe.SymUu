MODULE NbrRe;
	IMPORT Streams, NbrInt, NbrInt8, NbrInt16, NbrInt32, NbrInt64, NbrRat, NbrRe32;
CONST 
	E* = NbrRe32.E; 
	Pi* = NbrRe32.Pi; 
TYPE 
	Real* = NbrRe32.Real; 
VAR 
	MinNbr-, MaxNbr-, Epsilon-: Real; 
	Radix-: NbrInt.Integer; 

	PROCEDURE ^ RatToRe(n: NbrRat.Rational): Real; 
	OPERATOR ^ ":="-(VAR l: Real; r: NbrRat.Rational); 
	PROCEDURE ^ ReToRat*(x: Real): NbrRat.Rational; 
	OPERATOR ^ "="-(l: Real; r: NbrRat.Rational): BOOLEAN; 
	OPERATOR ^ "="-(l: NbrRat.Rational; r: Real): BOOLEAN; 
	OPERATOR ^ "#"-(l: Real; r: NbrRat.Rational): BOOLEAN; 
	OPERATOR ^ "#"-(l: NbrRat.Rational; r: Real): BOOLEAN; 
	OPERATOR ^ "<"-(l: Real; r: NbrRat.Rational): BOOLEAN; 
	OPERATOR ^ "<"-(l: NbrRat.Rational; r: Real): BOOLEAN; 
	OPERATOR ^ ">"-(l: Real; r: NbrRat.Rational): BOOLEAN; 
	OPERATOR ^ ">"-(l: NbrRat.Rational; r: Real): BOOLEAN; 
	OPERATOR ^ "<="-(l: Real; r: NbrRat.Rational): BOOLEAN; 
	OPERATOR ^ "<="-(l: NbrRat.Rational; r: Real): BOOLEAN; 
	OPERATOR ^ ">="-(l: Real; r: NbrRat.Rational): BOOLEAN; 
	OPERATOR ^ ">="-(l: NbrRat.Rational; r: Real): BOOLEAN; 
	OPERATOR ^ "+"-(l: Real; r: NbrRat.Rational): Real; 
	OPERATOR ^ "+"-(l: NbrRat.Rational; r: Real): Real; 
	OPERATOR ^ "-"-(l: Real; r: NbrRat.Rational): Real; 
	OPERATOR ^ "-"-(l: NbrRat.Rational; r: Real): Real; 
	OPERATOR ^ "*"-(l: Real; r: NbrRat.Rational): Real; 
	OPERATOR ^ "*"-(l: NbrRat.Rational; r: Real): Real; 
	OPERATOR ^ "/"-(l: Real; r: NbrRat.Rational): Real; 
	OPERATOR ^ "/"-(l: NbrRat.Rational; r: Real): Real; 
	PROCEDURE ^ Abs*(x: Real): Real; 
	PROCEDURE ^ Entier*(x: Real): NbrInt.Integer; 
	PROCEDURE ^ Max*(x1, x2: Real): Real; 
	PROCEDURE ^ Min*(x1, x2: Real): Real; 
	PROCEDURE ^ Sign*(x: Real): NbrInt.Integer; 
	PROCEDURE ^ Int*(x: Real): NbrInt.Integer; 
	PROCEDURE ^ Frac*(x: Real): Real; 
	PROCEDURE ^ Round*(x: Real): NbrInt.Integer; 
	PROCEDURE ^ Floor*(x: Real): NbrInt.Integer; 
	PROCEDURE ^ Ceiling*(x: Real): NbrInt.Integer; 
	PROCEDURE ^ Mantissa*(x: Real): Real; 
	PROCEDURE ^ Exponent*(x: Real): NbrInt.Integer; 
	PROCEDURE ^ Re*(mantissa: Real; exponent: NbrInt.Integer): Real; 
	PROCEDURE ^ Sqrt*(x: Real): Real; 
	PROCEDURE ^ Sin*(x: Real): Real; 
	PROCEDURE ^ Cos*(x: Real): Real; 
	PROCEDURE ^ ArcTan*(x: Real): Real; 
	PROCEDURE ^ Exp*(x: Real): Real; 
	PROCEDURE ^ Ln*(x: Real): Real; 
	PROCEDURE ^ StringToRe*(string: ARRAY OF CHAR; VAR x: Real); 
	PROCEDURE ^ ReToString*(x: Real; significantFigures: NbrInt.Integer; VAR string: ARRAY OF CHAR); 
	PROCEDURE ^ Load*(R: Streams.Reader; VAR x: Real); 
	PROCEDURE ^ Store*(W: Streams.Writer; x: Real); 
BEGIN
END NbrRe.
