MODULE WMTrees;
	IMPORT WMWindowManager, Objects, XML, WMComponents, WMGraphics, Kernel, WMStandardComponents, WMProperties, WMEvents, Rect := WMRectangles, Strings, Inputs;
CONST 
	NodeExpanded* = 0; 
	NodeSubnodesUnknown* = 1; 
	NodeAlwaysExpanded* = 2; 
	NodeHidden* = 3; 
	NodeSubnodesOnExpand* = 4; 
	StateSelected* = 0; 
	StateHover* = 1; 
	StateHasSubNodes* = 2; 
	DefaultHeight = 25; 
	DragDist = 10; 
TYPE 
	String = Strings.String; 

	TreeNode* = OBJECT 
	VAR 
		state: SET; 
		parent, prevSibling, nextSibling, firstChild, lastChild: TreeNode; 
		caption: String; 
		img: WMGraphics.Image; 
		data: ANY; 
		inTree: BOOLEAN; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ AddChild(x: TreeNode); 
		PROCEDURE ^ AddChildAfter(prev, x: TreeNode); 
		PROCEDURE ^ AddChildBefore(next, x: TreeNode); 
		PROCEDURE ^ Remove; 
	END TreeNode; 

	DrawNodeProc = PROCEDURE {DELEGATE}(canvas: WMGraphics.Canvas; w, h: SIZE; node: TreeNode; state: SET); 

	MeasureNodeProc = PROCEDURE {DELEGATE}(node: TreeNode; VAR w, h: SIZE); 

	Tree* = OBJECT {EXCLUSIVE} 
	VAR 
		root: TreeNode; 
		lockedBy: ANY; 
		lockLevel: SIZE; 
		viewChanged: BOOLEAN; 
		onChanged*: WMEvents.EventSource; 
		beforeExpand*: WMEvents.EventSource; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ Acquire*; 
		PROCEDURE ^ Release*; 
		PROCEDURE ^ HasLock*(): BOOLEAN; 
		PROCEDURE ^ SetRoot*(x: TreeNode); 
		PROCEDURE ^ GetRoot*(): TreeNode; 
		PROCEDURE ^ AddChildNode*(parent, node: TreeNode); 
		PROCEDURE ^ AddChildNodeAfter*(parent, prev, node: TreeNode); 
		PROCEDURE ^ AddChildNodeBefore*(parent, next, node: TreeNode); 
		PROCEDURE ^ RemoveNode*(node: TreeNode); 
		PROCEDURE ^ ExpandToRoot*(node: TreeNode); 
		PROCEDURE ^ GetNextSibling*(node: TreeNode): TreeNode; 
		PROCEDURE ^ GetPrevSibling*(node: TreeNode): TreeNode; 
		PROCEDURE ^ GetChildren*(node: TreeNode): TreeNode; 
		PROCEDURE ^ GetLastChild*(node: TreeNode): TreeNode; 
		PROCEDURE ^ GetParent*(node: TreeNode): TreeNode; 
		PROCEDURE ^ SetNodeState*(node: TreeNode; state: SET); 
		PROCEDURE ^ InclNodeState*(node: TreeNode; state: WORD); 
		PROCEDURE ^ ExclNodeState*(node: TreeNode; state: WORD); 
		PROCEDURE ^ GetNodeState*(node: TreeNode): SET; 
		PROCEDURE ^ SetNodeCaption*(node: TreeNode; caption: String); 
		PROCEDURE ^ GetNodeCaption*(node: TreeNode): String; 
		PROCEDURE ^ SetNodeImage*(node: TreeNode; i: WMGraphics.Image); 
		PROCEDURE ^ GetNodeImage*(node: TreeNode): WMGraphics.Image; 
		PROCEDURE ^ SetNodeData*(node: TreeNode; data: ANY); 
		PROCEDURE ^ GetNodeData*(node: TreeNode): ANY; 
	END Tree; 

	TreeView* = OBJECT {EXCLUSIVE} (WMComponents.VisualComponent)
	VAR 
		tree: Tree; 
		downX, downY, firstLine, lines: SIZE; 
		vscrollbar, hscrollbar: WMStandardComponents.Scrollbar; 
		drawNode: DrawNodeProc; 
		measureNode: MeasureNodeProc; 
		selectedNode, hoverNode: TreeNode; 
		overNodeTimer: Kernel.MilliTimer; 
		draggedNode-: TreeNode; 
		selecting, middleClicking, dragPossible: BOOLEAN; 
		cs: WMGraphics.CanvasState; 
		hindent, indent, hdelta: SIZE; 
		onSelectNode-, onExpandNode-, onClickNode-, onMiddleClickNode-: WMEvents.EventSource; 
		clHover-, clSelected-, clTextDefault-, clTextHover-, clTextSelected-: WMProperties.ColorProperty; 
		fontHeight-: WMProperties.Int32Property; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ FocusReceived*; 
		PROCEDURE ^ FocusLost*; 
		PROCEDURE ^ SetIndent*(indent: SIZE); 
		PROCEDURE ^ GetTree*(): Tree; 
		PROCEDURE ^ Initialize*; 
		PROCEDURE ^ TreeChanged*(sender, data: ANY); 
		PROCEDURE ^ SetFirstLine*(line: SIZE; adjustScrollbar: BOOLEAN); 
		PROCEDURE ^ SetDrawNodeProc*(x: DrawNodeProc); 
		PROCEDURE ^ SetMeasureNodeProc*(x: MeasureNodeProc); 
		PROCEDURE ^ MeasureTree(VAR lines, width: SIZE); 
		PROCEDURE ^ DrawNode(canvas: WMGraphics.Canvas; w, h: SIZE; node: TreeNode; state: SET); 
		PROCEDURE ^ MeasureNode*(node: TreeNode; VAR w, h: SIZE); 
		PROCEDURE ^ RenderTreeNode(canvas: WMGraphics.Canvas; y, h: SIZE; node: TreeNode; level: SIZE); 
		PROCEDURE ^ DrawBackground*(canvas: WMGraphics.Canvas); 
		PROCEDURE ^ GetNodeAtPos*(x, y: SIZE): TreeNode; 
		PROCEDURE ^ GetNextVisibleNode(this: TreeNode; ignoreChildren: BOOLEAN): TreeNode; 
		PROCEDURE ^ GetPrevVisibleNode(this: TreeNode): TreeNode; 
		PROCEDURE ^ KeyEvent*(ucs: SIZE; flags: SET; VAR keysym: SIZE); 
		PROCEDURE ^ PointerDown*(x, y: SIZE; keys: SET); 
		PROCEDURE ^ PointerMove*(x, y: SIZE; keys: SET); 
		PROCEDURE ^ ClickNode*(node: TreeNode); 
		PROCEDURE ^ MiddleClickNode*(node: TreeNode); 
		PROCEDURE ^ PointerUp*(x, y: SIZE; keys: SET); 
		PROCEDURE ^ DragOver*(x, y: SIZE; dragInfo: WMWindowManager.DragInfo); 
		PROCEDURE ^ WheelMove*(dz: SIZE); 
		PROCEDURE ^ SelectNode*(node: TreeNode); 
		PROCEDURE ^ PointerLeave*; 
		PROCEDURE ^ ScrollbarChanged*(sender, data: ANY); 
	END TreeView; 
VAR 
	ColorPrototype: WMProperties.ColorProperty; 
	PrototypeTclHover*, PrototypeTclSelected*, PrototypeTclTextDefault*, PrototypeTclTextHover*, PrototypeTclTextSelected*: WMProperties.ColorProperty; 
	PrototypeTfontHeight*: WMProperties.Int32Property; 
	StrTreeView: Strings.String; 

	PROCEDURE ^ InitStrings; 
	PROCEDURE ^ InitPrototypes; 
	PROCEDURE ^ TreeViewGen*(): XML.Element; 
	PROCEDURE ^ NewString*(CONST x: ARRAY OF CHAR): String; 
BEGIN
END WMTrees.
