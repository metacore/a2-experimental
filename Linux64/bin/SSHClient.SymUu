MODULE SSHClient;
	IMPORT WMWindowManager, WMComponents, WMStandardComponents, WMG := WMGraphics, WMPopups, WMMessages, WMEditors, WMRectangles, Commands, Files, Strings, Texts, Inputs, Streams, Out := KernelLog, SSHAuthorize, SSH, Beep;
CONST 
	TerminalWidth = 80; 
	TerminalHeight = 24; 
	Border = 2; 
	BoxW = 8; 
	BoxH = 18; 
	Left = 0; 
	Right = 2; 
	Underscore = 0; 
	Blink = 1; 
	CursorKeyMode = 0; 
	AppKeypadMode = 1; 
	AutoWrapMode = 2; 
	ESC = 1BX; 
	DEL = 7FX; 
	CR = 0DX; 
	NL = 0AX; 
TYPE 
	WindowCloser = PROCEDURE {DELEGATE}; 

	Attribute = POINTER TO RECORD 
		fnt: WMG.Font; 
		bg, fg: WMG.Color; 
		special: SET; 
	END; 

	Char = RECORD 
		attr: Attribute; 
		char: SIGNED32; 
	END; 

	Data = POINTER TO ARRAY OF Char; 

	Line = POINTER TO RECORD 
		data: Data; 
		t, b: SIZE; 
		next: Line; 
	END; 

	Position = RECORD 
		line: Line; 
		ofs: SIZE; 
	END; 

	Frame = OBJECT {EXCLUSIVE} (WMComponents.VisualComponent)
	TYPE 
		; 

		; 
	VAR 
		rows, cols, boxW, boxH, dX, dY: SIZE; 
		chan: SSH.Channel; 
		r: Streams.Reader; 
		w: Streams.Writer; 
		mode: SET; 
		closeWindow: WindowCloser; 
		first, top: Line; 
		bg: WMG.Color; 
		scrollTop, scrollBottom: Line; 
		scrollBegin, scrollEnd: SIZE; 
		tabs: POINTER TO ARRAY OF BOOLEAN; 
		attr: Attribute; 
		cursor: Position; 
		old: RECORD 
			attr: Attribute; 
			offs: SIZE; 
			row: SIZE; 
		END; 
		sel: RECORD 
			beg, end: Position; 
		END; 
		popup: WMPopups.Popup; 

		PROCEDURE ^ EFill; 
		PROCEDURE ^ GetCol(): SIZE; 
		PROCEDURE ^ GetRow(): SIZE; 
		PROCEDURE ^ GetNewLine(): Line; 
		PROCEDURE ^ AppendLine(pred: Line): Line; 
		PROCEDURE ^ UpdateBox(line: Line; ofs: SIZE); 
		PROCEDURE ^ UpdateRect(al, bl: Line; aofs, bofs: SIZE; cur: SET); 
		PROCEDURE ^ UpdateAll; 
		PROCEDURE ^ WriteChars(CONST buf: ARRAY OF CHAR; n: SIZE); 
		PROCEDURE ^ Delete; 
		PROCEDURE ^ GetLine(n: SIZE): Line; 
		PROCEDURE ^ GetLastLine(): Line; 
		PROCEDURE ^ SetScrollRegion; 
		PROCEDURE ^ Goto(row, col: SIZE); 
		PROCEDURE ^ SetOffsets; 
		PROCEDURE ^ MoveLines(down: BOOLEAN); 
		PROCEDURE ^ Scroll(down: BOOLEAN); 
		PROCEDURE ^ SetMargins(beg, end: SIZE); 
		PROCEDURE ^ RightTab; 
		PROCEDURE ^ EraseLine(l: Line; from, to: SIZE); 
		PROCEDURE ^ Erase(mode: CHAR; CONST par: ARRAY OF SIGNED32; n: SIZE); 
		PROCEDURE ^ NewAttr; 
		PROCEDURE ^ Bright; 
		PROCEDURE ^ Dim; 
		PROCEDURE ^ SetAttributes(CONST attrs: ARRAY OF SIGNED32; n: SIZE); 
		PROCEDURE ^ Draw*(canvas: WMG.Canvas); 
		PROCEDURE ^ MoveCursor(dr, dc: SIZE); 
		PROCEDURE ^ ESCSequence(ch: CHAR); 
		PROCEDURE ^ Consume(ch: CHAR); 
		PROCEDURE ^ FocusReceived*; 
		PROCEDURE ^ FocusLost*; 
		PROCEDURE ^ LocateBox(x, y: SIZE; VAR pos: Position); 
		PROCEDURE ^ Copy; 
		PROCEDURE ^ Paste; 
		PROCEDURE ^ ClickHandler(sender, par: ANY); 
		PROCEDURE ^ PointerDown*(x, y: SIZE; keys: SET); 
		PROCEDURE ^ PointerMove*(x, y: SIZE; keys: SET); 
		PROCEDURE ^ PointerUp*(x, y: SIZE; keys: SET); 
		PROCEDURE ^ CursorKey(keySym: SIZE); 
		PROCEDURE ^ KeyEvent*(ucs: SIZE; flags: SET; VAR keySym: SIZE); 
		PROCEDURE ^ Handle*(VAR m: WMMessages.Message); 
		PROCEDURE ^ resized; 
		PROCEDURE ^ Resized*; 
		PROCEDURE ^ Initialize*; 
		PROCEDURE ^ SetChannel(c: SSH.Channel); 
		PROCEDURE ^  & New*(cols, rows: SIZE; close: WindowCloser); 
		PROCEDURE ^ Setup; 
		PROCEDURE ^ Dispatch; 
	BEGIN{ACTIVE} 
	END Frame; 

	Window = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		toolbar: WMStandardComponents.Panel; 
		address, user: WMEditors.Editor; 
		connect, help: WMStandardComponents.Button; 
		sshConn: SSHAuthorize.Connection; 
		sshChan: SSH.Channel; 
		frame: Frame; 

		PROCEDURE ^  & New; 
		PROCEDURE ^ CreateForm(): WMComponents.VisualComponent; 
		PROCEDURE ^ Connected(): BOOLEAN; 
		PROCEDURE ^ ConnectHandler(sender, data: ANY); 
		PROCEDURE ^ HelpHandler(sender, data: ANY); 
		PROCEDURE ^ Close*; 
	END Window; 
VAR 
	hexd: ARRAY 17 OF CHAR; 

	PROCEDURE ^ Open*; 
BEGIN
END SSHClient.
