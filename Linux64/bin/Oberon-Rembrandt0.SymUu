MODULE Rembrandt0 IN Oberon;
	IMPORT Oberon, Display, Strings, Gadgets, Texts, Pictures, Objects, D3 := Display3, Out, Files, Math IN A2;
CONST 
	max = 256; 
TYPE 
	ColFrame* = POINTER TO ColFrameDesc; 

	ColFrameDesc* = RECORD (Gadgets.FrameDesc)
		col*: SIGNED16; 
	END; 

	Color* = POINTER TO ColorDesc; 

	ColorDesc* = RECORD (Gadgets.ObjDesc)
		col*: SIGNED16; 
	END; 

	; 

	; 
VAR 
	Z: SIGNED32; 
	color*: Color; 
	noc*, maxnoc*: SIGNED16; 
	coltable*: ARRAY max OF RECORD 
		r*, g*, b*: SIGNED16; 
	END; 
	r, g, b, rpal, gpal, bpal: ARRAY 256 OF SIGNED16; 
	floyd: POINTER TO RECORD 
		errr, errg, errb, clamp: ARRAY 1024 OF SIGNED32; 
		hash: ARRAY 16 OF ARRAY 16 OF ARRAY 16 OF CHAR; 
	END; 

	PROCEDURE ^ Uniform*(): FLOAT32; 
	PROCEDURE ^ InitSeed*(seed: SIGNED32); 
	PROCEDURE ^ InitFloyd; 
	PROCEDURE ^ Floyd*(S, D: Pictures.Picture); 
	PROCEDURE ^ RGBtoHSV(R, G, B: FLOAT32; VAR H, S, V: FLOAT32); 
	PROCEDURE ^ HSVtoRGB(H, S, V: FLOAT32; VAR R, G, B: FLOAT32); 
	PROCEDURE ^ Reduce*(S, D: Pictures.Picture; ds, dv: FLOAT32); 
	PROCEDURE ^ HandleColor*(obj: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ NewColorObj*; 
	PROCEDURE ^ HandleColFrame*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ NewColFrame*; 
	PROCEDURE ^ CopyBlock*(S, D: Pictures.Picture; x, y: SIGNED16; w, h, dx, dy, mode: SIGNED16); 
	PROCEDURE ^ ReplConst*(P: Pictures.Picture; col, x, y, w, h: SIGNED16); 
	PROCEDURE ^ AllocatePictureMem*(VAR P: Pictures.Picture; w, h, d: SIGNED16); 
	PROCEDURE ^ NearestColor*(r, g, b: SIGNED32): SIGNED16; 
	PROCEDURE ^ Gamma(val: SIGNED16; gamma: FLOAT32): SIGNED16; 
	PROCEDURE ^ Darken*; 
	PROCEDURE ^ Lighten*; 
	PROCEDURE ^ SetColor*; 
	PROCEDURE ^ ChangeColor*; 
	PROCEDURE ^ ResetAll*; 
	PROCEDURE ^ ResetOne*; 
BEGIN
END Rembrandt0.
