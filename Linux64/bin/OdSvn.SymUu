MODULE OdSvn;
	IMPORT OdClient, Log := TFLog, U := Strings, WebHTTP, Streams, XML, Files, OdUtil, OdXml, XMLObjects, Commands, KernelLog, SVNOutput, SVNAdmin, SVNUtil;
CONST 
TYPE 
	SvnProps = OBJECT 
	VAR 
		add: BOOLEAN; 
		date: ARRAY 33 OF CHAR; 
		author: ARRAY 50 OF CHAR; 
		revision: ARRAY 10 OF CHAR; 
		uuid: ARRAY 37 OF CHAR; 
		checksum: ARRAY 34 OF CHAR; 
	END SvnProps; 

	StringReader = OBJECT 
	VAR 
		res, pos: LONGINT; 
		s: U.String; 

		PROCEDURE ^  & Init(s: U.String); 
		PROCEDURE ^ Char(VAR ch: CHAR); 
	END StringReader; 

	LogItem = OBJECT 
	VAR 
		versionName, date, addedPath, modifiedPath, comment: U.String; 

		PROCEDURE ^  & Init; 
	END LogItem; 

	Activity* = OBJECT 
	VAR 
		url: U.String; 
		statuscode*: LONGINT; 
		log: Log.Log; 
		client: OdClient.OdClient; 

		PROCEDURE ^  & Init*(c: OdClient.OdClient; CONST name: ARRAY OF CHAR); 
		PROCEDURE ^ make*; 
		PROCEDURE ^ getUrl*(): U.String; 
		PROCEDURE ^ delete*; 
	END Activity; 

	UpdateReq* = OBJECT {EXCLUSIVE} (XML.Document)

		PROCEDURE ^  & InitUpdateReq*(client: OdClient.OdClient; svn: OdSvn; CONST pathName: ARRAY OF CHAR; headVersion, version: LONGINT); 
	END UpdateReq; 

	LogReq = OBJECT {EXCLUSIVE} (XML.Document)

		PROCEDURE ^  & InitLogReq(start, end: LONGINT); 
	END LogReq; 

	OdSvn* = OBJECT 
	VAR 
		useSvn: BOOLEAN; 
		globalVersion: LONGINT; 
		svnFileUpdate: BOOLEAN; 
		traverseDummy*, useUpdateTarget*, checkout*: BOOLEAN; 
		client*: OdClient.OdClient; 
		xml: OdXml.OdXml; 
		wrk*, ver*, errorMsg, repositoryURL*: ARRAY 256 OF CHAR; 
		pfStatus*: LONGINT; 
		countChanges*: LONGINT; 
		repositoryPathLength*: SIZE; 
		removeDir*, svnUpdated*: BOOLEAN; 
		resultDoc*: XML.Document; 
		nextVersion*: ARRAY 10 OF CHAR; 
		context*: Commands.Context; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ Get(CONST url: ARRAY OF CHAR; VAR f: Files.File); 
		PROCEDURE ^ ParseUpdate(doc: XML.Document; VAR txDelta: Files.File); 
		PROCEDURE ^ DecodeIO(in: StringReader; out: Streams.Writer): BOOLEAN; 
		PROCEDURE ^ TxDelta(txDelta: Files.File; CONST workUrl, targetName: ARRAY OF CHAR); 
		PROCEDURE ^ Propfind*(url: ARRAY OF CHAR; CONST properties: ARRAY OF CHAR; VAR props: WebHTTP.AdditionalField; VAR err: ARRAY OF CHAR); 
		PROCEDURE ^ Versions*(context: Commands.Context); 
		PROCEDURE ^ UseSvn*(b: BOOLEAN); 
		PROCEDURE ^ FileUpdate*(b: BOOLEAN); 
		PROCEDURE ^ UpdateReport*(pathName, vcc: ARRAY OF CHAR; CONST workUrl: ARRAY OF CHAR; headVersion, version: LONGINT; CONST workName: ARRAY OF CHAR; VAR res: WORD); 
		PROCEDURE ^ Update*(context: Commands.Context); 
		PROCEDURE ^ ParseVersions(url: ARRAY OF CHAR; doc: XML.Document; VAR versions: OdUtil.Dict); 
		PROCEDURE ^ LogReport(CONST url: ARRAY OF CHAR; bc: ARRAY OF CHAR; start, end: LONGINT); 
		PROCEDURE ^ Add*(context: Commands.Context); 
		PROCEDURE ^ Commit*(context: Commands.Context); 
		PROCEDURE ^ CollHead(CONST path: ARRAY OF CHAR; VAR resUrl: ARRAY OF CHAR); 
		PROCEDURE ^ Checkout*(url: ARRAY OF CHAR; VAR resHeader: WebHTTP.ResponseHeader; CONST err: ARRAY OF CHAR); 
		PROCEDURE ^ Proppatch*(url: ARRAY OF CHAR; VAR props: WebHTTP.AdditionalField; CONST err: ARRAY OF CHAR); 
		PROCEDURE ^ Merge*(url: ARRAY OF CHAR; actUrl: U.String; VAR resHeader: WebHTTP.ResponseHeader; CONST err: ARRAY OF CHAR); 
		PROCEDURE ^ SvnWrite(parent: XML.Element; CONST path, filename, version: ARRAY OF CHAR; added: BOOLEAN; VAR res: WORD); 
		PROCEDURE ^ SvnParseUpdate(doc: XML.Document; CONST workUrl, workName: ARRAY OF CHAR; VAR res: WORD); 
		PROCEDURE ^ SvnWritePROPS(CONST path, filename: ARRAY OF CHAR; props: SvnProps); 
	END OdSvn; 
VAR 
	log: Log.Log; 
	encTable: ARRAY 64 OF CHAR; 
	decTable: ARRAY 128 OF INTEGER; 

	PROCEDURE ^ InitTables; 
	PROCEDURE ^ RawNum(VAR delta: Files.Reader; VAR li: LONGINT); 
BEGIN
END OdSvn.
