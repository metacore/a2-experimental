MODULE SSHKeys;
	IMPORT RSA := CryptoRSA, DSA := CryptoDSA, BN := CryptoBigNumbers, U := CryptoUtils, SHA1 := CryptoSHA1, MD5 := CryptoMD5, P := CryptoPrimes, G := SSHGlobals, Files, Streams, Log := KernelLog, WMDialogs, Strings;
CONST 
	Ok = WMDialogs.ResOk; 
	Abort = WMDialogs.ResAbort; 
TYPE 
	BigNumber = BN.BigNumber; 

	PROCEDURE ^ SSHDSSVerify(dsa: DSA.Key; sig: DSA.Signature; CONST hash: ARRAY OF CHAR; hlen: SIZE): BOOLEAN; 
	PROCEDURE ^ SSHRSAVerify(rsa: RSA.Key; sig: BigNumber; CONST hash: ARRAY OF CHAR; hlen: SIZE): BOOLEAN; 
	PROCEDURE ^ GetKeyStart(CONST keykind, host: ARRAY OF CHAR): Files.Reader; 
	PROCEDURE ^ WriterAtEnd(): Streams.Writer; 
	PROCEDURE ^ CompareDSAKeys(CONST host: ARRAY OF CHAR; key: DSA.Key): BOOLEAN; 
	PROCEDURE ^ CompareRSAKeys(CONST host: ARRAY OF CHAR; key: RSA.Key): BOOLEAN; 
	PROCEDURE ^ VerifyHostkey*(CONST keyblob, signature, host, hash: ARRAY OF CHAR; hlen: SIZE): BOOLEAN; 
	PROCEDURE ^ RSAKeyGen*; 
BEGIN
END SSHKeys.
