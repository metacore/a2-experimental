MODULE WMTextTool;
	IMPORT Modules, Streams, Commands, Texts, Strings, WMComponents, WMRestorable, WMEditors, WMPopups, WMRectangles, WMGraphics, WMMessages, WMStandardComponents, WM := WMWindowManager, XML, XMLObjects;
CONST 
	WindowWidth = 122; 
	WindowHeight = 220; 
	ChangeFont = {0}; 
	ChangeSize = {1}; 
	ChangeStyle = {2}; 
	ChangeFgColor = {3}; 
	ChangeBgColor = {4}; 
	Absolute = 0; 
	IncrementBy = 1; 
	DecrementBy = 2; 
	LF = 0AX; 
TYPE 
	ChangeInfo = OBJECT (Texts.Attributes)
	VAR 
		name: ARRAY 128 OF CHAR; 
		fgColor, bgColor: LONGINT; 
		deltaSize: LONGINT; 
		deltaSizeMode: LONGINT; 
		style: SET; 
		fields: SET; 
	END ChangeInfo; 

	KillerMsg = OBJECT 
	END KillerMsg; 

	Window* = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		bold, lock, comment, stupid, assert, preferred, debug, normal, incSize, decSize, get, apply: WMStandardComponents.Button; 
		famEdit, sizeEdit, styleEdit, colorEdit, bgColEdit: WMEditors.TextField; 
		famCheck, sizeCheck, styleCheck, colorCheck, bgColCheck: WMStandardComponents.Checkbox; 
		styleB, colB, bgColB: WMStandardComponents.Button; 
		popup: WMPopups.Popup; 

		PROCEDURE ^ CreateForm(): WMComponents.VisualComponent; 
		PROCEDURE ^  & New*(c: WMRestorable.Context); 
		PROCEDURE ^ GetStyle(sender, data: ANY); 
		PROCEDURE ^ SetStyle(sender, data: ANY); 
		PROCEDURE ^ SetCustomStyle(sender, data: ANY); 
		PROCEDURE ^ StyleDrop(x, y: LONGINT; keys: SET; VAR handled: BOOLEAN); 
		PROCEDURE ^ StylePopupHandler(sender, data: ANY); 
		PROCEDURE ^ ColorHandler(x, y: LONGINT; keys: SET; VAR handled: BOOLEAN); 
		PROCEDURE ^ ColorPopupHandler(result: LONGINT); 
		PROCEDURE ^ BGColorHandler(x, y: LONGINT; keys: SET; VAR handled: BOOLEAN); 
		PROCEDURE ^ BGColorPopupHandler(result: LONGINT); 
		PROCEDURE ^ UpdateColors(sender, data: ANY); 
		PROCEDURE ^ Close*; 
		PROCEDURE ^ LoadData(elem: XML.Element); 
		PROCEDURE ^ StoreData(): XML.Element; 
		PROCEDURE ^ Handle*(VAR x: WMMessages.Message); 
	END Window; 
VAR 
	nofWindows: LONGINT; 

	PROCEDURE ^ GetNewSize(CONST fontname: ARRAY OF CHAR; mode, value, currentSize: LONGINT; VAR newSize: LONGINT); 
	PROCEDURE ^ EnsureAttribute(VAR attr: Texts.Attributes); 
	PROCEDURE ^ ChangeAttribute(VAR attr: Texts.Attributes; userData: ANY); 
	PROCEDURE ^ ApplyChange(changeInfo: ChangeInfo); 
	PROCEDURE ^ SetFontSize*(context: Commands.Context); 
	PROCEDURE ^ SetFontStyle*(context: Commands.Context); 
	PROCEDURE ^ SetFontColor*(context: Commands.Context); 
	PROCEDURE ^ SetFontName*(context: Commands.Context); 
	PROCEDURE ^ CountWords*(context: Commands.Context); 
	PROCEDURE ^ CountLines*(context: Commands.Context); 
	PROCEDURE ^ CountCharacters*(context: Commands.Context); 
	PROCEDURE ^ CountAll*(context: Commands.Context); 
	PROCEDURE ^ Open*; 
	PROCEDURE ^ Restore*(context: WMRestorable.Context); 
	PROCEDURE ^ IncCount; 
	PROCEDURE ^ DecCount; 
	PROCEDURE ^ Cleanup; 
BEGIN
END WMTextTool.
