MODULE SVNArgument;
	IMPORT Commands, Streams;
CONST 
	ResOK* = 0; 
	ResKEYNOTFOUND* =  -1; 
	ResEXPECTEDPARAMCOUNTFAILED* =  -2; 
	MaxArgumentValues = 32; 
TYPE 
	Argument* = OBJECT 
	TYPE 
		; 
	VAR 
		next, error*, last, unkeyed: INTEGER; 
		msg*: ARRAY 256 OF CHAR; 
		arguments: ARRAY 256 OF RECORD 
			key: ARRAY 32 OF CHAR; 
			value: ARRAY MaxArgumentValues OF ARRAY 256 OF CHAR; 
			expParams: INTEGER; 
			isset: BOOLEAN; 
		END; 
		arguments2: ARRAY MaxArgumentValues OF ARRAY 256 OF CHAR; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ Push*(CONST key: ARRAY OF CHAR; expParams: INTEGER); 
		PROCEDURE ^ GetKeyedArgument*(CONST key: ARRAY OF CHAR; VAR value: ARRAY OF CHAR; index: INTEGER); 
		PROCEDURE ^ GetUnkeyedArgument*(VAR value: ARRAY OF CHAR; index: INTEGER); 
		PROCEDURE ^ CountUnkeyedArguments*(): INTEGER; 
		PROCEDURE ^ IsSet*(CONST key: ARRAY OF CHAR): BOOLEAN; 
		PROCEDURE ^ Read*(context: Commands.Context); 
		PROCEDURE ^ FindKey(CONST s: ARRAY OF CHAR; VAR index: INTEGER; VAR found: BOOLEAN); 
	BEGIN
	END Argument; 

BEGIN
END SVNArgument.
