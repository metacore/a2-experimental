MODULE FoxDocumentationParser;
	IMPORT Scanner := FoxDocumentationScanner, Tree := FoxDocumentationTree, D := Debugging;
CONST 
	Trace = FALSE; 
TYPE 
	Token* = Scanner.Token; 

	ParagraphType* = Tree.ParagraphType; 

	ElementType* = Tree.ElementType; 

	Parser* = OBJECT 
	VAR 
		current: Scanner.Symbol; 
		scanner: Scanner.Scanner; 
		inList, italic, bold, link, code, underline: BOOLEAN; 
		previous: Token; 
		whitespace: BOOLEAN; 

		PROCEDURE ^  & Init*(scanner: Scanner.Scanner); 
		PROCEDURE ^ Next; 
		PROCEDURE ^ IsCurrent(token: Token): BOOLEAN; 
		PROCEDURE ^ SkipSpace(): LONGINT; 
		PROCEDURE ^ Expect(token: Token); 
		PROCEDURE ^ Get(token: Token): BOOLEAN; 
		PROCEDURE ^ ParseDocument*(document: Tree.Document); 
		PROCEDURE ^ ParseSections(sections: Tree.Sections); 
		PROCEDURE ^ ParseRow(cells: Tree.Text); 
		PROCEDURE ^ ParseTable(rows: Tree.Text); 
		PROCEDURE ^ TextStart(sentinel: Token): BOOLEAN; 
		PROCEDURE ^ ParseText(text: Tree.Text; sentinel: Token); 
		PROCEDURE ^ ParseParagraphs(paragraphs: Tree.Paragraphs); 
	END Parser; 

BEGIN
END FoxDocumentationParser.
