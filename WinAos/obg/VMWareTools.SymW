MODULE VMWareTools;
	IMPORT SYSTEM, Strings, Modules, KernelLog, WMWindowManager, WMMessages, Texts, TextUtilities, HostClipboard, Kernel;
CONST 
TYPE 
	MouseGrabber = OBJECT {EXCLUSIVE} 
	VAR 
		timer: Kernel.Timer; 
		alive: BOOLEAN; 
		t: LONGINT; 

	BEGIN{ACTIVE} 
	END MouseGrabber; 
VAR 
	manager: WMWindowManager.WindowManager; 
	viewPort: WMWindowManager.ViewPort; 
	w, h: LONGINT; 
	hw: LONGINT; 
	oldGUIBits: SET; 
	mouseGrabber: MouseGrabber; 
	textbuffer: Strings.String; 

	PROCEDURE  - ReadMouse(): LONGINT;
	CODE
	END ReadMouse; 
	PROCEDURE  - WriteMouse(pos: LONGINT);
	CODE
	END WriteMouse; 
	PROCEDURE  - SendLength(l: LONGINT);
	CODE
	END SendLength; 
	PROCEDURE  - Send4Chars(chars: LONGINT);
	CODE
	END Send4Chars; 
	PROCEDURE  - ReceiveLength(): LONGINT;
	CODE
	END ReceiveLength; 
	PROCEDURE  - Receive4Chars(): LONGINT;
	CODE
	END Receive4Chars; 
	PROCEDURE  - GetVirtualHWVersion(): LONGINT;
	CODE
	END GetVirtualHWVersion; 
	PROCEDURE  - GetVMWareVersion(): LONGINT;
	CODE
	END GetVMWareVersion; 
	PROCEDURE  - SetGUIOptions(options: SET);
	CODE
	END SetGUIOptions; 
	PROCEDURE  - GetGUIOptions(): SET;
	CODE
	END GetGUIOptions; 
	PROCEDURE ^ SetMousePos(x, y: LONGINT); 
	PROCEDURE ^ SetTextToClipBoard(CONST text: ARRAY OF CHAR); 
	PROCEDURE ^ GetTextFromClipBoard(VAR s: Strings.String); 
	PROCEDURE ^ GetFromClipboard(text: Texts.Text); 
	PROCEDURE ^ PutToClipboard(text: Texts.Text); 
	PROCEDURE ^ GetHostClipboard*; 
	PROCEDURE ^ ClipboardChanged(sender, data: ANY); 
	PROCEDURE ^ MessagePreview(VAR m: WMMessages.Message; VAR discard: BOOLEAN); 
	PROCEDURE ^ Install*; 
	PROCEDURE ^ Cleanup; 
BEGIN
END VMWareTools.
