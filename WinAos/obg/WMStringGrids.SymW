MODULE WMStringGrids;
	IMPORT Objects, Strings, XML, WMComponents, WMGraphics, WMGraphicUtilities, WMProperties, WMEvents, WMRectangles, WMGrids;
CONST 
	UsePerCellColors = 0; 
	UseInternalBuffer = 1; 
TYPE 
	String = Strings.String; 

	Cell* = OBJECT 
	VAR 
		caption: String; 
		color, textColor: WMGraphics.Color; 
		align: LONGINT; 
		img: WMGraphics.Image; 
		data: ANY; 
		flags: SET; 

		PROCEDURE ^  & Init; 
	END Cell; 

	CellArray = POINTER TO ARRAY OF Cell; 

	Row = POINTER TO RECORD 
		cells: CellArray; 
	END; 

	RowArray = POINTER TO ARRAY OF Row; 

	StringGridModel* = OBJECT {EXCLUSIVE} 
	VAR 
		lockedBy: ANY; 
		lockLevel: LONGINT; 
		viewChanged: BOOLEAN; 
		onChanged*: WMEvents.EventSource; 
		rows: RowArray; 
		nofRows, nofCols: LONGINT; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ Acquire*; 
		PROCEDURE ^ Release*; 
		PROCEDURE ^ AdjustRows(newSize: LONGINT); 
		PROCEDURE ^ AdjustRow(row: Row); 
		PROCEDURE ^ SetNofRows*(newNofRows: LONGINT); 
		PROCEDURE ^ SetNofCols*(newNofCols: LONGINT); 
		PROCEDURE ^ GetNofRows*(): LONGINT; 
		PROCEDURE ^ GetNofCols*(): LONGINT; 
		PROCEDURE ^ SetCellText*(col, row: LONGINT; caption: String); 
		PROCEDURE ^ GetCellText*(col, row: LONGINT): String; 
		PROCEDURE ^ SetCellTextAOC*(col, row, minBufferSize: LONGINT; CONST caption: ARRAY OF CHAR); 
		PROCEDURE ^ GetCellTextAOC*(col, row: LONGINT; VAR caption: ARRAY OF CHAR); 
		PROCEDURE ^ SetCellColors*(col, row: LONGINT; color, textColor: WMGraphics.Color); 
		PROCEDURE ^ GetCellColors*(col, row: LONGINT; VAR color, textColor: WMGraphics.Color; VAR valid: BOOLEAN); 
		PROCEDURE ^ SetCellData*(col, row: LONGINT; data: ANY); 
		PROCEDURE ^ GetCellData*(col, row: LONGINT): ANY; 
		PROCEDURE ^ SetCellImage*(col, row: LONGINT; img: WMGraphics.Image); 
		PROCEDURE ^ GetCellImage*(col, row: LONGINT): WMGraphics.Image; 
		PROCEDURE ^ SetTextAlign*(col, row, align: LONGINT); 
		PROCEDURE ^ GetTextAlign*(col, row: LONGINT): LONGINT; 
		PROCEDURE ^ DeleteRow*(rowNo: LONGINT; viewChanged: BOOLEAN); 
		PROCEDURE ^ InsertEmptyRow*(atRowNo: LONGINT); 
	END StringGridModel; 

	StringGrid* = OBJECT {EXCLUSIVE} (WMGrids.GenericGrid)
	VAR 
		model-: StringGridModel; 
		cellColor, hoverColor, selectedColor, fixedColor, textHoverColor, textColor, textSelectedColor: WMGraphics.Color; 
		clCell-, clFixed-, clHover-, clSelected-, clTextDefault-, clTextHover-, clTextSelected-: WMProperties.ColorProperty; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ ModelChanged(sender, data: ANY); 
		PROCEDURE ^ DrawBackground*(canvas: WMGraphics.Canvas); 
		PROCEDURE ^ GetCellData*(col, row: LONGINT): ANY; 
		PROCEDURE ^ DrawCell(canvas: WMGraphics.Canvas; w, h: LONGINT; state: SET; x, y: LONGINT); 
	END StringGrid; 
VAR 
	PrototypeTclCell*, PrototypeTclHover*, PrototypeTclSelected*, PrototypeTclTextDefault*, PrototypeTclTextHover*, PrototypeTclTextSelected*, PrototypeTclFixed*: WMProperties.ColorProperty; 
	PrototypeTfontHeight*: WMProperties.Int32Property; 
	StrStringGrid: Strings.String; 

	PROCEDURE ^ GenStringGrid*(): XML.Element; 
	PROCEDURE ^ InitStrings; 
	PROCEDURE ^ InitPrototypes; 
BEGIN
END WMStringGrids.
