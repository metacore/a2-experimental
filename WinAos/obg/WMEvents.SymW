MODULE WMEvents;
	IMPORT Kernel, Objects, Strings, KernelLog;
CONST 
TYPE 
	String = Strings.String; 

	EventListener* = PROCEDURE {DELEGATE}(sender, par: ANY); 

	CompCommandFinder* = PROCEDURE {DELEGATE}(str: String):EventListener; 

	EventListenerLink = POINTER TO RECORD 
		event: EventListener; 
		string: String; 
		next: EventListenerLink; 
	END; 

	EventSource* = OBJECT {EXCLUSIVE} 
	TYPE 
		; 
	VAR 
		listeners: RECORD 
			event: EventListener; 
			string: String; 
			next: EventListenerLink; 
		END; 
		name, info: String; 
		owner: ANY; 
		finder: CompCommandFinder; 
		next: EventSource; 
		minimalDelay: LONGINT; 
		updateTimer: Kernel.MilliTimer; 
		lastFrameTimer: Objects.Timer; 
		lastPar: ANY; 

		PROCEDURE ^  & New*(owner: ANY; name, info: String; finder: CompCommandFinder); 
		PROCEDURE ^ SetMinimalDelay*(ms: LONGINT); 
		PROCEDURE ^ GetName*(): String; 
		PROCEDURE ^ GetInfo*(): String; 
		PROCEDURE ^ Add*(observer: EventListener); 
		PROCEDURE ^ AddByString*(link: String); 
		PROCEDURE ^ Remove*(observer: EventListener); 
		PROCEDURE ^ RemoveByString*(string: String); 
		PROCEDURE ^ CallWithSender*(sender, par: ANY); 
		PROCEDURE ^ Call*(par: ANY); 
		PROCEDURE ^ Call0; 
		PROCEDURE ^ HasListeners*(): BOOLEAN; 
	END EventSource; 

	EventSourceArray* = POINTER TO ARRAY OF EventSource; 

	EventSourceList* = OBJECT {EXCLUSIVE} 
	VAR 
		head: EventSource; 
		nofEventSources: LONGINT; 

		PROCEDURE ^  & New*; 
		PROCEDURE ^ Add*(x: EventSource); 
		PROCEDURE ^ Remove*(x: EventSource); 
		PROCEDURE ^ Enumerate*(): EventSourceArray; 
		PROCEDURE ^ GetEventSourceByName*(name: String): EventSource; 
	END EventSourceList; 

	EventListenerInfo* = OBJECT 
	VAR 
		name, info: String; 
		eventListener: EventListener; 
		next: EventListenerInfo; 

		PROCEDURE ^  & Init*(name, info: String; handler: EventListener); 
		PROCEDURE ^ GetName*(): String; 
		PROCEDURE ^ GetInfo*(): String; 
		PROCEDURE ^ GetHandler*(): EventListener; 
	END EventListenerInfo; 

	EventListenerArray* = POINTER TO ARRAY OF EventListenerInfo; 

	EventListenerList* = OBJECT {EXCLUSIVE} 
	VAR 
		head: EventListenerInfo; 
		nofEventListeners: LONGINT; 

		PROCEDURE ^  & New*; 
		PROCEDURE ^ Add*(x: EventListenerInfo); 
		PROCEDURE ^ Remove*(x: EventListenerInfo); 
		PROCEDURE ^ Enumerate*(): EventListenerArray; 
		PROCEDURE ^ GetHandlerByName*(name: String): EventListener; 
	END EventListenerList; 

BEGIN
END WMEvents.
