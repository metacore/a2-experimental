MODULE WMPopups;
	IMPORT Strings, WMRectangles, WMGraphics, WMEvents, WMWindowManager, WMComponents, WMStandardComponents;
CONST 
	LineHeight = 20; 
TYPE 
	Entry = OBJECT 
	VAR 
		caption: Strings.String; 
		onClickHandler: WMEvents.EventListener; 
		parameter: ANY; 
		next: Entry; 

		PROCEDURE ^  & Init(caption: Strings.String; onClickHandler: WMEvents.EventListener; parameter: ANY); 
	END Entry; 

	PopupWindow = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		isClosed: BOOLEAN; 

		PROCEDURE ^  & New(entries: Entry); 
		PROCEDURE ^ CreateForm(entries: Entry): WMComponents.VisualComponent; 
		PROCEDURE ^ Clicked(sender, data: ANY); 
		PROCEDURE ^ FocusLost*; 
		PROCEDURE ^ Close*; 
		PROCEDURE ^ FocusGot*; 
	END PopupWindow; 

	Popup* = OBJECT {EXCLUSIVE} 
	VAR 
		first, last: Entry; 
		window: PopupWindow; 

		PROCEDURE ^  & New*; 
		PROCEDURE ^ Add*(CONST caption: ARRAY OF CHAR; onClickHandler: WMEvents.EventListener); 
		PROCEDURE ^ AddParButton*(CONST caption: ARRAY OF CHAR; onClickHandler: WMEvents.EventListener; par: ANY); 
		PROCEDURE ^ Close*; 
		PROCEDURE ^ Popup*(x, y: LONGINT); 
	END Popup; 

	ColorSwatchPopup* = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		colorPanel: ColorSwatchPanel; 
		color-: LONGINT; 
		onColorChosen*: PROCEDURE {DELEGATE}(color: LONGINT); 

		PROCEDURE ^  & New*; 
		PROCEDURE ^ CreatePopup; 
		PROCEDURE ^ Popup*(x, y: LONGINT); 
		PROCEDURE ^ Clicked(sender, data: ANY); 
		PROCEDURE ^ FocusLost*; 
		PROCEDURE ^ FocusGot*; 
		PROCEDURE ^ SetColor(color: LONGINT); 
	END ColorSwatchPopup; 

	ColorSwatchPanel* = OBJECT {EXCLUSIVE} (WMComponents.VisualComponent)
	VAR 
		colors: ARRAY 19 OF LONGINT; 
		ChosenColorProc*: PROCEDURE {DELEGATE}(color: LONGINT); 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ PointerDown*(x, y: LONGINT; keys: SET); 
		PROCEDURE ^ DrawBackground*(canvas: WMGraphics.Canvas); 
		PROCEDURE ^ BuildPalette; 
	END ColorSwatchPanel; 

BEGIN
END WMPopups.
