MODULE antsPottsSimAdministration IN Oberon;
	IMPORT antsArrays, vyBase, vyLongrealVec, antsVecOpt, antsPotts1DSurvey, antsTautString, antsSecurity, vyLongreal, antsBellman, antsPottsMonotone, antsReadWrite, antsPottsSimDataStructure, vyName, antsFunctions, Strings, MathL IN A2, Out;
CONST 
	cMedian* = 0; 
	cMean* = 1; 
	cHampel* = 2; 
	cSaegezahn* = 3; 
	cHuber* = 4; 
	cTautString* = 5; 
	cGauss* = 0; 
	cLaplace* = 1; 
	cExp* = 2; 
	cUniform* = 3; 
	cAIC* = 0; 
	cAICEst* = 1; 
	cAICC* = 2; 
	cSIC* = 3; 
	cSICEst* = 4; 
	cSICC* = 5; 
	cMaxInterval* = 6; 
	cMaxIntervalLog* = 7; 
	cVarianceGain* = 8; 
	cVarianceTest* = 9; 
	cKneeCheck* = 10; 
	cMultiCoeff* = 11; 
	cConstGamma* = 12; 
	cEstimatedVariance* = 0; 
	cCountJumpsAtLoc* = 1; 
	cCountJumps* = 2; 
	cMAD* = 3; 
	cEstimatedL1Diff* = 4; 
	cEstimatedLUnendlDiff* = 5; 
	cMedianMonotone* = 0; 
	cMeanMonotone* = 1; 
	cHampelMonotone* = 2; 
	cSaegezahnMonotone* = 3; 
	cHuberMonotone* = 4; 
VAR 
	globalStat: antsBellman.Statistic; 
	globalGamma: LONGREAL; 

	PROCEDURE ^ DoSetMonotone*(monotone: ARRAY OF CHAR): INTEGER; 
	PROCEDURE ^ DoSetNoise*(noise: ARRAY OF CHAR): INTEGER; 
	PROCEDURE ^ DoSetReko*(reko: ARRAY OF CHAR): INTEGER; 
	PROCEDURE ^ DoSetGamma*(gamma: ARRAY OF CHAR): INTEGER; 
	PROCEDURE ^ DoReadData*(VAR set: antsPottsSimDataStructure.SetChain; dataChainname, file: ARRAY OF CHAR); 
	PROCEDURE ^ DoMonotone*(x: antsArrays.X1d; VAR y: antsArrays.X1d; monotonetype: ARRAY OF CHAR); 
	PROCEDURE ^ CalcDiffAndEN*(x: antsArrays.X1d; y: antsArrays.X1d; VAR diff: LONGREAL; VAR eN: LONGREAL); 
	PROCEDURE ^ Mad(x: antsArrays.X1d): LONGREAL; 
	PROCEDURE ^ Max*(x: antsArrays.X1d; VAR m: LONGINT): LONGREAL; 
	PROCEDURE ^ Min*(x: antsArrays.X1d; VAR m: LONGINT): LONGREAL; 
	PROCEDURE ^ SetName*(VAR one: ARRAY OF CHAR; two: ARRAY OF CHAR); 
	PROCEDURE ^ DoCreateData*(VAR set: antsPottsSimDataStructure.SetChain; function: vyName.tNameArray; datanumber: LONGINT; fct: vyBase.Object; VAR datavec: vyBase.Object; VAR dataname: ARRAY OF CHAR); 
	PROCEDURE ^ DoDataRekoLoop*(VAR set: antsPottsSimDataStructure.SetChain; dataChainname: ARRAY OF CHAR; rekotype, gammatype: ARRAY OF CHAR; gamma: LONGREAL; VAR datarekoname: ARRAY OF CHAR); 
	PROCEDURE ^ DoDataReko*(VAR set: antsPottsSimDataStructure.SetChain; dataChainname, dataname: ARRAY OF CHAR; rekotype, gammatype: ARRAY OF CHAR; gamma: LONGREAL); 
	PROCEDURE ^ DoReko*(x: antsArrays.X1d; VAR y: antsArrays.X1d; VAR jumps: antsArrays.L1d; rekotype, gammatype: ARRAY OF CHAR; var: LONGREAL; gamma: LONGREAL; VAR actgamma: LONGREAL); 
	PROCEDURE ^ statMean(k1, k2: LONGINT): LONGREAL; 
	PROCEDURE ^ Function1d(from, to: LONGINT): LONGREAL; 
	PROCEDURE ^ DoResults*(x, y: antsArrays.X1d; VAR z: antsArrays.X1d; jumps: antsArrays.L1d; gamma: LONGREAL; eN: antsArrays.X1d; noisetype: LONGINT); 
	PROCEDURE ^ DoAddNoise*(x: antsArrays.X1d; VAR y: antsArrays.X1d; parameter: LONGREAL; noisetype: ARRAY OF CHAR); 
	PROCEDURE ^ DoDataLoop*(VAR set: antsPottsSimDataStructure.SetChain; dataChainname: ARRAY OF CHAR; meanM, medianM, hampelM, saegezahnM, huberM: ARRAY OF CHAR; gaussN, laplaceN, expN, uniformN: ARRAY OF CHAR; noiseParameter: LONGREAL; noiseNumber: LONGINT; rekotype: ARRAY OF CHAR; gammatype: ARRAY OF CHAR; gamma: LONGREAL; estimateNoise: ARRAY OF CHAR); 
	PROCEDURE ^ DoMonotoneLoop*(VAR set: antsPottsSimDataStructure.SetChain; dataChainname, dataname: ARRAY OF CHAR; meanM, medianM, hampelM, saegezahnM, huberM: ARRAY OF CHAR; gaussN, laplaceN, expN, uniformN: ARRAY OF CHAR; noiseParameter: LONGREAL; noiseNumber: LONGINT; rekotype: ARRAY OF CHAR; gammatype: ARRAY OF CHAR; gamma: LONGREAL; estimateNoise: ARRAY OF CHAR); 
	PROCEDURE ^ DoDegradedLoop*(VAR set: antsPottsSimDataStructure.SetChain; dataChainname, dataname, monotonename: ARRAY OF CHAR; gaussN, laplaceN, expN, uniformN: ARRAY OF CHAR; noiseParameter: LONGREAL; noiseNumber: LONGINT; rekotype: ARRAY OF CHAR; gammatype: ARRAY OF CHAR; gamma: LONGREAL; estimateNoise: ARRAY OF CHAR); 
	PROCEDURE ^ CalcNearestNoiseP*(x, y: antsArrays.X1d; actualDiff: LONGREAL): LONGREAL; 
	PROCEDURE ^ Mean*(x: antsArrays.X1d): LONGREAL; 
	PROCEDURE ^ DoRekoLoop*(VAR set: antsPottsSimDataStructure.SetChain; dataChainname, dataname, monotonename, degradedname: ARRAY OF CHAR; rekotype: ARRAY OF CHAR; gammatype: ARRAY OF CHAR; gamma: LONGREAL; var: LONGREAL; rekotypenumb: LONGINT); 
	PROCEDURE ^ DoREKOLoop*(VAR set: antsPottsSimDataStructure.SetChain; dataChainname: ARRAY OF CHAR; rekotype: ARRAY OF CHAR; gammatype: ARRAY OF CHAR; gamma: LONGREAL); 
BEGIN
END antsPottsSimAdministration.
