MODULE WMOTFonts;
	IMPORT KernelLog, WMGraphics, Raster, WMFontManager, Strings, WMRectangles, Files, OpenType, OpenTypeInt, OpenTypeScan;
CONST 
	ScreenDPI = 71; 
	Debug = FALSE; 
TYPE 
	Glyph* = RECORD 
		img-: WMGraphics.Image; 
		code-: LONGINT; 
		dx, x, y, w, h: LONGINT; 
	END; 

	GlyphArray* = POINTER TO ARRAY OF Glyph; 

	GlyphRange* = RECORD 
		firstCode-, lastCode-: LONGINT; 
		glyphs-: GlyphArray; 
		loaded-: BOOLEAN; 
	END; 

	GlyphRangeArray* = POINTER TO ARRAY OF GlyphRange; 

	RasterData = RECORD (OpenType.RasterData)
		cache-: POINTER TO ARRAY OF ARRAY OF CHAR; 
	END; 

	Font* = OBJECT {EXCLUSIVE} (WMGraphics.Font)
	VAR 
		nofGlyphs-: LONGINT; 
		nofGlyphRanges-: LONGINT; 
		glyphRanges: GlyphRangeArray; 
		placeholderimg: WMGraphics.Image; 
		fontFile: Files.File; 
		empty: WMRectangles.Rectangle; 
		fname-, subfam-: ARRAY 256 OF CHAR; 
		ofont: OpenType.Font; 
		inst: OpenType.Instance; 
		glyph: OpenType.Glyph; 
		cache-: POINTER TO ARRAY OF ARRAY OF CHAR; 
		ras: OpenTypeScan.Rasterizer; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ MapCode(VAR code: LONGINT); 
		PROCEDURE ^ GetGlyphMap*(code: LONGINT; VAR map: WMGraphics.Image); 
		PROCEDURE ^ HasChar*(code: LONGINT): BOOLEAN; 
		PROCEDURE ^ GetGlyphSpacings*(code: LONGINT; VAR glyphSpacings: WMGraphics.GlyphSpacings); 
		PROCEDURE ^ LoadGlyphRange(gri: LONGINT); 
		PROCEDURE ^ FindGlyphRange(code: LONGINT; VAR gri: LONGINT): BOOLEAN; 
		PROCEDURE ^ FindGlyph(code: LONGINT; VAR glyph: Glyph): BOOLEAN; 
		PROCEDURE ^ CountGlyphes(): LONGINT; 
		PROCEDURE ^ ReadGlyph(code: LONGINT; VAR g: Glyph); 
		PROCEDURE ^ Load(filename: ARRAY OF CHAR; size: LONGINT): BOOLEAN; 
	END Font; 
VAR 
	bit: ARRAY 256 OF ARRAY 8 OF BOOLEAN; 

	PROCEDURE ^ FillRect*(llx, lly, urx, ury, opacity: INTEGER; VAR data: OpenType.RasterData0); 
	PROCEDURE ^ InitBitTable; 
	PROCEDURE ^ LoadFont(name: ARRAY OF CHAR; size: LONGINT): Font; 
	PROCEDURE ^ LoadExactFont*(fi: WMFontManager.FontInfo): WMGraphics.Font; 
	PROCEDURE ^ LoadApproximateFont*(fi: WMFontManager.FontInfo): WMGraphics.Font; 
	PROCEDURE ^ MultiTest*; 
BEGIN
END WMOTFonts.
