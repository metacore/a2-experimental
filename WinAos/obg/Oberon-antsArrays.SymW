MODULE antsArrays IN Oberon;
	IMPORT vyLongreal, vyLongrealVec, vyInteger, vyIntVec, vyLongint, vyLongintVec, Out, vyRanBase, aM := antsMessages;
TYPE 
	I1d* = POINTER TO ARRAY OF INTEGER; 

	R1d* = POINTER TO ARRAY OF REAL; 

	X1d* = POINTER TO ARRAY OF LONGREAL; 

	L1d* = POINTER TO ARRAY OF LONGINT; 

	I2d* = POINTER TO ARRAY OF ARRAY OF INTEGER; 

	R2d* = POINTER TO ARRAY OF ARRAY OF REAL; 

	X2d* = POINTER TO ARRAY OF ARRAY OF LONGREAL; 

	L2d* = POINTER TO ARRAY OF ARRAY OF LONGINT; 

	I3d* = POINTER TO ARRAY OF I2d; 

	R3d* = POINTER TO ARRAY OF R2d; 

	X3d* = POINTER TO ARRAY OF X2d; 

	L3d* = POINTER TO ARRAY OF L2d; 

	I4d* = POINTER TO ARRAY OF I3d; 

	R4d* = POINTER TO ARRAY OF R3d; 

	X4d* = POINTER TO ARRAY OF X3d; 

	L4d* = POINTER TO ARRAY OF L3d; 
VAR 
	ra*: X1d; 
	la*: L1d; 
	ia*: I1d; 

	PROCEDURE ^ kSmallestX*(VAR a: ARRAY OF LONGREAL; n, k: LONGINT): LONGREAL; 
	PROCEDURE ^ kSmallestL*(VAR a: ARRAY OF LONGINT; n, k: LONGINT): LONGINT; 
	PROCEDURE ^ kSmallestI*(VAR a: ARRAY OF INTEGER; n, k: LONGINT): INTEGER; 
	PROCEDURE ^ Use1dX(VAR a: ARRAY OF LONGREAL; n: LONGINT); 
	PROCEDURE ^ Use1dI(VAR a: ARRAY OF INTEGER; n: LONGINT); 
	PROCEDURE ^ Use1dL(VAR a: ARRAY OF LONGINT; n: LONGINT); 
	PROCEDURE ^ Median1dX*(VAR a: ARRAY OF LONGREAL; n: LONGINT): LONGREAL; 
	PROCEDURE ^ Median1dL*(VAR a: ARRAY OF LONGINT; n: LONGINT): LONGINT; 
	PROCEDURE ^ Median1dI*(VAR a: ARRAY OF INTEGER; n: LONGINT): INTEGER; 
	PROCEDURE ^ Median2dX*(VAR S: ARRAY OF ARRAY OF LONGREAL): LONGREAL; 
	PROCEDURE ^ MinMax2dX*(VAR S: ARRAY OF ARRAY OF LONGREAL; VAR min, max: LONGREAL); 
	PROCEDURE ^ Out2dX*(A: ARRAY OF ARRAY OF LONGREAL); 
	PROCEDURE ^ Transpose2dX*(VAR A: ARRAY OF ARRAY OF LONGREAL): X2d; 
	PROCEDURE ^ Uniform1dX*(VAR a: ARRAY OF LONGREAL; x, w: LONGINT; top: LONGREAL); 
	PROCEDURE ^ Uniform1dL*(VAR a: ARRAY OF LONGINT; x, w: LONGINT; top: LONGINT); 
	PROCEDURE ^ Uniform1dI*(VAR a: ARRAY OF INTEGER; x, w: LONGINT; top: INTEGER); 
	PROCEDURE ^ Uniform2dI*(VAR A: ARRAY OF ARRAY OF INTEGER; top: INTEGER; x, y, w, h: LONGINT); 
	PROCEDURE ^ Uniform2dL*(VAR A: ARRAY OF ARRAY OF LONGINT; top: LONGINT; x, y, w, h: LONGINT); 
	PROCEDURE ^ Uniform2dX*(VAR A: ARRAY OF ARRAY OF LONGREAL; top: LONGREAL; x, y, w, h: LONGINT); 
	PROCEDURE ^ Uniform3dI*(VAR A: I3d; top: INTEGER); 
	PROCEDURE ^ Uniform4dI*(VAR A: I4d; top: INTEGER); 
	PROCEDURE ^ FindFirstI*(VAR f: ARRAY OF INTEGER; value: INTEGER): LONGINT; 
	PROCEDURE ^ FindFirstX*(VAR f: ARRAY OF LONGREAL; value: LONGREAL): LONGINT; 
	PROCEDURE ^ FindMaxima1dX*(orig: ARRAY OF LONGREAL; VAR maxima: ARRAY OF LONGREAL); 
	PROCEDURE ^ FindMaxima2dXRows*(VAR Orig, Maxima: ARRAY OF ARRAY OF LONGREAL); 
	PROCEDURE ^ AndMax*(VAR Max1, Max2, Result: ARRAY OF ARRAY OF LONGREAL); 
	PROCEDURE ^ VecFromArrayX*(VAR a: ARRAY OF LONGREAL): vyLongrealVec.tVector; 
	PROCEDURE ^ VecFromArrayL*(VAR a: ARRAY OF LONGINT): vyLongintVec.tVector; 
	PROCEDURE ^ VecFromArrayI*(VAR a: ARRAY OF INTEGER): vyIntVec.tVector; 
	PROCEDURE ^ CountModi*(x: vyLongrealVec.tVector; minlen, maxlen: LONGINT): LONGINT; 
	PROCEDURE ^ TestMedian*; 
BEGIN
END antsArrays.
