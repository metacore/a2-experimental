MODULE vyRanParksMiller IN Oberon;
	IMPORT vyRanBase, Objects;
CONST 
	idversion* = \"vyRanParksMiller 0.0a5"\; 
	a = 16807; 
	m = 2147483647; 
	q = (m DIV a); 
	r = (m MOD a); 
TYPE 
	Bits = vyRanBase.Bits; 

	tRandom = vyRanBase.tRandom; 

	PROCEDURE ^ ParksMiller*(VAR s: SIGNED32); 
	PROCEDURE ^ Next*(r: tRandom); 
	PROCEDURE ^ Max(r: tRandom): Bits; 
	PROCEDURE ^ Get(gen: tRandom): Bits; 
	PROCEDURE ^ GetV(gen: tRandom; count: SIGNED32; VAR nrs: ARRAY OF Bits; start: SIGNED32); 
	PROCEDURE ^ GetUniform(gen: tRandom): FLOAT64; 
	PROCEDURE ^ RandomUVX(gen: tRandom; count: SIGNED32; VAR nrs: ARRAY OF FLOAT64; start: SIGNED32); 
	PROCEDURE ^ RandomUV(gen: tRandom; count: SIGNED32; VAR nrs: ARRAY OF FLOAT32; start: SIGNED32); 
	PROCEDURE ^ GetL(gen: tRandom; top: SIGNED32): SIGNED32; 
	PROCEDURE ^ RandomLV(r: tRandom; top, count: SIGNED32; VAR nrs: ARRAY OF SIGNED32; start: SIGNED32); 
	PROCEDURE ^ Reset(r: tRandom); 
	PROCEDURE ^ SumPSqr*(gen: tRandom; top: SIGNED32): FLOAT64; 
	PROCEDURE ^ HandleAttributes(obj: tRandom; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ Handler*(obj: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ InitBasic(r: tRandom); 
	PROCEDURE ^ Init(r: tRandom); 
	PROCEDURE ^ Alloc*; 
	PROCEDURE ^ GetNew*(): tRandom; 
	PROCEDURE ^ New*; 
	PROCEDURE ^ Install*; 
BEGIN
END vyRanParksMiller.
