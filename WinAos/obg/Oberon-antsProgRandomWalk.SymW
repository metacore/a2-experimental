MODULE antsProgRandomWalk IN Oberon;
	IMPORT antsObjects, Files, antsKernel, antsModels, antsCommands, vyName, Objects, vyBase, Gadgets, vyLongrealVec, vyRandom, aM := antsMessages;
CONST 
	version* = 1; 
	moduleName = \"antsProgRandomWalk.Gen"\; 
	LinieC = 0; 
	GitterC = 1; 
	WabeC = 2; 
TYPE 
	tModel* = POINTER TO tModelDesc; 

	tModelDesc* = RECORD (antsModels.tModelDesc)
		v3: vyBase.Object; 
		v2: vyBase.Object; 
		v1: vyBase.Object; 
		modeltype: SIGNED16; 
	END; 

	function* = PROCEDURE (VAR v1, v2, v3: FLOAT64); 
VAR 
	gitter*: function; 

	PROCEDURE ^ StoreM(VAR R: Files.Rider; o: tModel); 
	PROCEDURE ^ LoadM(VAR R: Files.Rider; o: tModel); 
	PROCEDURE ^ Gitter(VAR val1, val2, val3: FLOAT64); 
	PROCEDURE ^ OneSweep(s: antsKernel.Kernel); 
	PROCEDURE ^ Init(s: antsKernel.Kernel); 
	PROCEDURE ^ HandleAttributes(o: tModel; VAR msg: Objects.AttrMsg); 
	PROCEDURE ^ HandleLinks(o: tModel; VAR msg: Objects.LinkMsg); 
	PROCEDURE ^ HandleBind(o: tModel; VAR msg: Objects.BindMsg); 
	PROCEDURE ^ Handler*(o: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ OpenModel*(msg: tModel; name: vyName.tNameArray); 
	PROCEDURE ^ NewPars(o: tModel); 
	PROCEDURE ^ Gen*; 
	PROCEDURE ^ DoNewModel*(name: vyName.tNameArray; o1, o2, o3: vyBase.Object): tModel; 
	PROCEDURE ^ NewModel*; 
BEGIN
END antsProgRandomWalk.
