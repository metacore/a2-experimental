MODULE Outlines IN Oberon;
	IMPORT Files, Texts, Objects, Display, Display3, Printer, Printer3, Effects, Attributes, Gadgets, Oberon, Documents, Desktops, Out;
CONST 
	open* = 0; 
	close* = 1; 
	folded* = 2; 
	tempOpen* = 3; 
	openMode* = {open, tempOpen}; 
	FW = 12; 
	FH = 10; 
	MaxPatLen = 128; 
TYPE 
	Outline* = POINTER TO OutlineDesc; 

	OutlineDesc* = RECORD (Gadgets.FrameDesc)
		fstate*: INTEGER; 
		len*: LONGINT; 
		buf*: Texts.Buffer; 
	END; 

	FindInfo = RECORD 
		sPat: ARRAY MaxPatLen OF CHAR; 
		sDv: ARRAY (MaxPatLen + 1) OF INTEGER; 
		sLen: INTEGER; 
		time: LONGINT; 
		rBuf: Texts.Buffer; 
	END; 
VAR 
	oldBroadcast: Display.MsgProc; 
	inf: FindInfo; 
	handle: Objects.Handler; 
	insertT: Texts.Text; 
	saveB: Texts.Buffer; 

	PROCEDURE ^ MakeOutline*(state: INTEGER): Outline; 
	PROCEDURE ^ GetFrame(): Display.Frame; 
	PROCEDURE ^ GetText(F: Display.Frame): Texts.Text; 
	PROCEDURE ^ FindBefore(T: Texts.Text; obj: Objects.Object; VAR before: Objects.Object; VAR pos: LONGINT); 
	PROCEDURE ^ CloseForward(F: Outline; T: Texts.Text; pos: LONGINT); 
	PROCEDURE ^ CloseBackward(F: Outline; T: Texts.Text; pos: LONGINT); 
	PROCEDURE ^ Ins(T: Texts.Text; pos: LONGINT; obj: Objects.Object); 
	PROCEDURE ^ Open(F: Outline; T: Texts.Text; pos: LONGINT); 
	PROCEDURE ^ Fold(F: Outline; x, y, w, h: INTEGER; VAR M: Oberon.InputMsg; R: Display3.Mask); 
	PROCEDURE ^ ExpandAll*(T: Texts.Text; from: LONGINT; temporal: BOOLEAN); 
	PROCEDURE ^ CollapseFromTo*(T: Texts.Text; beg, end: LONGINT; modes: SET); 
	PROCEDURE ^ CollapseAll*(T: Texts.Text; modes: SET); 
	PROCEDURE ^ DTriangle(R: Display3.Mask; x, y, dim: INTEGER; open: BOOLEAN); 
	PROCEDURE ^ RestoreOutline(F: Outline; R: Display3.Mask; x, y, w, h: INTEGER); 
	PROCEDURE ^ P(x: INTEGER): INTEGER; 
	PROCEDURE ^ PTriangle(R: Display3.Mask; x, y, dim: INTEGER; open: BOOLEAN); 
	PROCEDURE ^ PrintOutline(F: Outline; M: Display.DisplayMsg); 
	PROCEDURE ^ CopyOutline*(VAR M: Objects.CopyMsg; from, to: Outline); 
	PROCEDURE ^ Attr(F: Outline; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ OutlineHandler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ NewOutline*; 
	PROCEDURE ^ New*; 
	PROCEDURE ^ InsertText*(T: Texts.Text; beg, end: LONGINT); 
	PROCEDURE ^ RemoveAll*(T: Texts.Text); 
	PROCEDURE ^ Remove*; 
	PROCEDURE ^ Insert*; 
	PROCEDURE ^ NoBroadcast(VAR M: Display.FrameMsg); 
	PROCEDURE ^ MarkPatPos(F: Display.Frame; T: Texts.Text; pos: LONGINT); 
	PROCEDURE ^ CalcDispVec(time: LONGINT); 
	PROCEDURE ^ SPatFound(text: Texts.Text; VAR pos: LONGINT): BOOLEAN; 
	PROCEDURE ^ Search*; 
	PROCEDURE ^ replace(): BOOLEAN; 
	PROCEDURE ^ Replace*; 
	PROCEDURE ^ ReplaceAll*; 
	PROCEDURE ^ Expand*; 
	PROCEDURE ^ Collapse*; 
BEGIN
END Outlines.
