MODULE V24;
	IMPORT Kernel32, KernelLog, Heaps, Kernel, Commands, Serials, Strings;
CONST 
	MaxPortNo = 32; 
TYPE 
	Port* = OBJECT {EXCLUSIVE} (Serials.Port)
	VAR 
		handle: Kernel32.HANDLE; 
		portname: ARRAY 6 OF CHAR; 
		timer: Kernel.Timer; 
		rOverlapped, wOverlapped: Kernel32.Overlapped; 

		PROCEDURE ^  & Init*(port: SIGNED32); 
		PROCEDURE ^ Open*(bps, data, parity, stop: SIGNED32; VAR res: INTEGER); 
		PROCEDURE ^ Send*(CONST buf: ARRAY OF CHAR; ofs, len: SIZE; propagate: BOOLEAN; VAR res: INTEGER); 
		PROCEDURE ^ SendChar*(ch: CHAR; VAR res: INTEGER); 
		PROCEDURE ^ Receive*(VAR buf: ARRAY OF CHAR; ofs, size, min: SIZE; VAR len: SIZE; VAR res: INTEGER); 
		PROCEDURE ^ ReceiveChar*(VAR ch: CHAR; VAR res: INTEGER); 
		PROCEDURE ^ Available*(): SIZE; 
		PROCEDURE ^ SetPortState(bps, data, parity, stop: SIGNED32; VAR res: INTEGER); 
		PROCEDURE ^ FinalizePort(ptr: ANY ); 
		PROCEDURE ^ GetPortState*(VAR openstat: BOOLEAN; VAR bps, data, parity, stop: SIGNED32); 
		PROCEDURE ^ ClearMC*(s: SET); 
		PROCEDURE ^ SetMC*(s: SET); 
		PROCEDURE ^ GetMC*(VAR s: SET); 
		PROCEDURE ^ Wait; 
		PROCEDURE ^ Close*; 
	END Port; 

	PROCEDURE ^ Scan*(context: Commands.Context); 
	PROCEDURE ^ Install*(context: Commands.Context); 
	PROCEDURE ^ Init*; 
BEGIN
END V24.
