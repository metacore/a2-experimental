MODULE TextFields IN Oberon;
	IMPORT Objects, Gadgets, Display, Display3, Effects, Oberon, Texts, Files, Input, Printer, Printer3, Fonts, Attributes, Strings, Colors;
CONST 
	MaxLen = 256; 
	CarHeight = 14; 
	CarWidth = 2; 
	Yoffset = 2; 
	Xoffset = 5; 
TYPE 
	Caption* = POINTER TO CaptionDesc; 

	CaptionDesc* = RECORD (Gadgets.FrameDesc)
		focused*, underlined*: BOOLEAN; 
		text*: Texts.Text; 
		time: SIGNED32; 
	END; 

	TextField* = POINTER TO TextFieldDesc; 

	TextFieldDesc* = RECORD (Gadgets.FrameDesc)
		selbeg*, selend*: SIGNED16; 
		time*: SIGNED32; 
		carpos*, carx*, cary*: SIGNED16; 
		val*: ARRAY MaxLen OF CHAR; 
		font*: Fonts.Font; 
		textcol*: SIGNED16; 
		consistent*: BOOLEAN; 
		col*: SIGNED16; 
		start: SIGNED16; 
		topC, bottomC: SIGNED16; 
	END; 

	TextFieldUpdateMsg = RECORD (Gadgets.UpdateMsg)
		beg: SIGNED32; 
	END; 

	PassFocusMsg = RECORD (Display.FrameMsg)
		X, Y, foundX, foundY: SIGNED16; 
		from, to: TextField; 
	END; 
VAR 
	W: Texts.Writer; 
	invTF: SIGNED16; 
	linebuf: ARRAY 256 OF SIGNED16; 
	lastfont, lastlib: Fonts.Font; 

	PROCEDURE ^ ForceString(F: Display.Frame; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ Max(x, y: SIGNED16): SIGNED16; 
	PROCEDURE ^ Min(x, y: SIGNED16): SIGNED16; 
	PROCEDURE ^ Lookup(L: Fonts.Font; ch: CHAR; VAR minY, maxY, dx: SIGNED16); 
	PROCEDURE ^ GetFont(T: Texts.Text; VAR font: ARRAY OF CHAR); 
	PROCEDURE ^ IsFont(lib: Objects.Library): BOOLEAN; 
	PROCEDURE ^ ThisFont(name: ARRAY OF CHAR): Fonts.Font; 
	PROCEDURE ^ SplitFontName(fn: ARRAY OF CHAR; VAR i, j, size: SIGNED16); 
	PROCEDURE ^ CombineFontName(prefix, suffix: ARRAY OF CHAR; i, j, size: SIGNED16; VAR fn: ARRAY OF CHAR); 
	PROCEDURE ^ IncFontSize(T: Texts.Text; beg, end: SIGNED32; delta: SIGNED16); 
	PROCEDURE ^ CalcSize*(F: Caption; VAR W, H, nolines: SIGNED16; displayspace: BOOLEAN); 
	PROCEDURE ^ Update(F: Caption); 
	PROCEDURE ^ RestoreCaption(F: Caption; M: Display3.Mask; x, y, w, h: SIGNED16); 
	PROCEDURE ^ CaptionAttributes(F: Caption; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ PrintCaption(F: Caption; VAR M: Display.DisplayMsg); 
	PROCEDURE ^ CopyCaption*(VAR M: Objects.CopyMsg; from, to: Caption); 
	PROCEDURE ^ ResizeCaptionToFit*(VAR caption: Caption; newW, newH: SIGNED16); 
	PROCEDURE ^ ConsumeCh(F: Caption; ch: CHAR; fnt: Objects.Library; col, voff: SIGNED8); 
	PROCEDURE ^ LoadCaption(F: Caption; VAR M: Objects.FileMsg); 
	PROCEDURE ^ CaptionHandler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ InitCaption*(F: Caption; T: Texts.Text); 
	PROCEDURE ^ MakeCaption*; 
	PROCEDURE ^ NewCaption*; 
	PROCEDURE ^ Length(VAR S: ARRAY OF CHAR): SIGNED16; 
	PROCEDURE ^ InsertChar(VAR S: ARRAY OF CHAR; pos: SIGNED16; ch: CHAR); 
	PROCEDURE ^ DeleteChar(VAR S: ARRAY OF CHAR; pos: SIGNED16); 
	PROCEDURE ^ Delete(VAR S: ARRAY OF CHAR; beg, end: SIGNED16); 
	PROCEDURE ^ Pass(F: TextField; dlink: Objects.Object); 
	PROCEDURE ^ passFocusMsg(F: TextField; VAR M: PassFocusMsg); 
	PROCEDURE ^ Inval(F: TextField; VAR hint: SIGNED32); 
	PROCEDURE ^ UpdateTextField(F: TextField; beg: SIGNED32); 
	PROCEDURE ^ ConsumeChar(F: TextField; ch: CHAR; dlink: Objects.Object); 
	PROCEDURE ^ LocateChar(F: TextField; x, mx: SIGNED16; VAR pos: SIGNED16); 
	PROCEDURE ^ LocatePos(F: TextField; pos: SIGNED16; VAR x, y: SIGNED16); 
	PROCEDURE ^ FlipCaret(R: Display3.Mask; F: TextField; x, y: SIGNED16); 
	PROCEDURE ^ SetCaret(R: Display3.Mask; F: TextField; x, y, pos: SIGNED16); 
	PROCEDURE ^ RemoveCaret(R: Display3.Mask; F: TextField; x, y: SIGNED16); 
	PROCEDURE ^ TrackCaret(VAR DR: Display3.Mask; F: TextField; x, y: SIGNED16); 
	PROCEDURE ^ FlipSelection(R: Display3.Mask; F: TextField; x, y: SIGNED16; spos, epos: SIGNED16); 
	PROCEDURE ^ RemoveSelection(R: Display3.Mask; F: TextField; x, y: SIGNED16); 
	PROCEDURE ^ TrackSelection(R: Display3.Mask; F: TextField; x, y: SIGNED16); 
	PROCEDURE ^ GetSelection(F: TextField; VAR text: Texts.Text; VAR beg, end, time: SIGNED32); 
	PROCEDURE ^ TextFieldAttr(F: TextField; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ ConsumeText(F: TextField; VAR M: Oberon.ConsumeMsg); 
	PROCEDURE ^ AdaptFontSizeProportional*(F: TextField); 
	PROCEDURE ^ ComputeColors(F: TextField; col: SIGNED32); 
	PROCEDURE ^ RestoreTextField(R: Display3.Mask; F: TextField; x, y, w, h: SIGNED16; beg: SIGNED32); 
	PROCEDURE ^ PrintTextField(F: TextField; VAR M: Display.DisplayMsg); 
	PROCEDURE ^ Field(F: TextField; VAR name: ARRAY OF CHAR); 
	PROCEDURE ^ SetValue(obj: Objects.Object; field, value: ARRAY OF CHAR; dlink: Objects.Object; VAR res: SIGNED16); 
	PROCEDURE ^ GetValue(obj: Objects.Object; field: ARRAY OF CHAR; VAR value: ARRAY OF CHAR); 
	PROCEDURE ^ CopyTextField*(VAR M: Objects.CopyMsg; from, to: TextField); 
	PROCEDURE ^ Recall(F: TextField; dlink: Objects.Object); 
	PROCEDURE ^ UpdateMsg(F: TextField; VAR M: Gadgets.UpdateMsg); 
	PROCEDURE ^ MakeConsistent(F: TextField; dlink: Objects.Object); 
	PROCEDURE ^ TextFieldHandler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ InitTextField*(F: TextField); 
	PROCEDURE ^ NewTextField*; 
BEGIN
END TextFields.
