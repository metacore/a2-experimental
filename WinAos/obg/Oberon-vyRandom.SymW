MODULE vyRandom IN Oberon;
	IMPORT MathL IN A2, vyRanBase, vyRanParksMiller;
CONST 
	idversion* = \"Random v0.1d4"\; 
VAR 
	twopi: FLOAT64; 

	PROCEDURE ^ Uniform*(): FLOAT64; 
	PROCEDURE ^ UniformV*(count: SIGNED32; VAR x: ARRAY OF FLOAT64; start: SIGNED32); 
	PROCEDURE ^ Exp*(mu: FLOAT64): FLOAT64; 
	PROCEDURE ^ ExpV*(mu: FLOAT64; count: SIGNED32; VAR x: ARRAY OF FLOAT64; start: SIGNED32); 
	PROCEDURE ^ Cauchy*(): FLOAT64; 
	PROCEDURE ^ CauchyV*(count: SIGNED32; VAR x: ARRAY OF FLOAT64; start: SIGNED32); 
	PROCEDURE ^ Gauss*(mu, sigmasq: FLOAT64): FLOAT64; 
	PROCEDURE ^ GaussV*(mu, sigmasq: FLOAT64; count: SIGNED32; VAR x: ARRAY OF FLOAT64; start: SIGNED32); 
	PROCEDURE ^ GaussM*(mu, sigmasq: FLOAT64): FLOAT64; 
	PROCEDURE ^ GaussMV*(mu, sigmasq: FLOAT64; count: SIGNED32; VAR gauss: ARRAY OF FLOAT64; start: SIGNED32); 
	PROCEDURE ^ Weibull*(beta: FLOAT64): FLOAT64; 
	PROCEDURE ^ WeibullV*(beta: FLOAT64; count: SIGNED32; VAR x: ARRAY OF FLOAT64; start: SIGNED32); 
	PROCEDURE ^ Gumbel*(): FLOAT64; 
	PROCEDURE ^ GumbelV*(count: SIGNED32; VAR x: ARRAY OF FLOAT64; start: SIGNED32); 
	PROCEDURE ^ VonMises*(Kappa: FLOAT64): FLOAT64; 
	PROCEDURE ^ VonMisesV*(Kappa: FLOAT64; count: SIGNED32; VAR x: ARRAY OF FLOAT64; start: SIGNED32); 
BEGIN
END vyRandom.
