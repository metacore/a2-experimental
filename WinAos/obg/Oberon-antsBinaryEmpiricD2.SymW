MODULE antsBinaryEmpiricD2 IN Oberon;
	IMPORT vyBase, antsArrayObjects, antsEmpiricD, Objects, aM := antsMessages;
CONST 
	size1 = (256 - 1); 
	size2 = (16 - 1); 
TYPE 
	Index = LONGINT; 

	States = LONGINT; 

	EmpiricalDistribution* = POINTER TO EDDesc; 

	EDDesc = RECORD (antsEmpiricD.EDDesc)
		Mn: ARRAY (size1 + 1) OF LONGINT; 
		Rn: ARRAY (size2 + 1) OF ARRAY (size1 + 1) OF LONGINT; 
	END; 

	tParameter* = POINTER TO tParameterDesc; 

	tParameterDesc* = RECORD (antsEmpiricD.tParameterDesc)
	END; 

	tEDGenerator* = POINTER TO tEDGeneratorDesc; 

	tEDGeneratorDesc = RECORD (vyBase.ObjDesc)
		par: tParameter; 
		gen: PROCEDURE (g: tEDGenerator); 
	END; 
VAR 
	debug: BOOLEAN; 

	PROCEDURE ^ InitED(E: EmpiricalDistribution); 
	PROCEDURE ^ R*(E: EmpiricalDistribution; x, v: Index): States; 
	PROCEDURE ^ M*(E: EmpiricalDistribution; v: Index): States; 
	PROCEDURE ^ F*(E: EmpiricalDistribution; x, v: Index): LONGREAL; 
	PROCEDURE ^ EmpiricalDistribute(VAR E: EmpiricalDistribution; A: antsArrayObjects.tINTEGERArray; Sx, Sy, Sw, Sh: LONGINT); 
	PROCEDURE ^ GenerateED(g: tEDGenerator); 
	PROCEDURE ^ Handler*(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ Open*(gen: tEDGenerator; from: vyBase.Object); 
	PROCEDURE ^ DebugOn*; 
	PROCEDURE ^ DebugOff*; 
BEGIN
END antsBinaryEmpiricD2.
