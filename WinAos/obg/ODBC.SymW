MODULE ODBC;
	IMPORT S := SYSTEM, Kernel32, Modules;
CONST 
	MAXMESSAGELENGTH = 512; 
	NTS =  -3; 
TYPE 
	HENV = POINTER TO HENVDesc; 

	HENVDesc = RECORD 
		henv: Kernel32.HANDLE; 
	END; 

	HDBC* = POINTER TO HDBCDesc; 

	HDBCDesc* = RECORD 
		hdbc: Kernel32.HANDLE; 
	END; 

	HSTMT* = POINTER TO HSTMTDesc; 

	HSTMTDesc* = RECORD 
		hstmt: Kernel32.HANDLE; 
	END; 
VAR 
	lib: ADDRESS; 
	env: HENV; 
	res1*: SIGNED16; 
	nullString-: ARRAY 1 OF CHAR; 
	SQLAllocConnect: PROCEDURE {WINAPI}(henv: Kernel32.HANDLE; hdbc: ADDRESS):SIGNED16; 
	SQLAllocEnv: PROCEDURE {WINAPI}(henv: Kernel32.HANDLE):SIGNED16; 
	SQLAllocStmt: PROCEDURE {WINAPI}(hdbc: ADDRESS; hstmt: Kernel32.HANDLE):SIGNED16; 
	SQLBindCol: PROCEDURE {WINAPI}(hstmt: ADDRESS; icol: SIGNED16; fcType: SIGNED16; rgbValue: ADDRESS; cbValueMax: SIGNED32; pcbValue: ADDRESS):SIGNED16; 
	SQLCancel: PROCEDURE {WINAPI}(hstmt: ADDRESS):SIGNED16; 
	SQLColAttributes: PROCEDURE {WINAPI}(hstmt: ADDRESS; icol: SIGNED16; fDescType: SIGNED16; rgbDesc: ADDRESS; cbDescMax: SIGNED16; pcbDesc: ADDRESS; pfDesc: ADDRESS):SIGNED16; 
	SQLConnect: PROCEDURE {WINAPI}(hdbc: ADDRESS; DSN: ADDRESS; DSNMax: SIGNED16; UID: ADDRESS; UIDMax: SIGNED16; AuthStr: ADDRESS; AuthStrMax: SIGNED16):SIGNED16; 
	SQLDescribeCol: PROCEDURE {WINAPI}(hstmt: ADDRESS; icol: SIGNED16; szColName: ADDRESS; cbColNameMax: SIGNED16; pcbColName: ADDRESS; pfSqlType: ADDRESS; pcbColDef: ADDRESS; pibScale: ADDRESS; pfNullable: ADDRESS):SIGNED16; 
	SQLDisconnect: PROCEDURE {WINAPI}(hdbc: Kernel32.HANDLE):SIGNED16; 
	SQLError: PROCEDURE {WINAPI}(henv: ADDRESS; hdbc: Kernel32.HANDLE; hstmt: Kernel32.HANDLE; szSqlState: ADDRESS; pfNativeError: ADDRESS; szErrorMessage: ADDRESS; cbErrorMessage: SIGNED16; pcbErrorMessage: ADDRESS):SIGNED16; 
	SQLExecDirect: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; szSqlStr: ADDRESS; cbSqlStr: SIGNED16):SIGNED16; 
	SQLExecute: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE):SIGNED16; 
	SQLFetch: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE):SIGNED16; 
	SQLFreeConnect: PROCEDURE {WINAPI}(hdbc: Kernel32.HANDLE):SIGNED16; 
	SQLFreeEnv: PROCEDURE {WINAPI}(henv: ADDRESS):SIGNED16; 
	SQLFreeStmt: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; fOption: SIGNED16):SIGNED16; 
	SQLGetCursorName: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; szCursor: ADDRESS; cbCursorMax: SIGNED16; pcbCursor: ADDRESS):SIGNED16; 
	SQLNumResultCols: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; pccol: ADDRESS):SIGNED16; 
	SQLPrepare: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; szSqlStr: ADDRESS; cbSqlStr: ADDRESS):SIGNED16; 
	SQLRowCount: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; pcrow: ADDRESS):SIGNED16; 
	SQLSetCursorName: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; szCursor: ADDRESS; cbCursor: SIGNED16):SIGNED16; 
	SQLTransact: PROCEDURE {WINAPI}(henv: ADDRESS; hdbc: Kernel32.HANDLE; fType: SIGNED16):SIGNED16; 
	SQLColumns: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; tableQualifier: ADDRESS; qualLen: SIGNED16; tableOwner: ADDRESS; ownerLen: SIGNED16; tableName: ADDRESS; nameLen: SIGNED16; columnName: ADDRESS; colNameLen: SIGNED16):SIGNED16; 
	SQLDriverConnect: PROCEDURE {WINAPI}(hdbc: Kernel32.HANDLE; hwnd: ADDRESS; connStrIn: ADDRESS; connStrInLen: SIGNED16; connStrOut: ADDRESS; connStrOutMaxSize: SIGNED16; connStrOutActSize: ADDRESS; driverCompletion: SIGNED16):SIGNED16; 
	SQLGetConnectOption: PROCEDURE {WINAPI}(hdbc: Kernel32.HANDLE; whatOption: SIGNED16; option: ADDRESS):SIGNED16; 
	SQLGetData: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; col: SIGNED16; resType: SIGNED16; resValue: ADDRESS; resMaxSize: SIGNED32; resActSize: ADDRESS):SIGNED16; 
	SQLGetFunctions: PROCEDURE {WINAPI}(hdbc: Kernel32.HANDLE; whichFunction: SIGNED16; functExists: ADDRESS):SIGNED16; 
	SQLGetInfo: PROCEDURE {WINAPI}(hdbc: Kernel32.HANDLE; infoType: SIGNED16; resInfo: ADDRESS; resInfoMaxSize: SIGNED16; resInfoActSize: ADDRESS):SIGNED16; 
	SQLGetStmtOption: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; whichOption: SIGNED16; option: ADDRESS):SIGNED16; 
	SQLGetTypeInfo: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; whichType: SIGNED16):SIGNED16; 
	SQLParamData: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; dataAdr: ADDRESS):SIGNED16; 
	SQLPutData: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; dataAdr: ADDRESS; dataSize: SIZE):SIGNED16; 
	SQLSetConnectOption: PROCEDURE {WINAPI}(hdbc: Kernel32.HANDLE; whichOption: SIGNED16; option: ADDRESS):SIGNED16; 
	SQLSetStmtOption: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; whichOption: SIGNED16; option: ADDRESS):SIGNED16; 
	SQLSpecialColumns: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; whichColType: SIGNED16; tableQualifier: ADDRESS; tabelQualifierLen: SIGNED16; tableOwner: ADDRESS; tableOwnerLen: SIGNED16; tableName: ADDRESS; tableNameLen: SIGNED16; scope: SIGNED16; nullableCols: SIGNED16):SIGNED16; 
	SQLStatistics: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; tableQualifier: ADDRESS; tableQualifierLen: SIGNED16; tableOwner: ADDRESS; tableOwnerLen: SIGNED16; tableName: ADDRESS; tableNameLen: SIGNED16; indexType: SIGNED16; accuracy: SIGNED16):SIGNED16; 
	SQLTables: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; tableQualifier: ADDRESS; tableQualifierLen: SIGNED16; tableOwner: ADDRESS; tableOwnerLen: SIGNED16; tableName: ADDRESS; tableNameLen: SIGNED16; tableType: ADDRESS; tableTypeLen: SIGNED16):SIGNED16; 
	SQLBrowseConnect: PROCEDURE {WINAPI}(hdbc: ADDRESS; connStrIn: ADDRESS; connStrInLen: SIGNED16; connStrOut: ADDRESS; connStrOutMaxLen: SIGNED16; connStrOutActLen: ADDRESS):SIGNED16; 
	SQLColumnPrivileges: PROCEDURE {WINAPI}(hstmt: ADDRESS; tableQualifier: ADDRESS; tableQualifierLen: SIGNED16; tableOwner: ADDRESS; tableOwnerLen: SIGNED16; tableName: ADDRESS; tableNameLen: SIGNED16; columnName: ADDRESS; columnNameLen: SIGNED16):SIGNED16; 
	SQLDataSources: PROCEDURE {WINAPI}(henv: ADDRESS; direction: SIGNED16; dataSourceName: ADDRESS; dataSourceNameMaxLen: SIGNED16; dataSourceNameActLen: ADDRESS; description: ADDRESS; descriptionMaxLen: SIGNED16; descriptionActLen: ADDRESS):SIGNED16; 
	SQLDescribeParam: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; par: SIGNED16; sqlType: ADDRESS; colPrecision: ADDRESS; colScale: ADDRESS; colNullable: ADDRESS):SIGNED16; 
	SQLExtendedFetch: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; fetchType: SIGNED16; rowToFetch: SIGNED32; numFetchedRows: ADDRESS; rowStatus: ADDRESS):SIGNED16; 
	SQLForeignKeys: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; primKeyTabQualifier: ADDRESS; primKeyTabQualifierLen: SIGNED16; primKeyTabOwner: ADDRESS; primKeyTabOwnerLen: SIGNED16; primKeyTabName: ADDRESS; primKeyTabNameLen: SIGNED16; forKeyTabQualifier: ADDRESS; forKeyTabQualifierLen: SIGNED16; forKeyTabOwner: ADDRESS; forKeyTabOwnerLen: SIGNED16; forKeyTabName: ADDRESS; forKeyTabNameLen: SIGNED16):SIGNED16; 
	SQLMoreResults: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE):SIGNED16; 
	SQLNativeSql: PROCEDURE {WINAPI}(hdbc: Kernel32.HANDLE; sqlStrIn: ADDRESS; sqlStrInLen: SIGNED32; sqlStrOut: ADDRESS; sqlStrOutMaxLen: SIGNED32; sqlStrOutActLen: ADDRESS):SIGNED16; 
	SQLNumParams: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; numParams: ADDRESS):SIGNED16; 
	SQLParamOptions: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; numRows: SIGNED32; curRow: ADDRESS):SIGNED16; 
	SQLPrimaryKeys: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; tableQualifier: ADDRESS; tableQualifierLen: SIGNED16; tableOwner: ADDRESS; tableOwnerLen: SIGNED16; tableName: ADDRESS; tableNameLen: SIGNED16):SIGNED16; 
	SQLProcedureColumns: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; procQualifier: ADDRESS; procQualifierLen: SIGNED16; procOwner: ADDRESS; procOwnerLen: SIGNED16; procName: ADDRESS; procNameLen: SIGNED16; columnName: ADDRESS; columnNameLen: SIGNED16):SIGNED16; 
	SQLProcedures: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; procQualifier: ADDRESS; procQualifierLen: SIGNED16; procOwner: ADDRESS; procOwnerLen: SIGNED16; procName: ADDRESS; procNameLen: SIGNED16):SIGNED16; 
	SQLSetPos: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; row: SIGNED16; op: SIGNED16; lock: SIGNED16):SIGNED16; 
	SQLTablePrivileges: PROCEDURE {WINAPI}(hstmt: Kernel32.HANDLE; tableQualifier: ADDRESS; tableQualifierLen: SIGNED16; tableOwner: ADDRESS; tableOwnerLen: SIGNED16; tableName: ADDRESS; tableNameLen: SIGNED16):SIGNED16; 
	SQLDrivers: PROCEDURE {WINAPI}(henv: ADDRESS; direction: SIGNED16; driverDesc: ADDRESS; driverDescMaxLen: SIGNED16; driverDescActLen: ADDRESS; driverAttributes: ADDRESS; driverAttributesMaxLen: SIGNED16; driverAttributesActLen: ADDRESS):SIGNED16; 
	SQLBindParameter: PROCEDURE {WINAPI}(hstmt: ADDRESS; parNum: SIGNED16; paramType: SIGNED16; cType: SIGNED16; sqlType: SIGNED16; colPrec: SIGNED32; colScale: SIGNED16; inOutBuff: ADDRESS; inOutBuffMaxLen: SIGNED32; inOutBuffActLen: ADDRESS):SIGNED16; 
	SQLFetchScroll: PROCEDURE {WINAPI}(hstmt: ADDRESS; fetchorientation: SIGNED16; fetchoffset: SIGNED32):SIGNED16; 
	SQLSetStmtAttr: PROCEDURE {WINAPI}(hstmt: ADDRESS; attribute: SIGNED32; value: SIGNED32; stringlength: SIGNED32):SIGNED16; 
	SQLSetConnectAttr: PROCEDURE {WINAPI}(hdbc: ADDRESS; attribute: SIGNED32; valuePtr: SIGNED32; stringLength: SIGNED32):SIGNED16; 

	PROCEDURE ^ AllocConnect*(hdbc: HDBC; VAR res: SIGNED16); 
	PROCEDURE ^ AllocEnv(henv: HENV; VAR res: SIGNED16); 
	PROCEDURE ^ AllocStmt*(hdbc: HDBC; hstmt: HSTMT; VAR res: SIGNED16); 
	PROCEDURE ^ BindCol*(hstmt: HSTMT; col, retType: SIGNED16; VAR buf: ARRAY OF S.BYTE; VAR resSize: SIGNED32; VAR res: SIGNED16); 
	PROCEDURE ^ Cancel*(hstmt: HSTMT; VAR res: SIGNED16); 
	PROCEDURE ^ ColAttributes*(hstmt: HSTMT; col, fDescType: SIGNED16; VAR rgbDesc: ARRAY OF CHAR; VAR pfDesc: ADDRESS; VAR res: SIGNED16); 
	PROCEDURE ^ Connect*(hdbc: HDBC; DSN, UID, PW: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ DescribeCol*(hstmt: HSTMT; icol: SIGNED16; VAR ColName: ARRAY OF CHAR; VAR SqlType: SIGNED16; VAR ColDef: SIGNED32; VAR Scale: SIGNED16; VAR Nullable: BOOLEAN; VAR res: SIGNED16); 
	PROCEDURE ^ Disconnect*(hdbc: HDBC; VAR res: SIGNED16); 
	PROCEDURE ^ StatementError*(hstmt: HSTMT; VAR SqlState: ARRAY OF CHAR; VAR NativeError: SIGNED32; VAR ErrorMsg: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ ConnectionError*(hdbc: HDBC; VAR SqlState: ARRAY OF CHAR; VAR NativeError: SIGNED32; ErrorMsg: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ ExecDirect*(hstmt: HSTMT; SqlStr: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ Execute*(hstmt: HSTMT; VAR res: SIGNED16); 
	PROCEDURE ^ Fetch*(hstmt: HSTMT; VAR res: SIGNED16); 
	PROCEDURE ^ FreeConnect*(hdbc: HDBC; VAR res: SIGNED16); 
	PROCEDURE ^ FreeEnv(henv: HENV; VAR res: SIGNED16); 
	PROCEDURE ^ FreeStmt*(hstmt: HSTMT; opt: SIGNED16; VAR res: SIGNED16); 
	PROCEDURE ^ GetCursorName*(hstmt: HSTMT; VAR Cursor: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ NumResultCols*(hstmt: HSTMT; VAR cols: SIGNED16; VAR res: SIGNED16); 
	PROCEDURE ^ Prepare*(hstmt: HSTMT; SqlStr: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ RowCount*(hstmt: HSTMT; VAR rows: SIGNED32; VAR res: SIGNED16); 
	PROCEDURE ^ SetCursorName*(hstmt: HSTMT; Cursor: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ Commit*(hdbc: HDBC; VAR res: SIGNED16); 
	PROCEDURE ^ Rollback*(hdbc: HDBC; VAR res: SIGNED16); 
	PROCEDURE ^ Columns*(hstmt: HSTMT; tabQualifier, tabOwner, tabName, colName: ARRAY OF CHAR; VAR res: SIGNED16): SIGNED16; 
	PROCEDURE ^ DriverConnect*(hdbc: HDBC; VAR connStrIn, connStrOut: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ GetConnectOption*(hdbc: HDBC; whichOption: SIGNED16; VAR optValue: ARRAY OF S.BYTE; VAR res: SIGNED16); 
	PROCEDURE ^ GetData*(hstmt: HSTMT; col, resType: SIGNED16; VAR resValue: ARRAY OF S.BYTE; VAR resSize: SIGNED32; VAR res: SIGNED16); 
	PROCEDURE ^ GetFunctions*(hdbc: HDBC; whichFunct: SIGNED16; VAR exists: BOOLEAN; VAR res: SIGNED16); 
	PROCEDURE ^ GetInfo*(hdbc: HDBC; infoType: SIGNED16; VAR info: ARRAY OF S.BYTE; VAR res: SIGNED16); 
	PROCEDURE ^ GetStmtOption*(hstmt: HSTMT; whichOption: SIGNED16; VAR optValue: ARRAY OF S.BYTE; VAR res: SIGNED16); 
	PROCEDURE ^ GetTypeInfo*(hstmt: HSTMT; whichSQLType: SIGNED16; VAR res: SIGNED16); 
	PROCEDURE ^ ParamData*(hstmt: HSTMT; VAR data: ARRAY OF S.BYTE; VAR res: SIGNED16); 
	PROCEDURE ^ PutData*(hstmt: HSTMT; VAR data: ARRAY OF S.BYTE; len: SIZE; VAR res: SIGNED16); 
	PROCEDURE ^ SetConnectOption*(hdbc: HDBC; whichOpt: SIGNED16; VAR option: ARRAY OF S.BYTE; VAR res: SIGNED16); 
	PROCEDURE ^ SetStmtOption*(hstmt: HSTMT; whichOpt: SIGNED16; VAR option: ARRAY OF S.BYTE; VAR res: SIGNED16); 
	PROCEDURE ^ SpecialColumns*(hstmt: HSTMT; colType: SIGNED16; tabQualifier, tabOwner, tabName: ARRAY OF CHAR; scope: SIGNED16; nullables: BOOLEAN; VAR res: SIGNED16); 
	PROCEDURE ^ Statistics*(hstmt: HSTMT; tabQualifier, tabOwner, tabName: ARRAY OF CHAR; uniqueIndexes, accurate: BOOLEAN; VAR res: SIGNED16); 
	PROCEDURE ^ Tables*(hstmt: HSTMT; tabQualifier, tabOwner, tabName, tabType: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ BrowseConnect*(hdbc: HDBC; connStrIn: ARRAY OF CHAR; VAR connStrOut: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ ColumnPrivileges*(hstmt: HSTMT; tabQualifier, tabOwner, tabName, colName: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ DataSources*(direction: SIGNED16; VAR dataSourceName, dataSourceDesc: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ DescribeParam*(hstmt: HSTMT; par: SIGNED16; VAR sqlType: SIGNED16; VAR prec: SIGNED32; VAR scale, nullable: SIGNED16; VAR res: SIGNED16); 
	PROCEDURE ^ ExtendedFetch*(hstmt: HSTMT; fetchType: SIGNED16; rowToFetch: SIGNED32; VAR numFetchedRows: SIGNED32; VAR rowStatus: SIGNED16; VAR res: SIGNED16); 
	PROCEDURE ^ SetStmtAttr*(hstmt: HSTMT; attribute: SIGNED32; valuePtr: SIGNED32; stringLength: SIGNED32; VAR res: SIGNED16); 
	PROCEDURE ^ ForeignKeys*(hstmt: HSTMT; primKeyTabQualifier, primKeyTabOwner, primKeyTabName, forKeyTabQualifier, forKeyTabOwner, forKeyTabName: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ MoreResults*(hstmt: HSTMT): BOOLEAN; 
	PROCEDURE ^ NativeSql*(hdbc: HDBC; origSql: ARRAY OF CHAR; VAR nativeSql: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ NumParams*(hstmt: HSTMT; VAR res: SIGNED16): SIGNED16; 
	PROCEDURE ^ ParamOptions*(hstmt: HSTMT; numRows: SIGNED32; VAR curRow: SIGNED32; VAR res: SIGNED16); 
	PROCEDURE ^ PrimaryKeys*(hstmt: HSTMT; tabQualifier, tabOwner, tabName: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ ProcedureColumns*(hstmt: HSTMT; procQualifier, procOwner, procName, colName: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ Procedures*(hstmt: HSTMT; procQualifier, procOwner, procName: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ SetPos*(hstmt: HSTMT; row, op, lock: SIGNED16; VAR res: SIGNED16); 
	PROCEDURE ^ TablePrivileges*(hstmt: HSTMT; tabQualifier, tabOwner, tabName: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ Drivers*(dir: SIGNED16; VAR driverDesc, driverAttr: ARRAY OF CHAR; VAR res: SIGNED16); 
	PROCEDURE ^ BindParameter*(hstmt: HSTMT; par, parType, cType, sqlType: SIGNED16; prec: SIGNED32; scale: SIGNED16; VAR parBuff: ARRAY OF S.BYTE; VAR parBuffActLen: SIGNED32; VAR res: SIGNED16); 
	PROCEDURE ^ FetchScroll*(hstmt: HSTMT; fetchOrientation: SIGNED16; fetchOffset: SIGNED32; VAR res: SIGNED16); 
	PROCEDURE ^ SetConnectAttr*(hdbc: HDBC; attribute: SIGNED32; valuePtr: SIGNED32; stringLength: SIGNED32; VAR res: SIGNED16); 
	PROCEDURE ^ Init; 
	PROCEDURE ^ Term; 
BEGIN
END ODBC.
