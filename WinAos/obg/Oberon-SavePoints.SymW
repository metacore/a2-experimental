MODULE SavePoints IN Oberon;
	IMPORT Out, In, Modules, SaveScreen, Display, Display3, M := Math IN A2, RandomNumbers, Files, Texts, Oberon, Input;
CONST 
	versionString = \"SavePoints 1.3.2000 / jaco"\; 
	Tag = 2475; 
	Version = 3; 
	Dist =   1.0000000E+001; 
	ScaleX =   8.0000001E-001; 
	ScaleY =   8.9999998E-001; 
	MinVar =  -(3 * M.pi); 
	MaxVar = (3 * M.pi); 
	MinPeak = ((  1.5000000E+000 * M.pi) /   1.8000000E+002); 
	MaxPeak = ((  3.5000000E+000 * M.pi) /   1.8000000E+002); 
	MinDelta = ((  2.0000000E-002 * M.pi) /   1.8000000E+002); 
	Filename = \"SavePoints.Data"\; 
	Time = FALSE; 
	minThick = 1; 
	maxThick = 5; 
	defThick = 3; 
	minDura = 2; 
	maxDura = 60; 
	defDura = 20; 
	minMorph = 10; 
	maxMorph = 90; 
	defMorph = 80; 
	minFrames = 1; 
	maxFrames = 30; 
	defFrames = 20; 
	nomorph = 0; 
TYPE 
	IntPoint = RECORD 
		x, y, z: SIGNED16; 
	END; 

	Point = RECORD 
		x, y, z: FLOAT32; 
	END; 

	Figure = POINTER TO ARRAY OF Point; 

	Control = ARRAY 3 OF Point; 

	Rotor = RECORD 
		from, to, curr, peak: FLOAT32; 
	END; 

	Colour = RECORD 
		r, g, b: SIGNED16; 
	END; 
VAR 
	numfig: SIGNED16; 
	numpoint: SIGNED16; 
	figure: POINTER TO ARRAY OF ARRAY OF IntPoint; 
	move: POINTER TO ARRAY OF ARRAY OF SIGNED16; 
	timefactor: POINTER TO ARRAY OF FLOAT32; 
	attributes: POINTER TO ARRAY OF SET; 
	maxint, minint, max, min, factor: FLOAT32; 
	curfig: SIGNED16; 
	actv, curr, next: Figure; 
	control: Control; 
	rx, ry, rz: Rotor; 
	morphoff: BOOLEAN; 
	timefac: FLOAT32; 
	time: FLOAT32; 
	step: FLOAT32; 
	coltime: SIGNED16; 
	curcol: SIGNED16; 
	thick: SIGNED16; 
	dura: SIGNED16; 
	morph: SIGNED16; 
	frames: SIGNED16; 
	W, H: SIGNED16; 
	mypal, yourpal: ARRAY 256 OF Colour; 
	avoid: ARRAY 8 OF SET; 
	numcol: SIGNED16; 
	BG: SIGNED16; 
	mask: Display3.Mask; 
	w: Texts.Writer; 

	PROCEDURE ^ Int2Fig(i: SIGNED16; VAR f: Figure); 
	PROCEDURE ^ ReadData; 
	PROCEDURE ^ InitRotor(VAR r: Rotor; f, t, p: FLOAT32); 
	PROCEDURE ^ GetPal(VAR pal: ARRAY OF Colour); 
	PROCEDURE ^ SetPal(VAR pal: ARRAY OF Colour); 
	PROCEDURE ^ ClearAvoid; 
	PROCEDURE ^ HSV2RGB(H, S, V: FLOAT32; VAR R, G, B: SIGNED16); 
	PROCEDURE ^ InitColour; 
	PROCEDURE ^ InitVars; 
	PROCEDURE ^ Rotate(c, s: FLOAT32; VAR x, y: FLOAT32); 
	PROCEDURE ^ Draw(VAR p: Point; c: SIGNED16); 
	PROCEDURE ^ Position(VAR F: Figure); 
	PROCEDURE ^ Start; 
	PROCEDURE ^ UpdateRotor(VAR r: Rotor; VAR a: FLOAT32); 
	PROCEDURE ^ Step; 
	PROCEDURE ^ Stop; 
	PROCEDURE ^ Install*; 
	PROCEDURE ^ Remove; 
	PROCEDURE ^ Configuration*; 
	PROCEDURE ^ InstallDefault*; 
BEGIN
END SavePoints.
