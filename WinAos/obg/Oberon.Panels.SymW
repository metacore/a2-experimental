MODULE Panels IN Oberon;
	IMPORT Objects, Display, Display3, Fonts, Gadgets, Effects, Oberon, Texts, Input, Files, Printer, Printer3, Attributes, Pictures, Modules;
CONST 
	DefBorderWidth* = 2; 
	noselect* = 0; 
	noinsert* = 1; 
	frozen* = 3; 
	flatlook* = 4; 
	texture* = 5; 
	outofboundsmodify = 3; 
	markW = 5; 
TYPE 
	Panel* = POINTER TO PanelDesc; 

	Methods* = POINTER TO MethodsDesc; 

	PanelDesc* = RECORD (Gadgets.FrameDesc)
		focused*: BOOLEAN; 
		focusx*, focusy*: INTEGER; 
		time*: LONGINT; 
		back*: Display3.Mask; 
		rx*, ry*, rr*, rt*: INTEGER; 
		borderW*: INTEGER; 
		do*: Methods; 
		state0*: SET; 
		grid*: INTEGER; 
		col*: INTEGER; 
		pict*: Pictures.Picture; 
	END; 

	MethodsDesc* = RECORD 
		RestoreBackGround*: PROCEDURE (F: Panel; x, y: INTEGER; R: Display3.Mask); 
		RestoreCaret*: PROCEDURE (F: Panel; x, y: INTEGER; R: Display3.Mask); 
		RestoreArea*: PROCEDURE (F: Panel; x, y, u, v, w, h: INTEGER; R: Display3.Mask; dlink: Objects.Object); 
		UpdateCaret*: PROCEDURE (F: Panel); 
		TrackCaret*: PROCEDURE (F: Panel; VAR M: Oberon.InputMsg); 
		TrackSelection*: PROCEDURE (F: Panel; VAR M: Oberon.InputMsg); 
		TrackSelectChild*: PROCEDURE (F: Panel; VAR M: Oberon.InputMsg; child: Gadgets.Frame); 
		DragSelection*: PROCEDURE (F: Panel; VAR M: Oberon.InputMsg); 
		TrackMouse*: PROCEDURE (F: Panel; VAR M: Oberon.InputMsg); 
		ConsumeChar*: PROCEDURE (F: Panel; VAR M: Oberon.InputMsg); 
		TranslateToGadget*: PROCEDURE (F: Panel; VAR obj: Objects.Object); 
		AcceptChild*: PROCEDURE (F: Panel; VAR obj: Objects.Object):BOOLEAN; 
		InsertChild*: PROCEDURE (F: Panel; f: Display.Frame; u, v: INTEGER); 
		InsertFrames*: PROCEDURE (F: Panel; u, v: INTEGER; list: Objects.Object); 
		RemoveChild*: PROCEDURE (F: Panel; f: Display.Frame); 
		RemoveFrames*: PROCEDURE (F: Panel; list: Display.Frame); 
	END; 
VAR 
	methods*: Methods; 
	defaultgrid*: INTEGER; 
	newfocusX*, newfocusY*: INTEGER; 
	recall*: Objects.Object; 
	W: Texts.Writer; 
	sx, sy, sw, sh: INTEGER; 
	tmpR: Display3.Mask; 
	tmpP: Panel; 
	px, py: INTEGER; 
	tmpdlink: Objects.Object; 
	tmpM: Display3.Mask; 

	PROCEDURE ^ Min(x, y: INTEGER): INTEGER; 
	PROCEDURE ^ Max(x, y: INTEGER): INTEGER; 
	PROCEDURE ^ ClipAgainst(VAR x, y, w, h: INTEGER; x1, y1, w1, h1: INTEGER); 
	PROCEDURE ^ BoundingBox*(list: Display.Frame; VAR x, y, w, h, count: INTEGER); 
	PROCEDURE ^ IsChild*(F: Display.Frame; f: Display.Frame): BOOLEAN; 
	PROCEDURE ^ ToChild*(F: Panel; f: Display.Frame; x, y: INTEGER; VAR M: Display.FrameMsg); 
	PROCEDURE ^ ToChildren*(F: Panel; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ ThisChild*(F: Panel; x, y, X, Y: INTEGER): Display.Frame; 
	PROCEDURE ^ GetPanelSelection*(F: Panel; VAR list: Display.Frame); 
	PROCEDURE ^ StorePanel*(F: Panel; VAR M: Objects.FileMsg); 
	PROCEDURE ^ Explain; 
	PROCEDURE ^ LoadPanel*(F: Panel; VAR M: Objects.FileMsg); 
	PROCEDURE ^ CopyPanel*(VAR M: Objects.CopyMsg; from, to: Panel); 
	PROCEDURE ^ PanelAttr(F: Panel; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ Adjust(F: Panel; x, y: INTEGER; VAR M: Display.ModifyMsg); 
	PROCEDURE ^ FindObj(F: Panel; VAR M: Objects.FindMsg); 
	PROCEDURE ^ RestoreArea*(F: Panel; x, y, u, v, w, h: INTEGER; M: Display3.Mask; dlink: Objects.Object); 
	PROCEDURE ^ ResetHull*(F: Panel); 
	PROCEDURE ^ GetHull*(F: Panel; VAR u, v, w, h: INTEGER); 
	PROCEDURE ^ GrowHull*(F: Panel; u, v, w, h: INTEGER); 
	PROCEDURE ^ DrawHull*(F: Panel); 
	PROCEDURE ^ UpdateMasks*(F: Panel; partialupdate, buildback: BOOLEAN); 
	PROCEDURE ^ Out0(x, y, w, h: INTEGER); 
	PROCEDURE ^ InvalidateMasks*(F: Panel; except: Display.Frame; x, y, w, h: INTEGER); 
	PROCEDURE ^ SetChildren*(F: Panel; x, y, state: INTEGER); 
	PROCEDURE ^ TrackMouse*(F: Panel; VAR M: Oberon.InputMsg); 
	PROCEDURE ^ Locate*(F: Display.Frame; VAR M: Display.LocateMsg); 
	PROCEDURE ^ RestoreAboveArea(F: Panel; above: Display.Frame; x, y, u, v, w, h: INTEGER; dlink: Objects.Object; M: Display3.Mask); 
	PROCEDURE ^ RestoreRegion0(x, y, w, h: INTEGER); 
	PROCEDURE ^ RestoreRegion*(F: Panel; x, y: INTEGER; dlink: Objects.Object; M: Display3.Mask); 
	PROCEDURE ^ HandleChildAdjust(F: Panel; VAR M: Display.ModifyMsg); 
	PROCEDURE ^ GetSelection*(VAR obj: Objects.Object; VAR parent: Display.Frame; VAR time: LONGINT); 
	PROCEDURE ^ PrintPanel(F: Panel; x, y: INTEGER; dlink: Objects.Object); 
	PROCEDURE ^ PromoteChild*(F: Display.Frame; f: Display.Frame); 
	PROCEDURE ^ RemoveChild*(F: Panel; f: Display.Frame); 
	PROCEDURE ^ DemoteChild*(F: Panel; f: Display.Frame); 
	PROCEDURE ^ Priority(F: Panel; f: Display.Frame; where: INTEGER; passon: BOOLEAN); 
	PROCEDURE ^ CopyOver(F: Panel; text: Texts.Text; beg, end: LONGINT); 
	PROCEDURE ^ PanelHandler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ InitPanel*(P: Panel); 
	PROCEDURE ^ NewPanel*; 
	PROCEDURE ^ NewPictPanel*; 
	PROCEDURE ^ ToFront*; 
	PROCEDURE ^ ToBack*; 
	PROCEDURE ^ ChangeBackdrop*; 
	PROCEDURE ^ Align0(type: ARRAY OF CHAR); 
	PROCEDURE ^ Align*; 
	PROCEDURE ^ NewChildrenOK*(F: Panel; VAR list: Objects.Object): BOOLEAN; 
	PROCEDURE ^ CopyObjList*(id: INTEGER; from: Objects.Object; VAR to: Objects.Object); 
	PROCEDURE ^ Recall*; 
	PROCEDURE ^ RestoreBackGround*(F: Panel; x, y: INTEGER; R: Display3.Mask); 
	PROCEDURE ^ RestoreCaret*(F: Panel; x, y: INTEGER; R: Display3.Mask); 
	PROCEDURE ^ UpdateCaret*(F: Panel); 
	PROCEDURE ^ TrackCaret*(F: Panel; VAR M: Oberon.InputMsg); 
	PROCEDURE ^ SelectArea*(F: Panel; x, y, u, v, w, h: INTEGER); 
	PROCEDURE ^ SelectHandler(mx, my, x, y, w, h: INTEGER; keysum: SET); 
	PROCEDURE ^ KillChildren*(F: Panel; objlist: Objects.Object); 
	PROCEDURE ^ TrackSelection*(F: Panel; VAR M: Oberon.InputMsg); 
	PROCEDURE ^ TrackSelectChild*(F: Panel; VAR M: Oberon.InputMsg; child: Gadgets.Frame); 
	PROCEDURE ^ TranslateToGadget*(F: Panel; VAR obj: Objects.Object); 
	PROCEDURE ^ AcceptChild*(F: Panel; VAR obj: Objects.Object): BOOLEAN; 
	PROCEDURE ^ InsertChild*(F: Panel; f: Display.Frame; u, v: INTEGER); 
	PROCEDURE ^ InsertFrames*(F: Panel; u, v: INTEGER; list: Objects.Object); 
	PROCEDURE ^ RemoveFrames*(F: Panel; list: Display.Frame); 
	PROCEDURE ^ NewLocateMsg(F: Display.Frame; u, v: INTEGER; VAR M: Display.LocateMsg); 
	PROCEDURE ^ NewHandler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ TranslateChildren*(F: Panel; list: Display.Frame; count, dx, dy: INTEGER); 
	PROCEDURE ^ DragSelection*(F: Panel; VAR M: Oberon.InputMsg); 
	PROCEDURE ^ ConsumeChar*(F: Panel; VAR M: Oberon.InputMsg); 
BEGIN
END Panels.
