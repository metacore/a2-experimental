MODULE RXA IN Oberon;
	IMPORT Texts;
CONST 
	tab = 9; 
	cr = 13; 
	blank = 32; 
	dq = 34; 
	shorthand =  -1; 
	metasymbol =  -2; 
	literal =  -3; 
	msalternation =  -4; 
	msopenpar =  -5; 
	msclosepar =  -6; 
	msopenquo =  -7; 
	msclosequo =  -8; 
	mssubexpr =  -9; 
	mult = 4; 
	nofSET = (MAX(SET) + 1); 
	nofpos = (mult * nofSET); 
	nofstates = 128; 
	nofchar = 134; 
	nofsubexpr = 10; 
	undefined =  -1; 
	inoffset = 10; 
	endoffset = 20; 
	spezchar = 134; 
	noerror* = 0; 
	noposfree* =  -1; 
	nostatesfree* =  -2; 
	nometaexp* =  -3; 
	chrleft* =  -4; 
	wsubexpr* =  -5; 
	subexprrest* =  -6; 
	wshorthand* =  -7; 
	notnotexp* =  -8; 
	nodfa* =  -9; 
	repllinefull* =  -10; 
	linecopofl* =  -11; 
TYPE 
	PosSet = ARRAY mult OF SET; 

	NodePtr = POINTER TO Node; 

	Node = RECORD 
		pos: SIGNED16; 
		ch: CHAR; 
		nullable: BOOLEAN; 
		first, last: PosSet; 
		nextl, nextr: NodePtr; 
	END; 

	PosDesc = RECORD 
		ch: CHAR; 
		shorthand, notoperator: BOOLEAN; 
		follow: PosSet; 
	END; 

	PosArray = ARRAY nofpos OF PosDesc; 

	SubExprDesc = RECORD 
		nodeptr: NodePtr; 
		spos, epos: SIGNED16; 
		follow: PosSet; 
	END; 

	DFASubExprDesc = RECORD 
		set: BOOLEAN; 
		beg, end: SIGNED16; 
	END; 

	TransDesc = RECORD 
		state: SIGNED16; 
		subset: SET; 
	END; 

	DFA* = POINTER TO DFADesc; 

	DFADesc = RECORD 
		nofst: SIGNED16; 
		subdetect: BOOLEAN; 
		trans: ARRAY nofstates OF ARRAY (nofchar + 1) OF TransDesc; 
		accepted: ARRAY nofstates OF BOOLEAN; 
		sub: ARRAY nofsubexpr OF DFASubExprDesc; 
	END; 

	Line = ARRAY MAX(SIGNED16) OF CHAR; 
VAR 
	rxl: Line; 
	rxpos, tokenval, treepos, errorvar, countflag: SIGNED16; 
	lookahead: CHAR; 
	pd: POINTER TO PosArray; 
	subexpr: ARRAY nofsubexpr OF SubExprDesc; 
	subdetect, notflag, inkleene, inquotes, first: BOOLEAN; 

	PROCEDURE ^ PSEmpty(VAR set: PosSet); 
	PROCEDURE ^ PSIsEmpty(set: PosSet): BOOLEAN; 
	PROCEDURE ^ PSIsEqual(set1, set2: PosSet): BOOLEAN; 
	PROCEDURE ^ PSIn(set: PosSet; v: SIGNED16): BOOLEAN; 
	PROCEDURE ^ PSIncl(VAR set: PosSet; v: SIGNED16); 
	PROCEDURE ^ PSUnion(set1, set2: PosSet; VAR resset: PosSet); 
	PROCEDURE ^ GetChar(): CHAR; 
	PROCEDURE ^ SetPosition(ptr: NodePtr; chr: CHAR); 
	PROCEDURE ^ NewNode(VAR ptr: NodePtr); 
	PROCEDURE ^ LexAn(): CHAR; 
	PROCEDURE ^ Match(ch: CHAR); 
	PROCEDURE ^ InitSubExpr(ptr: NodePtr; spos: SIGNED16; kleenef: BOOLEAN); 
	PROCEDURE ^ RegExpr(VAR ptr: NodePtr); 
	PROCEDURE ^ Term(VAR ptr: NodePtr); 
	PROCEDURE ^ Factor(VAR ptr: NodePtr); 
	PROCEDURE ^ CalcFiLa(ptr: NodePtr); 
	PROCEDURE ^ CalcFollow(ptr: NodePtr); 
	PROCEDURE ^ CalcFollowSubExpr; 
	PROCEDURE ^ SetState(dfa: DFA; set: PosSet; VAR ind: SIGNED16; VAR ps: ARRAY OF PosSet); 
	PROCEDURE ^ ChrIn(sid: CHAR; ch: SIGNED16; short: BOOLEAN): BOOLEAN; 
	PROCEDURE ^ CalcStates(dfa: DFA; anchor: NodePtr); 
	PROCEDURE ^ Dump*(dfa: DFA; VAR w: Texts.Writer); 
	PROCEDURE ^ New*(rx: ARRAY OF CHAR; VAR dfa: DFA; VAR error, pos: SIGNED16); 
	PROCEDURE ^ Search*(dfa: DFA; line: ARRAY OF CHAR; VAR beg, end: SIGNED16); 
	PROCEDURE ^ Replace*(dfa: DFA; VAR line: ARRAY OF CHAR; replpat: ARRAY OF CHAR; beg, end: SIGNED16; VAR error, pos: SIGNED16); 
BEGIN
END RXA.
