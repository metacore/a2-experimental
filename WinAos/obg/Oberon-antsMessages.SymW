MODULE antsMessages IN Oberon;
	IMPORT Texts, EditTools, Strings, Display3, Oberon, Objects, Gadgets, Links, TextGadgets, TextGadgets0, antsPortability, Modules, vyHostTexts, vyTextsCtl, Attributes, Documents, antsOrganizers;
CONST 
	quietMode* =  -2; 
	errorMode* =  -1; 
	normalMode* = 0; 
	verboseMode* = 1; 
	debugMode* = 2; 
	sep = \" "\; 
	MaxPatLen = 256; 
TYPE 
	writeProc = PROCEDURE (buf: Texts.Buffer); 
VAR 
	mode*: SIGNED16; 
	debug*: BOOLEAN; 
	write: writeProc; 
	w: Texts.Writer; 
	sPatLen: SIGNED32; 
	lTime: SIGNED32; 
	sPat: ARRAY 256 OF CHAR; 
	sDv: ARRAY (256 + 1) OF SIGNED16; 

	PROCEDURE ^ Init(m: SIGNED16): BOOLEAN; 
	PROCEDURE ^ writeCaret(buf: Texts.Buffer); 
	PROCEDURE ^ writeLog(buf: Texts.Buffer); 
	PROCEDURE ^ wS*(mode: SIGNED16; s: ARRAY OF CHAR); 
	PROCEDURE ^ wSB(mode: SIGNED16; s: ARRAY OF CHAR; bool: BOOLEAN); 
	PROCEDURE ^ wSS*(mode: SIGNED16; s1, s2: ARRAY OF CHAR); 
	PROCEDURE ^ wSSS*(mode: SIGNED16; s1, s2, s3: ARRAY OF CHAR); 
	PROCEDURE ^ wSSSS*(mode: SIGNED16; s1, s2, s3, s4: ARRAY OF CHAR); 
	PROCEDURE ^ wSI*(mode: SIGNED16; s1: ARRAY OF CHAR; i: SIGNED32); 
	PROCEDURE ^ wSR*(mode: SIGNED16; s: ARRAY OF CHAR; r: FLOAT64); 
	PROCEDURE ^ wSISI*(mode: SIGNED16; s1: ARRAY OF CHAR; i1: SIGNED32; s2: ARRAY OF CHAR; i2: SIGNED32); 
	PROCEDURE ^ wSRSR*(mode: SIGNED16; s1: ARRAY OF CHAR; r1: FLOAT64; s2: ARRAY OF CHAR; r2: FLOAT64); 
	PROCEDURE ^ Ln*; 
	PROCEDURE ^ Sc*(write: BOOLEAN; s: ARRAY OF CHAR); 
	PROCEDURE ^ S*(s: ARRAY OF CHAR); 
	PROCEDURE ^ SB*(s: ARRAY OF CHAR; bool: BOOLEAN); 
	PROCEDURE ^ SS*(s1, s2: ARRAY OF CHAR); 
	PROCEDURE ^ SSS*(s1, s2, s3: ARRAY OF CHAR); 
	PROCEDURE ^ SSSS*(s1, s2, s3, s4: ARRAY OF CHAR); 
	PROCEDURE ^ SI*(s1: ARRAY OF CHAR; i: SIGNED32); 
	PROCEDURE ^ SR*(s1: ARRAY OF CHAR; R: FLOAT64); 
	PROCEDURE ^ SISI*(s1: ARRAY OF CHAR; i1: SIGNED32; s2: ARRAY OF CHAR; i2: SIGNED32); 
	PROCEDURE ^ SRSR*(s1: ARRAY OF CHAR; r1: FLOAT64; s2: ARRAY OF CHAR; r2: FLOAT64); 
	PROCEDURE ^ eSc*(write: BOOLEAN; s: ARRAY OF CHAR); 
	PROCEDURE ^ eS*(s: ARRAY OF CHAR); 
	PROCEDURE ^ eSB*(s: ARRAY OF CHAR; bool: BOOLEAN); 
	PROCEDURE ^ eSS*(s1, s2: ARRAY OF CHAR); 
	PROCEDURE ^ eSSS*(s1, s2, s3: ARRAY OF CHAR); 
	PROCEDURE ^ eSSSS*(s1, s2, s3, s4: ARRAY OF CHAR); 
	PROCEDURE ^ eSI*(s1: ARRAY OF CHAR; i: SIGNED32); 
	PROCEDURE ^ eSR*(s1: ARRAY OF CHAR; R: FLOAT64); 
	PROCEDURE ^ eSISI*(s1: ARRAY OF CHAR; i1: SIGNED32; s2: ARRAY OF CHAR; i2: SIGNED32); 
	PROCEDURE ^ eSRSR*(s1: ARRAY OF CHAR; r1: FLOAT64; s2: ARRAY OF CHAR; r2: FLOAT64); 
	PROCEDURE ^ vS*(s: ARRAY OF CHAR); 
	PROCEDURE ^ vSB*(s: ARRAY OF CHAR; bool: BOOLEAN); 
	PROCEDURE ^ vSc*(write: BOOLEAN; s: ARRAY OF CHAR); 
	PROCEDURE ^ vSS*(s1, s2: ARRAY OF CHAR); 
	PROCEDURE ^ vSSS*(s1, s2, s3: ARRAY OF CHAR); 
	PROCEDURE ^ vSSSS*(s1, s2, s3, s4: ARRAY OF CHAR); 
	PROCEDURE ^ vSI*(s1: ARRAY OF CHAR; i: SIGNED32); 
	PROCEDURE ^ vSR*(s1: ARRAY OF CHAR; R: FLOAT64); 
	PROCEDURE ^ vSISI*(s1: ARRAY OF CHAR; i1: SIGNED32; s2: ARRAY OF CHAR; i2: SIGNED32); 
	PROCEDURE ^ vSRSR*(s1: ARRAY OF CHAR; r1: FLOAT64; s2: ARRAY OF CHAR; r2: FLOAT64); 
	PROCEDURE ^ dSc*(write: BOOLEAN; s: ARRAY OF CHAR); 
	PROCEDURE ^ dS*(s: ARRAY OF CHAR); 
	PROCEDURE ^ dSB*(s: ARRAY OF CHAR; bool: BOOLEAN); 
	PROCEDURE ^ dSS*(s1, s2: ARRAY OF CHAR); 
	PROCEDURE ^ dSSS*(s1, s2, s3: ARRAY OF CHAR); 
	PROCEDURE ^ dSSSS*(s1, s2, s3, s4: ARRAY OF CHAR); 
	PROCEDURE ^ dSI*(s1: ARRAY OF CHAR; i: SIGNED32); 
	PROCEDURE ^ dSR*(s1: ARRAY OF CHAR; R: FLOAT64); 
	PROCEDURE ^ dSISI*(s1: ARRAY OF CHAR; i1: SIGNED32; s2: ARRAY OF CHAR; i2: SIGNED32); 
	PROCEDURE ^ dSRSR*(s1: ARRAY OF CHAR; r1: FLOAT64; s2: ARRAY OF CHAR; r2: FLOAT64); 
	PROCEDURE ^ usage*(cmd, s: ARRAY OF CHAR); 
	PROCEDURE ^ cmd*; 
	PROCEDURE ^ launch*; 
	PROCEDURE ^ Out*; 
	PROCEDURE ^ Compare(str1, str2: ARRAY OF CHAR): BOOLEAN; 
	PROCEDURE ^ SetMode*; 
	PROCEDURE ^ SetLog*; 
	PROCEDURE ^ ToEnd*; 
	PROCEDURE ^ Lines(F: TextGadgets.Frame; lines: SIGNED32); 
	PROCEDURE ^ Down*; 
	PROCEDURE ^ Up*; 
	PROCEDURE ^ UpUp*; 
	PROCEDURE ^ DownDown*; 
	PROCEDURE ^ ReplaceSuffix(VAR name: ARRAY OF CHAR; suffix: ARRAY OF CHAR); 
	PROCEDURE ^ OpenText*; 
	PROCEDURE ^ IncSize*; 
	PROCEDURE ^ SetPrio*; 
	PROCEDURE ^ SetOutput*; 
	PROCEDURE ^ ClearLog*; 
	PROCEDURE ^ CalcDispVec(time: SIGNED32); 
	PROCEDURE ^ SPatFound(text: Texts.Text; VAR pos: SIGNED32): BOOLEAN; 
	PROCEDURE ^ search(VAR S: Attributes.Scanner; tF: TextGadgets.Frame); 
	PROCEDURE ^ Search*; 
	PROCEDURE ^ OpenHelp*; 
	PROCEDURE ^ ViewObjectCopy*; 
	PROCEDURE ^ ToggleVisibility*; 
	PROCEDURE ^ IncPanelTextSizes*; 
BEGIN
END antsMessages.
