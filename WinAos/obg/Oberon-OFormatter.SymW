MODULE OFormatter IN Oberon;
	IMPORT IO := OFormatterIO, Texts, Files, Oberon, Out, Display, Objects, EditTools;
CONST 
	null* = 0; 
	times* = 1; 
	slash* = 2; 
	div* = 3; 
	mod* = 4; 
	and* = 5; 
	plus* = 6; 
	minus* = 7; 
	or* = 8; 
	eql* = 9; 
	neq* = 10; 
	lss* = 11; 
	leq* = 12; 
	gtr* = 13; 
	geq* = 14; 
	in* = 15; 
	is* = 16; 
	arrow* = 17; 
	period* = 18; 
	comma* = 19; 
	colon* = 20; 
	upto* = 21; 
	rparen* = 22; 
	rbrak* = 23; 
	rbrace* = 24; 
	of* = 25; 
	then* = 26; 
	do* = 27; 
	to* = 28; 
	by* = 29; 
	lparen* = 30; 
	lbrak* = 31; 
	lbrace* = 32; 
	not* = 33; 
	becomes* = 34; 
	number* = 35; 
	nil* = 36; 
	true* = 37; 
	false* = 38; 
	string* = 39; 
	ident* = 40; 
	semicolon* = 41; 
	bar* = 42; 
	end* = 43; 
	else* = 44; 
	elsif* = 45; 
	until* = 46; 
	if* = 47; 
	case* = 48; 
	while* = 49; 
	repeat* = 50; 
	for* = 51; 
	loop* = 52; 
	with* = 53; 
	exit* = 54; 
	passivate* = 55; 
	return* = 56; 
	refines* = 57; 
	implements* = 58; 
	array* = 59; 
	definition* = 60; 
	object* = 61; 
	record* = 62; 
	pointer* = 63; 
	begin* = 64; 
	code* = 65; 
	const* = 66; 
	type* = 67; 
	var* = 68; 
	procedure* = 69; 
	import* = 70; 
	module* = 71; 
	eof* = 72; 
	finally* = 73; 
	backslash* = 74; 
	scalarproduct* = 75; 
	elementproduct* = 76; 
	elementquotient* = 77; 
	dtimes* = 78; 
	transpose* = 79; 
	eeql* = 80; 
	eneq* = 81; 
	elss* = 82; 
	eleq* = 83; 
	egtr* = 84; 
	egeq* = 85; 
	qmark* = 86; 
	filler* = qmark; 
	undef = 1000; 
	list = 2; 
	relop = 3; 
	addop = 4; 
	mulop = 5; 
TYPE 
	BreakPoint = IO.BreakPoint; 

	ssBP = IO.ssBP; 

	Task = POINTER TO RECORD (Oberon.Task)
		frame: Display.Frame; 
		text: Texts.Text; 
		changed: BOOLEAN; 
		lastchanged: LONGINT; 
	END; 
VAR 
	sym, level: SHORTINT; 
	noerr: BOOLEAN; 
	inFormPar: BOOLEAN; 
	exprdepth: INTEGER; 
	sline: INTEGER; 
	found: BOOLEAN; 
	silent, notrap: BOOLEAN; 
	forceNL: BOOLEAN; 
	nobp: BreakPoint; 

	PROCEDURE ^ debug(s: ARRAY OF CHAR); 
	PROCEDURE ^ clearBPS(bps: ssBP; k: INTEGER); 
	PROCEDURE ^ DecExprdepth(bps: ssBP); 
	PROCEDURE ^ getBP(bps: ssBP; k: SHORTINT); 
	PROCEDURE ^ checkLine(bps: ssBP); 
	PROCEDURE ^ doForcedNL; 
	PROCEDURE ^ markIndent; 
	PROCEDURE ^ err(n: INTEGER); 
	PROCEDURE ^ CheckSym(s: INTEGER); 
	PROCEDURE ^ qualident; 
	PROCEDURE ^ ConstExpression; 
	PROCEDURE ^ CheckMark; 
	PROCEDURE ^ CheckSysFlag; 
	PROCEDURE ^ RecordType(VAR bp: BreakPoint); 
	PROCEDURE ^ ArrayType(VAR bp: BreakPoint; enhArray: BOOLEAN); 
	PROCEDURE ^ ObjectType(VAR bp: BreakPoint); 
	PROCEDURE ^ Definition(VAR bp: BreakPoint); 
	PROCEDURE ^ PointerType(VAR bp: BreakPoint); 
	PROCEDURE ^ FormalParameters; 
	PROCEDURE ^ TypeDecl(VAR bp: BreakPoint); 
	PROCEDURE ^ Type; 
	PROCEDURE ^ ActualParameters(bps: ssBP); 
	PROCEDURE ^ selector(bps: ssBP); 
	PROCEDURE ^ Element; 
	PROCEDURE ^ Sets; 
	PROCEDURE ^ ConstArray(bps: ssBP); 
	PROCEDURE ^ Range(bps: ssBP); 
	PROCEDURE ^ Factor(bps: ssBP); 
	PROCEDURE ^ Term(bps: ssBP); 
	PROCEDURE ^ SimpleExpression(bps: ssBP); 
	PROCEDURE ^ Expression(bps: ssBP); 
	PROCEDURE ^ Receiver; 
	PROCEDURE ^ ProcedureDeclaration; 
	PROCEDURE ^ CaseLabelList; 
	PROCEDURE ^ StatSeq(bp: BreakPoint; adj: BOOLEAN); 
	PROCEDURE ^ Code; 
	PROCEDURE ^ Block(objScope: BOOLEAN); 
	PROCEDURE ^ DefinitionBlock(objScope: BOOLEAN); 
	PROCEDURE ^ Context; 
	PROCEDURE ^ Module; 
	PROCEDURE ^ TempHandle(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ CheckOnDisplay(t: Task): BOOLEAN; 
	PROCEDURE ^ GetOptions(VAR Sc: Texts.Scanner; VAR print, large, color, lowercase, uppercase: BOOLEAN); 
	PROCEDURE ^ Format*; 
	PROCEDURE ^ IncSize*; 
	PROCEDURE ^ DecSize*; 
	PROCEDURE ^ RemoveOldStyleWith*; 
BEGIN
END OFormatter.
