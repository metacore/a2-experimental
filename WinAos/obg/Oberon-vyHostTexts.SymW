MODULE vyHostTexts IN Oberon;
	IMPORT Objects, Oberon, Display, Texts, Viewers, TextFrames, Fonts, PanelDocs, TextGadgets, TextDocs, Gadgets, Documents, Desktops, vyPortability;
CONST 
	idversion* = \"vyHostTexts S3R2.1 v0.0d1"\; 
	cNotify* = 10; 
	cWarning* = 20; 
	cAlert* = 30; 
	cRed = 1; 
	cBlue = 3; 
	cGreen = 8; 
	col7 = 7; 
	col10 = 10; 
	cBlack = 15; 
	cSpace = 32X; 
	cTab = 9X; 
TYPE 
	Style* = POINTER TO StyleDesc; 

	StyleDesc* = RECORD 
	END; 

	CharStyle* = POINTER TO CharStyleDesc; 

	CharStyleDesc* = RECORD (StyleDesc)
	END; 

	RulerStyle* = POINTER TO RulerStyleDesc; 

	RulerStyleDesc* = RECORD (StyleDesc)
	END; 

	ParaStyle* = POINTER TO ParaStyleDesc; 

	ParaStyleDesc* = RECORD (CharStyleDesc)
	END; 

	NumberStyle* = POINTER TO NumberStyleDesc; 

	NumberStyleDesc* = RECORD (StyleDesc)
	END; 

	FontItem = POINTER TO FontItemDesc; 

	FontItemDesc = RECORD 
		Font: Fonts.Font; 
		prev: FontItem; 
	END; 
VAR 
	T*: Texts.Text; 
	S*: Texts.Scanner; 
	beg: SIGNED32; 
	w*: Texts.Writer; 
	werr*: Texts.Writer; 
	Log*: Texts.Text; 
	msgsep*: CHAR; 
	CaretHasPriority*: BOOLEAN; 
	StdOut: Display.Frame; 
	DefaultFont*, TableFont*: Fonts.Font; 
	PrevFont: FontItem; 
	hexchars: ARRAY 17 OF CHAR; 
	foundObj: BOOLEAN; 
	NewDocument*: Documents.Document; 
	newF-: TextGadgets.Frame; 

	PROCEDURE ^ InRealRange(x: FLOAT64): BOOLEAN; 
	PROCEDURE ^ WReal*(VAR w: Texts.Writer; x: FLOAT64; prec: SIGNED16); 
	PROCEDURE ^ DebugNote(s: ARRAY OF CHAR); 
	PROCEDURE ^ WriteRealFix*(VAR W: Texts.Writer; x: FLOAT64; n, f, E: SIGNED32); 
	PROCEDURE ^ InsertErrW*(level: SIGNED16; TB: Texts.Writer); 
	PROCEDURE ^ InsertErr*(level: SIGNED16; buf: Texts.Buffer); 
	PROCEDURE ^ NoteAttrib(VAR tw: Texts.Writer; level: SIGNED16); 
	PROCEDURE ^ AppendToText*(VAR t: Texts.Text; VAR w: Texts.Writer); 
	PROCEDURE ^ AppendToLog*(VAR w: Texts.Writer); 
	PROCEDURE ^ Show*(name: ARRAY OF CHAR; VAR w: Texts.Writer); 
	PROCEDURE ^ Note*(level: SIGNED16; s: ARRAY OF CHAR); 
	PROCEDURE ^ NoteSS*(level: SIGNED16; s1, s2: ARRAY OF CHAR); 
	PROCEDURE ^ NoteSSS*(level: SIGNED16; s1, s2, s3: ARRAY OF CHAR); 
	PROCEDURE ^ NoteSI*(level: SIGNED16; s: ARRAY OF CHAR; i: SIGNED32); 
	PROCEDURE ^ NoteSIS*(level: SIGNED16; s: ARRAY OF CHAR; i: SIGNED32; s1: ARRAY OF CHAR); 
	PROCEDURE ^ NoteSISI*(level: SIGNED16; s: ARRAY OF CHAR; i: SIGNED32; s1: ARRAY OF CHAR; i1: SIGNED32); 
	PROCEDURE ^ CheckTime; 
	PROCEDURE ^ OpenScanner*(VAR s: Texts.Scanner): BOOLEAN; 
	PROCEDURE ^ DoOpenLog*(logname: ARRAY OF CHAR); 
	PROCEDURE ^ SetCaret*; 
	PROCEDURE ^ OpenLog*; 
	PROCEDURE ^ WriteTableStyle*(VAR W: Texts.Writer); 
	PROCEDURE ^ WritePrevStyle*(VAR W: Texts.Writer); 
	PROCEDURE ^ WriteInt*(VAR W: Texts.Writer; i: SIGNED32); 
	PROCEDURE ^ WriteLongIntTab*(VAR W: Texts.Writer; len: SIGNED32; x: ARRAY OF SIGNED32; start: SIGNED32; n: SIGNED32); 
	PROCEDURE ^ WriteIntTab*(VAR W: Texts.Writer; len: SIGNED32; x: ARRAY OF SIGNED16; start: SIGNED32; n: SIGNED32); 
	PROCEDURE ^ WriteLongRealTab*(VAR W: Texts.Writer; len: SIGNED32; x: ARRAY OF FLOAT64; start: SIGNED32; n: SIGNED32); 
	PROCEDURE ^ WriteLongRealFixTab*(VAR W: Texts.Writer; len: SIGNED32; x: ARRAY OF FLOAT64; start: SIGNED32; n, f, E: SIGNED32); 
	PROCEDURE ^ WriteRealTab*(VAR W: Texts.Writer; len: SIGNED32; x: ARRAY OF FLOAT32; start: SIGNED32; n: SIGNED32); 
	PROCEDURE ^ WriteRealFixTab*(VAR W: Texts.Writer; len: SIGNED32; x: ARRAY OF FLOAT32; start: SIGNED32; n, f, E: SIGNED32); 
	PROCEDURE ^ WriteReal*(VAR W: Texts.Writer; x: FLOAT64); 
	PROCEDURE ^ WriteBoolTab*(VAR w: Texts.Writer; count: SIGNED32; VAR a: ARRAY OF BOOLEAN; offset, step: SIGNED32); 
	PROCEDURE ^ SetStdOutput*(F: Display.Frame); 
	PROCEDURE ^ GetInsertionPoint(VAR OFR: Display.Frame; VAR OT: Texts.Text; VAR OPos: SIGNED32; VAR caretconst: BOOLEAN); 
	PROCEDURE ^ InsertBufferAndScroll(B: Texts.Buffer; VAR OutFrame: Display.Frame; OutText: Texts.Text; OutPos: SIGNED32; VAR newPos: SIGNED32); 
	PROCEDURE ^ TempHandle(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ InsertGadgetAndScroll(O: Objects.Object; VAR OutFrame: Display.Frame; OutText: Texts.Text; OutPos: SIGNED32; VAR newPos: SIGNED32); 
	PROCEDURE ^ InsertLog*(B: Texts.Buffer); 
	PROCEDURE ^ InsertGadget*(G: Objects.Object); 
	PROCEDURE ^ GetCurWidth*(): SIGNED16; 
	PROCEDURE ^ MsgCat*(s: ARRAY OF CHAR); 
	PROCEDURE ^ Msg*(s: ARRAY OF CHAR); 
	PROCEDURE ^ MsgSS*(s1, s2: ARRAY OF CHAR); 
	PROCEDURE ^ MsgI*(i: SIGNED32); 
	PROCEDURE ^ MsgSHex*(s1: ARRAY OF CHAR; i: SIGNED32); 
	PROCEDURE ^ MsgSI*(s1: ARRAY OF CHAR; i: SIGNED32); 
	PROCEDURE ^ MsgSISI*(s1: ARRAY OF CHAR; i: SIGNED32; s2: ARRAY OF CHAR; j: SIGNED32); 
	PROCEDURE ^ MsgSR*(s1: ARRAY OF CHAR; x: FLOAT64); 
	PROCEDURE ^ MsgSRR*(s1: ARRAY OF CHAR; x, y: FLOAT64); 
	PROCEDURE ^ MsgSRSR*(s1: ARRAY OF CHAR; x: FLOAT64; s2: ARRAY OF CHAR; y: FLOAT64); 
	PROCEDURE ^ DebugTest*; 
	PROCEDURE ^ DumpBool*(VAR w: Texts.Writer; VAR a: ARRAY OF BOOLEAN); 
	PROCEDURE ^ DumpReal*(VAR w: Texts.Writer; VAR a: ARRAY OF FLOAT32; prec: SIGNED16); 
	PROCEDURE ^ DumpLongreal*(VAR w: Texts.Writer; VAR a: ARRAY OF FLOAT64; prec: SIGNED16); 
	PROCEDURE ^ DumpInteger*(VAR w: Texts.Writer; VAR a: ARRAY OF SIGNED16; prec: SIGNED16); 
	PROCEDURE ^ DumpLongint*(VAR w: Texts.Writer; VAR a: ARRAY OF SIGNED32; prec: SIGNED16); 
	PROCEDURE ^ SummaryBool*(VAR w: Texts.Writer; count: SIGNED32; VAR a: ARRAY OF BOOLEAN); 
	PROCEDURE ^ SummaryReal*(VAR w: Texts.Writer; count: SIGNED32; VAR a: ARRAY OF FLOAT32; prec: SIGNED16); 
	PROCEDURE ^ SummaryLongreal*(VAR w: Texts.Writer; count: SIGNED32; VAR a: ARRAY OF FLOAT64; prec: SIGNED16); 
	PROCEDURE ^ SummaryInteger*(VAR w: Texts.Writer; count: SIGNED32; VAR a: ARRAY OF SIGNED16; prec: SIGNED16); 
	PROCEDURE ^ SummaryLongint*(VAR w: Texts.Writer; count: SIGNED32; VAR a: ARRAY OF SIGNED32; prec: SIGNED16); 
BEGIN
END vyHostTexts.
