# Oberon language test and validation suite
# options --mayTrap --prolog="Compiler.Compile TesterInput.txt" --command="System.Free Test B A;System.Load Test" --logFile="FoxExecutionTest.Log" --result="JPEG.Execution.Test.Diff"

# test halt and assert statements and simple procedure call (basics for the test suite)

positive: test RGB to I420 2x2x8x8 block conversion used for encoding

	MODULE Test;
	IMPORT
		JPEGEncoder;

		PROCEDURE Test*;
		CONST
			r00 = [22,251,128,29,11,0,90,36,76,246,238,247,175,7,131,121,212,
					153,139,87,244,50,0,192,195,213,39,31,219,209,23,131,175,
					168,216,64,170,156,75,69,41,254,225,31,42,63,241,255,239,
					97,253,208,59,237,0,249,122,74,210,95,93,154,122,210];
			r01 = [203,240,140,224,136,151,236,125,162,243,218,25,222,61,14,
					41,128,216,200,206,36,111,23,17,193,166,98,104,150,107,244,
					163,213,113,159,169,130,190,17,68,247,248,38,130,31,25,63,
					103,70,164,183,180,45,207,107,213,212,209,245,73,29,131,225,224];
			r10 = [95,55,182,132,80,190,100,223,13,118,193,136,93,157,198,123,
					221,25,66,75,39,236,161,99,142,90,225,26,43,170,231,71,161,
					38,197,144,45,114,91,32,214,23,56,85,116,108,154,189,58,22,
					75,189,173,30,222,67,113,125,253,227,158,105,45,126];
			r11 = [242,184,216,31,34,64,161,99,74,90,110,168,154,141,198,97,42,
					170,219,54,163,140,176,2,64,20,224,53,212,37,149,30,29,194,
					72,41,102,199,99,156,111,128,241,109,160,254,92,108,131,93,
					76,62,159,141,247,152,173,90,64,127,197,6,68,125];

			g00 = [184,174,75,127,93,253,90,221,77,131,105,117,130,255,71,161,
					141,150,125,245,252,241,157,37,48,130,13,113,99,227,150,30,
					248,82,87,123,86,33,19,139,211,186,248,218,72,173,4,43,164,
					217,230,39,187,177,205,0,243,138,173,58,160,184,214,217];
			g01 = [137,172,150,76,246,16,165,161,163,46,74,248,253,247,61,251,
					166,167,242,160,24,32,107,110,64,49,102,133,129,44,56,45,25,
					41,90,75,205,139,137,96,185,64,6,38,109,108,178,215,217,234,
					105,154,243,21,5,26,167,163,34,227,58,31,5,197];
			g10 = [31,173,123,248,187,85,205,108,62,85,67,17,203,221,237,152,
					189,117,208,110,223,41,14,38,253,123,79,255,143,210,88,97,
					223,132,58,227,15,84,32,142,178,252,10,250,113,147,233,25,
					66,237,169,47,58,190,159,127,101,80,57,221,238,88,102,104];
			g11 = [83,138,226,145,18,141,129,254,180,38,169,0,64,144,93,139,
					107,68,188,158,81,87,86,171,198,150,3,93,48,253,196,227,14,
					107,72,99,33,120,25,55,211,159,78,247,109,227,52,158,173,
					194,80,195,211,171,65,44,88,111,74,209,103,170,214,231];

			b00 = [122,245,237,188,190,11,213,83,48,40,177,122,12,167,245,73,
					213,49,174,144,220,208,28,196,93,253,228,160,175,29,85,8,136,
					241,50,25,97,145,135,1,19,249,176,39,171,204,65,217,235,156,
					17,214,184,73,194,229,229,183,147,1,181,59,192,110];
			b01 = [119,168,140,185,250,134,213,151,224,91,215,228,57,167,95,
					126,1,119,230,56,19,153,12,170,200,232,44,34,212,150,116,92,
					114,230,162,28,185,13,4,196,57,92,109,179,33,110,193,56,74,
					68,224,114,18,6,42,107,113,7,231,248,80,121,73,66];
			b10 = [144,85,37,124,108,67,255,29,248,153,171,194,240,167,78,200,
					151,126,176,80,116,93,80,190,131,152,235,66,110,74,40,162,
					250,23,175,134,59,11,8,11,143,168,139,136,74,251,46,184,93,
					14,49,105,48,105,119,254,217,72,65,122,183,120,39,102];
			b11 = [108,70,35,13,134,61,176,93,95,134,77,164,164,191,138,253,
					168,224,181,168,163,138,101,189,251,191,186,89,146,75,4,0,
					45,152,112,59,23,134,101,116,0,104,85,11,48,167,191,190,
					214,136,112,92,88,247,129,83,48,249,82,121,230,183,160,73];

			yr00 = [128,205,109,104,79,149,103,150,73,155,152,156,130,170,108,
					139,170,139,134,186,245,180,95,101,97,168,45,93,143,199,104,
					57,213,125,121,94,112,82,48,102,138,213,232,141,74,143,81,
					126,194,174,212,109,148,183,142,100,205,123,181,62,142,160,184,202];
			yr01 = [154,191,145,132,213,69,191,149,169,109,133,179,221,182,50,
					174,135,176,228,161,27,69,71,89,117,104,94,113,144,74,118,85,
					91,83,118,97,180,139,86,98,189,122,27,81,77,83,145,163,156,
					194,141,157,158,74,39,91,174,159,119,183,51,71,78,190];
			yr10 = [62,127,130,199,146,114,179,133,68,102,116,72,174,195,207,
					148,194,90,161,96,155,105,65,73,206,116,140,165,109,182,125,
					96,207,91,112,191,28,84,46,94,184,174,38,187,109,147,188,92,
					66,147,127,96,91,132,173,123,117,92,116,211,207,96,77,110];
			yr11 = [133,144,201,95,35,108,143,189,138,64,140,68,102,148,129,
					139,94,116,196,128,114,108,114,122,163,115,89,80,108,168,160,
					142,21,138,76,77,52,145,55,92,157,143,127,179,117,228,79,146,
					165,157,82,143,181,170,126,80,108,120,71,174,145,122,164,181];

			ur = [112,156,106,143,124,153,116,130,132,162,108,122,130,95,158,
					131,121,85,156,136,129,149,108,121,142,101,108,141,68,158,109,
					112,165,128,121,112,117,97,149,136,121,127,105,143,176,146,131,
					93,117,135,131,103,105,100,103,159,123,98,117,132,141,118,146,112];
			vr = [133,149,67,105,167,130,107,101,163,98,119,125,157,129,143,142,
					118,118,131,178,187,158,109,84,98,163,111,119,122,142,138,193,
					113,150,108,123,147,131,127,119,105,97,116,163,93,137,137,95,
					88,119,130,136,128,128,158,142,109,162,116,123,116,102,107,134];
		VAR
			r, g, b: JPEGEncoder.Block2x2x8x8;
			y: JPEGEncoder.Block2x2x8x8;
			u, v: JPEGEncoder.Block8x8;
			k: INTEGER;
		BEGIN
			r.d00 := r00;
			r.d01 := r01;
			r.d10 := r10;
			r.d11 := r11;

			g.d00 := g00;
			g.d01 := g01;
			g.d10 := g10;
			g.d11 := g11;

			b.d00 := b00;
			b.d01 := b01;
			b.d10 := b10;
			b.d11 := b11;

			JPEGEncoder.RgbToI420(r, g, b, y, u, v);

			FOR k := 0 TO 64-1 DO
				ASSERT(yr00[k] = y.d00[k]);
				ASSERT(yr01[k] = y.d01[k]);
				ASSERT(yr10[k] = y.d10[k]);
				ASSERT(yr11[k] = y.d11[k]);

				ASSERT(ur[k] = u[k]);
				ASSERT(vr[k] = v[k]);
			END;
			
			TRACE("Test passed");
		END Test;

	END Test.
