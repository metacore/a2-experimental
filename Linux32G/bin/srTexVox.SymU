MODULE srTexVox;
	IMPORT srBase, Raster, Graphics := WMGraphics, Random, Math, srMath;
TYPE 
	SREAL = srBase.SREAL; 

	Ray = srBase.Ray; 

	Voxel = srBase.Voxel; 

	Name = srBase.Name; 

	TexVox* = OBJECT (Voxel)
	VAR 
		img*: Raster.Image; 
		fmt: Raster.Format; 
		copy: Raster.Mode; 
		W, H, bpr, adr: LONGINT; 
		transparent*: BOOLEAN; 

		PROCEDURE ^  & init*(n: Name); 
		PROCEDURE ^ Shade*(VAR ray: Ray); 
	END TexVox; 

	texmirrorVox* = OBJECT (TexVox)
	VAR 
		r, g, b, a, red, blue, green: SREAL; 

		PROCEDURE ^ SetColor*(R, G, B, alpha: SREAL); 
		PROCEDURE ^ Shade*(VAR ray: Ray); 
	END texmirrorVox; 

	scrollVox* = OBJECT (Voxel)
	VAR 
		img*: Raster.Image; 
		fmt: Raster.Format; 
		copy: Raster.Mode; 
		w, h, bpr, adr: LONGINT; 
		transparent: BOOLEAN; 
		off: INTEGER; 

		PROCEDURE ^  & init*(n: Name); 
		PROCEDURE ^ Shade*(VAR ray: Ray); 
	END scrollVox; 

	interfereVox* = OBJECT (Voxel)
	VAR 
		imgn, imgm*: Raster.Image; 
		fmt: Raster.Format; 
		copy: Raster.Mode; 
		w, h, bpr, adr: LONGINT; 
		done: BOOLEAN; 
		off: INTEGER; 

		PROCEDURE ^  & init*(n, m: Name); 
		PROCEDURE ^ Shade*(VAR ray: Ray); 
		PROCEDURE ^ tick*; 
	END interfereVox; 

	TexSph* = OBJECT (TexVox)
	VAR 
		cx, cy, cz: SREAL; 
		D2: SREAL; 

		PROCEDURE ^  & init*(n: Name); 
		PROCEDURE ^ ctop(x, y, z: SREAL; VAR th, ph, d: SREAL); 
		PROCEDURE ^ Shade*(VAR ray: Ray); 
	END TexSph; 
VAR 
	rand: Random.Generator; 

	PROCEDURE ^ mirror(VAR ray: Ray); 
BEGIN
END srTexVox.
