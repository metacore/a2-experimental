MODULE LeoSplines IN Oberon;
	IMPORT Files, Math IN A2, Objects, Attributes, Gadgets, GfxMatrix, GfxPaths, Gfx, Leonardo, LeoPaths, LeoPens;
CONST 
TYPE 
	Spline* = POINTER TO SplineDesc; 

	SplineDesc* = RECORD (LeoPaths.SegmentDesc)
		dx0*, dy0*: REAL; 
	END; 

	BoxData = RECORD (GfxPaths.EnumData)
		llx, lly, urx, ury: REAL; 
		dx0, dy0: REAL; 
		cx, cy: REAL; 
	END; 

	DrawData = RECORD (GfxPaths.EnumData)
		ctxt: Gfx.Context; 
		pen: LeoPens.Pen; 
	END; 

	ProjectData = RECORD (GfxPaths.EnumData)
		llx, lly, urx, ury: REAL; 
		qx, qy, px, py: REAL; 
		cx, cy: REAL; 
		hit: BOOLEAN; 
	END; 

	PROCEDURE ^ GetCoords(s: Spline; VAR xc, yc: ARRAY OF REAL; VAR n: INTEGER); 
	PROCEDURE ^ IncludeElem(VAR data: GfxPaths.EnumData); 
	PROCEDURE ^ CalcBox(s: Spline; VAR mat: GfxMatrix.Matrix); 
	PROCEDURE ^ Control(s: Spline; VAR msg: Leonardo.ControlMsg); 
	PROCEDURE ^ Validate(s: Spline; VAR msg: Leonardo.ValidateMsg); 
	PROCEDURE ^ DrawElem(VAR data: GfxPaths.EnumData); 
	PROCEDURE ^ Draw(s: Spline; pen: LeoPens.Pen); 
	PROCEDURE ^ DragElem(VAR data: GfxPaths.EnumData); 
	PROCEDURE ^ Drag(s: Spline; ctxt: Gfx.Context); 
	PROCEDURE ^ Render(s: Spline; VAR msg: Leonardo.RenderMsg); 
	PROCEDURE ^ ProjectElem(VAR data: GfxPaths.EnumData); 
	PROCEDURE ^ Project(s: Spline; x, y, llx, lly, urx, ury: REAL; VAR px, py: REAL): BOOLEAN; 
	PROCEDURE ^ Locate(s: Spline; VAR msg: Leonardo.LocateMsg); 
	PROCEDURE ^ Copy*(VAR msg: Objects.CopyMsg; from, to: Spline); 
	PROCEDURE ^ Handle*(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ Init*(s: Spline; bottom, top: LeoPaths.Point; closed: BOOLEAN; pen: LeoPens.Pen); 
	PROCEDURE ^ New*; 
	PROCEDURE ^ HandleSpline(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ NewSpline*; 
BEGIN
END LeoSplines.
