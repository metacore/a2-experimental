MODULE NoteBooks IN Oberon;
	IMPORT Fonts, Objects, Display, Gadgets, Display3, Effects, Oberon, Attributes, Files, Views, Out;
CONST 
	border = 4; 
	topborder = 16; 
TYPE 
	NoteBook* = POINTER TO NoteBookDesc; 

	NoteBookDesc* = RECORD (Gadgets.FrameDesc)
		pages*: Display.Frame; 
		time*: LONGINT; 
	END; 

	PageMsg = RECORD (Display.FrameMsg)
		newpage: Display.Frame; 
	END; 

	PROCEDURE ^ SetMask(F: Display.Frame; M: Display3.Mask); 
	PROCEDURE ^ SetMainMask(F: NoteBook); 
	PROCEDURE ^ ToMain(F: NoteBook; x, y: INTEGER; VAR M: Display.FrameMsg); 
	PROCEDURE ^ Adjust(F: NoteBook; VAR M: Display.ModifyMsg); 
	PROCEDURE ^ AdjustChild(F: NoteBook; VAR M: Display.ModifyMsg); 
	PROCEDURE ^ UpdateTitle(F: NoteBook; R: Display3.Mask; x, y, w, h: INTEGER); 
	PROCEDURE ^ Restore(F: NoteBook; R: Display3.Mask; x, y, w, h: INTEGER; VAR M: Display.DisplayMsg); 
	PROCEDURE ^ HandlePageMsg(F: NoteBook; x, y: INTEGER; VAR M: PageMsg); 
	PROCEDURE ^ GotoPage(F: NoteBook; f: Display.Frame); 
	PROCEDURE ^ InsertPage(F: NoteBook; f: Display.Frame); 
	PROCEDURE ^ RemovePage(F: NoteBook; f: Display.Frame); 
	PROCEDURE ^ LocatePage(F: NoteBook; type: ARRAY OF CHAR): Display.Frame; 
	PROCEDURE ^ HandleSelect(F: NoteBook; VAR M: Oberon.InputMsg); 
	PROCEDURE ^ Edit(F: NoteBook; x, y, w, h: INTEGER; VAR M: Oberon.InputMsg); 
	PROCEDURE ^ Neutralize(F: NoteBook); 
	PROCEDURE ^ ConsumeMsg(F: NoteBook; VAR M: Display.ConsumeMsg); 
	PROCEDURE ^ Copy*(VAR M: Objects.CopyMsg; from, to: NoteBook); 
	PROCEDURE ^ Attr(F: NoteBook; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ Handler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ InitNoteBook*(F: NoteBook); 
	PROCEDURE ^ New*; 
	PROCEDURE ^ Show*; 
BEGIN
END NoteBooks.
