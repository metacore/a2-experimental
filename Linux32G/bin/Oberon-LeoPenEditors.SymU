MODULE LeoPenEditors IN Oberon;
	IMPORT Files, Objects, Display, Printer, Input, Fonts, Oberon, Out, Strings, Attributes, Links, Display3, Effects, Printer3, Gadgets, Documents, Desktops, ListRiders, Colors, Gfx, GfxDisplay, GfxPrinter, Leonardo, LeoPens, LeoOutliners, LeoFrames, LeoPanels;
CONST 
TYPE 
	Preview* = POINTER TO PreviewDesc; 

	PreviewDesc* = RECORD (Gadgets.FrameDesc)
		const*: BOOLEAN; 
	END; 

	DropMsg* = RECORD (Display.FrameMsg)
		pen*: LeoPens.Pen; 
	END; 

	SetPenAction = POINTER TO SetPenActionDesc; 

	SetPenActionDesc = RECORD (Leonardo.ActionDesc)
		shape: Leonardo.Shape; 
		name: Objects.Name; 
		pen: LeoPens.Pen; 
	END; 

	SetLinkAction = POINTER TO SetLinkActionDesc; 

	SetLinkActionDesc = RECORD (Leonardo.ActionDesc)
		pen: LeoPens.Pen; 
		name: Objects.Name; 
		obj: Objects.Object; 
	END; 

	SetIntAction = POINTER TO SetIntActionDesc; 

	SetIntActionDesc = RECORD (Leonardo.ActionDesc)
		pen: LeoPens.Pen; 
		name: Objects.Name; 
		val: LONGINT; 
	END; 

	SetRealAction = POINTER TO SetRealActionDesc; 

	SetRealActionDesc = RECORD (Leonardo.ActionDesc)
		pen: LeoPens.Pen; 
		name: Objects.Name; 
		val: REAL; 
	END; 

	SetBoolAction = POINTER TO SetBoolActionDesc; 

	SetBoolActionDesc = RECORD (Leonardo.ActionDesc)
		pen: LeoPens.Pen; 
		name: Objects.Name; 
		val: BOOLEAN; 
	END; 
VAR 
	DC: GfxDisplay.Context; 
	PFont: Fonts.Font; 
	PenLib: Objects.Library; 

	PROCEDURE ^ HandleShapeEditor*(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ HandleEditor*(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ Replace(pen: Objects.Object); 
	PROCEDURE ^ Create*; 
	PROCEDURE ^ Make*; 
	PROCEDURE ^ EditNew*; 
	PROCEDURE ^ FindPen(CONST name: ARRAY OF CHAR): LeoPens.Pen; 
	PROCEDURE ^ Find*(CONST name: ARRAY OF CHAR; closed: BOOLEAN): LeoPens.Pen; 
	PROCEDURE ^ Register*(pen: LeoPens.Pen; CONST name: ARRAY OF CHAR); 
	PROCEDURE ^ DoSetPenAction(fig: Leonardo.Figure; act: Leonardo.Action); 
	PROCEDURE ^ SetPen*(fig: Leonardo.Figure; shape: Leonardo.Shape; CONST name: ARRAY OF CHAR; pen: LeoPens.Pen); 
	PROCEDURE ^ DoSetLinkAction(fig: Leonardo.Figure; act: Leonardo.Action); 
	PROCEDURE ^ SetLink*(fig: Leonardo.Figure; pen: LeoPens.Pen; CONST name: ARRAY OF CHAR; obj: Objects.Object); 
	PROCEDURE ^ DoSetIntAction(fig: Leonardo.Figure; act: Leonardo.Action); 
	PROCEDURE ^ SetInt*(fig: Leonardo.Figure; pen: LeoPens.Pen; CONST name: ARRAY OF CHAR; val: LONGINT); 
	PROCEDURE ^ DoSetRealAction(fig: Leonardo.Figure; act: Leonardo.Action); 
	PROCEDURE ^ SetReal*(fig: Leonardo.Figure; pen: LeoPens.Pen; CONST name: ARRAY OF CHAR; val: REAL); 
	PROCEDURE ^ DoSetBoolAction(fig: Leonardo.Figure; act: Leonardo.Action); 
	PROCEDURE ^ SetBool*(fig: Leonardo.Figure; pen: LeoPens.Pen; CONST name: ARRAY OF CHAR; val: BOOLEAN); 
	PROCEDURE ^ SetColor*(fig: Leonardo.Figure; pen: LeoPens.Pen; col: LONGINT); 
	PROCEDURE ^ InitPenLib; 
	PROCEDURE ^ MakePenList(list: Objects.Object); 
	PROCEDURE ^ StorePenLib*; 
	PROCEDURE ^ LoadPenLib*; 
	PROCEDURE ^ SelListPen*; 
	PROCEDURE ^ AddListPen*; 
	PROCEDURE ^ DelListPen*; 
	PROCEDURE ^ InspectSel*; 
	PROCEDURE ^ ApplySel*; 
	PROCEDURE ^ RevertPens(e: LeoPanels.Editor); 
	PROCEDURE ^ ApplyPens(e: LeoPanels.Editor); 
	PROCEDURE ^ EditPens*; 
	PROCEDURE ^ RevertSelect(e: LeoPanels.Editor); 
	PROCEDURE ^ ApplySelect(e: LeoPanels.Editor); 
	PROCEDURE ^ Select*; 
	PROCEDURE ^ TrackPreview(prev: Preview; VAR msg: Oberon.InputMsg); 
	PROCEDURE ^ RenderPreview(ctxt: Gfx.Context; pen: LeoPens.Pen; w, h: REAL); 
	PROCEDURE ^ RestorePreview(prev: Preview; px, py: INTEGER; mask: Display3.Mask); 
	PROCEDURE ^ PrintPreview(prev: Preview; VAR msg: Display.DisplayMsg); 
	PROCEDURE ^ CopyPreview*(VAR msg: Objects.CopyMsg; from, to: Preview); 
	PROCEDURE ^ HandlePreview*(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ InitPreview*(prev: Preview; model: Objects.Object); 
	PROCEDURE ^ NewPreview*; 
	PROCEDURE ^ RevertStroker(editor: LeoPanels.Editor); 
	PROCEDURE ^ ApplyStroker(editor: LeoPanels.Editor); 
	PROCEDURE ^ NewStroker*; 
	PROCEDURE ^ RevertFiller(editor: LeoPanels.Editor); 
	PROCEDURE ^ ApplyFiller(editor: LeoPanels.Editor); 
	PROCEDURE ^ NewFiller*; 
	PROCEDURE ^ RevertDasher(editor: LeoPanels.Editor); 
	PROCEDURE ^ ApplyDasher(editor: LeoPanels.Editor); 
	PROCEDURE ^ HandleDasher(obj: Objects.Object; VAR msg: Objects.ObjMsg); 
	PROCEDURE ^ NewDasher*; 
	PROCEDURE ^ RevertForker(editor: LeoPanels.Editor); 
	PROCEDURE ^ ApplyForker(editor: LeoPanels.Editor); 
	PROCEDURE ^ NewForker*; 
	PROCEDURE ^ RevertOutliner(editor: LeoPanels.Editor); 
	PROCEDURE ^ ApplyOutliner(editor: LeoPanels.Editor); 
	PROCEDURE ^ NewOutliner*; 
	PROCEDURE ^ RevertArrow(editor: LeoPanels.Editor); 
	PROCEDURE ^ ApplyArrow(editor: LeoPanels.Editor); 
	PROCEDURE ^ NewArrow*; 
BEGIN
END LeoPenEditors.
