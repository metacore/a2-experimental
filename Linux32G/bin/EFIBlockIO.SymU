MODULE EFIBlockIO;
	IMPORT EFI, SYSTEM;
CONST 
	Revision* = 65536; 
TYPE 
	BlockIOMedia* = RECORD 
		MediaId-: EFI.Int32; 
		RemovableMedia-: EFI.Boolean; 
		MediaPresent-: EFI.Boolean; 
		LogicalPartition-: EFI.Boolean; 
		ReadOnly-: EFI.Boolean; 
		WriteCaching-: EFI.Boolean; 
		BlockSize-: EFI.Int32; 
		IoAlign-: EFI.Int32; 
		LastBlock-: EFI.LBA; 
	END; 

	Protocol* = POINTER TO ProtocolDescription; 

	BlockIOReset* = PROCEDURE {WINAPI}(This: Protocol; ExtendedVerification: EFI.Boolean):EFI.Status; 

	BlockIOReadBlocks* = PROCEDURE {WINAPI}(This: Protocol; MediaId: EFI.Int32; LBA: EFI.LBA; BufferSize: EFI.Int; VAR Buffer: ARRAY OF SYSTEM.BYTE):EFI.Status; 

	BlockIOWriteBlocks* = PROCEDURE {WINAPI}(This: Protocol; MediaId: EFI.Int32; LBA: EFI.LBA; BufferSize: EFI.Int; CONST Buffer: ARRAY OF SYSTEM.BYTE):EFI.Status; 

	BlockIOFlushBlocks* = PROCEDURE {WINAPI}(This: Protocol):EFI.Status; 

	ProtocolDescription* = RECORD (EFI.ProtocolDescription)
		Revision-: EFI.Int64; 
		Media-{UNTRACED} : POINTER TO BlockIOMedia; 
		Reset-: BlockIOReset; 
		ReadBlocks-: BlockIOReadBlocks; 
		WriteBlocks-: BlockIOWriteBlocks; 
		FlushBlocks-: BlockIOFlushBlocks; 
	END; 
VAR 
	GUID-: EFI.GUID; 

BEGIN
END EFIBlockIO.
