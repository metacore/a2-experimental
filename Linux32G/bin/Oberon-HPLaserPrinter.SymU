MODULE HPLaserPrinter IN Oberon;
	IMPORT SYSTEM, Modules, Files, Display, Fonts, Texts, Oberon, Printer, Pictures;
CONST 
	InstallCmd = \"HPLaserPrinter.Install"\; 
	HPPageWidth = 2480; 
	HPPageHeight = 3508; 
	HPX = 71; 
	HPY = 148; 
	maxfonts = 20; 
	BaseFont = 100; 
	N = 40; 
	BlockSize = 512; 
	PROPOR = 1; 
	FIXEDSP = 0; 
	PORTRAIT = 0; 
	LANDSCP = 1; 
	ESC = 1BX; 
	FF = 0CX; 
	PW = 2336; 
	PH = 3281; 
	PL = (PW DIV 32); 
	CH = (PH DIV 4); 
	ColSubDiv = 6; 
TYPE 
	RealVector = ARRAY N OF REAL; 

	Poly = RECORD 
		a, b, c, d, t: REAL; 
	END; 

	PolyVector = ARRAY N OF Poly; 

	Set = POINTER TO ARRAY OF SET; 

	Font = RECORD 
		name: ARRAY 32 OF CHAR; 
		pitch: SHORTINT; 
		chartab: Set; 
	END; 

	HPFontDesc = RECORD 
		size: INTEGER; 
		res0: SHORTINT; 
		type: SHORTINT; 
		res1, base, cellwidth, cellheight: INTEGER; 
		orient: SHORTINT; 
		space: SHORTINT; 
		symbol, pitch, height, xheight: INTEGER; 
		widthtype, style*, strokeweight, typeface, res2, serifstyle: SHORTINT; 
		res3: INTEGER; 
		underdist, underheight: SHORTINT; 
		textheight, textwidth, res4, res5: INTEGER; 
		pitchext, heightext: SHORTINT; 
		res6, res7, res8: INTEGER; 
		name: ARRAY 16 OF CHAR; 
	END; 

	HPCharDesc = RECORD 
		fix1, fix2, orient, left, top, width, height, delta: INTEGER; 
	END; 

	RunP = POINTER TO RunDscP; 

	RunDscP = RECORD 
		next, prev: RunP; 
		x, y, w, h, col: INTEGER; 
	END; 
VAR 
	r, u: Files.Rider; 
	Unit: LONGINT; 
	Depth, Width, Height: INTEGER; 
	CurFont, PrevFont: SHORTINT; 
	M: POINTER TO ARRAY HPPageHeight OF Set; 
	maxX, maxY, minX, minY: INTEGER; 
	nofonts: INTEGER; 
	font: POINTER TO ARRAY maxfonts OF Font; 
	freeP: RunP; 

	PROCEDURE ^ LookupFont(name: ARRAY OF CHAR; VAR i: SHORTINT; VAR inserted: BOOLEAN); 
	PROCEDURE ^ New(VAR s: Set; len: LONGINT); 
	PROCEDURE ^ Incl(s: Set; e1: LONGINT); 
	PROCEDURE ^ In(s: Set; e1: LONGINT): BOOLEAN; 
	PROCEDURE ^ SB(i: INTEGER): INTEGER; 
	PROCEDURE ^ Reverse(VAR c: CHAR); 
	PROCEDURE ^ WriteString(VAR s: ARRAY OF CHAR); 
	PROCEDURE ^ WriteInt(x: INTEGER); 
	PROCEDURE ^ Pos(x, y: INTEGER); 
	PROCEDURE ^ SetRes(res: INTEGER); 
	PROCEDURE ^ Block(w, h: INTEGER); 
	PROCEDURE ^ DefineDot; 
	PROCEDURE ^ InitPage; 
	PROCEDURE ^ ClosePage; 
	PROCEDURE ^ CreateFontDesc(id, base, cw, ch, or, sp, pi, he: INTEGER; name: ARRAY OF CHAR); 
	PROCEDURE ^ DownloadChar(fnt: Fonts.Font; ch: CHAR; num: INTEGER); 
	PROCEDURE ^ SwitchOn(fntno: SHORTINT); 
	PROCEDURE ^ CreateFont(fnt: Fonts.Font; fntno, pitch, orient, spacing: INTEGER); 
	PROCEDURE ^ SetFont(name: ARRAY OF CHAR; VAR s: ARRAY OF CHAR); 
	PROCEDURE ^ LoadFont(f: SHORTINT); 
	PROCEDURE ^ Dot(x, y: INTEGER); 
	PROCEDURE ^ line(x0, y0, x1, y1: INTEGER); 
	PROCEDURE ^ circle(x0, y0, r: INTEGER); 
	PROCEDURE ^ ellipse(x0, y0, a, b: INTEGER); 
	PROCEDURE ^ PrintPoly(x0, y0: INTEGER; VAR p, q: Poly; lim: REAL); 
	PROCEDURE ^ SolveTriDiag(VAR a, b, c, y: RealVector; n: INTEGER); 
	PROCEDURE ^ OpenSpline(VAR x, y, d: RealVector; n: INTEGER); 
	PROCEDURE ^ ClosedSpline(VAR x, y, d: RealVector; n: INTEGER); 
	PROCEDURE ^ spline(x0, y0, n, open: INTEGER; VAR u, v: ARRAY OF INTEGER); 
	PROCEDURE ^ GetDim(label: ARRAY OF CHAR; def: INTEGER; VAR val: INTEGER); 
	PROCEDURE ^ InitMetrics*(P: Printer.Printer); 
	PROCEDURE ^ Open*(P: Printer.Printer; printer, options: ARRAY OF CHAR); 
	PROCEDURE ^ UseListFont*(P: Printer.Printer; name: ARRAY OF CHAR); 
	PROCEDURE ^ ReplConst*(P: Printer.Printer; x, y, w, h: INTEGER); 
	PROCEDURE ^ ContString*(P: Printer.Printer; s: ARRAY OF CHAR; fnt: Fonts.Font); 
	PROCEDURE ^ String*(P: Printer.Printer; x, y: INTEGER; s: ARRAY OF CHAR; fnt: Fonts.Font); 
	PROCEDURE ^ ReplPattern*(P: Printer.Printer; x, y, w, h, col: INTEGER); 
	PROCEDURE ^ Picture*(print: Printer.Printer; P: Pictures.Picture; px, py, pw, ph, X, Y, W, H, mode: INTEGER); 
	PROCEDURE ^ Circle*(P: Printer.Printer; x0, y0, r: INTEGER); 
	PROCEDURE ^ Ellipse*(P: Printer.Printer; x0, y0, a, b: INTEGER); 
	PROCEDURE ^ Line*(P: Printer.Printer; x0, y0, x1, y1: INTEGER); 
	PROCEDURE ^ UseColor*(P: Printer.Printer; red, green, blue: INTEGER); 
	PROCEDURE ^ Spline*(P: Printer.Printer; x0, y0, n, open: INTEGER; VAR X, Y: ARRAY OF INTEGER); 
	PROCEDURE ^ Page*(P: Printer.Printer; nofcopies: INTEGER); 
	PROCEDURE ^ Close*(P: Printer.Printer); 
	PROCEDURE ^ GetMetric*(P: Printer.Printer; fnt: Fonts.Font): Fonts.Font; 
	PROCEDURE ^ NewPrinter*(): Printer.Printer; 
	PROCEDURE ^ Install*; 
	PROCEDURE ^ Cleanup; 
BEGIN
END HPLaserPrinter.
