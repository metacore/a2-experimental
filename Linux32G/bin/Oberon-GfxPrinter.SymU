MODULE GfxPrinter IN Oberon;
	IMPORT SYSTEM, Display, Fonts, Printer, Images, GfxMatrix, GfxImages, GfxRegions, GfxFonts, Gfx, GfxRaster;
CONST 
	R = Images.r; 
	G = Images.g; 
	B = Images.b; 
	A = Images.a; 
TYPE 
	Context* = POINTER TO ContextDesc; 

	ContextDesc* = RECORD (GfxRaster.ContextDesc)
		orgX*, orgY*: REAL; 
		scale*: REAL; 
		defClip*: GfxRegions.Region; 
		prcol: Gfx.Color; 
	END; 

	RegData = RECORD (GfxRegions.EnumData)
		pc: Context; 
		dx, dy: INTEGER; 
		img: Images.Image; 
		col: Images.Pixel; 
	END; 
VAR 
	Methods: Gfx.Methods; 
	White: Images.Pixel; 

	PROCEDURE ^ UseColor(pc: Context; col: Gfx.Color); 
	PROCEDURE ^ Color(llx, lly, urx, ury: INTEGER; VAR data: GfxRegions.EnumData); 
	PROCEDURE ^ Tile(llx, lly, urx, ury: INTEGER; VAR data: GfxRegions.EnumData); 
	PROCEDURE ^ Dot(rc: GfxRaster.Context; x, y: LONGINT); 
	PROCEDURE ^ Rect(rc: GfxRaster.Context; llx, lly, urx, ury: LONGINT); 
	PROCEDURE ^ SetColPat(rc: GfxRaster.Context; col: Gfx.Color; pat: Gfx.Pattern); 
	PROCEDURE ^ ResetCTM(ctxt: Gfx.Context); 
	PROCEDURE ^ ResetClip(ctxt: Gfx.Context); 
	PROCEDURE ^ Show(ctxt: Gfx.Context; x, y: REAL; VAR str: ARRAY OF CHAR); 
	PROCEDURE ^ Image(ctxt: Gfx.Context; x, y: REAL; img: Images.Image; VAR filter: GfxImages.Filter); 
	PROCEDURE ^ NewPattern(ctxt: Gfx.Context; img: Images.Image; px, py: REAL): Gfx.Pattern; 
	PROCEDURE ^ InitMethods; 
	PROCEDURE ^ SetClipRect*(pc: Context; llx, lly, urx, ury: INTEGER); 
	PROCEDURE ^ SetClipRegion*(pc: Context; reg: GfxRegions.Region); 
	PROCEDURE ^ SetCoordinates*(pc: Context; x, y, scale: REAL); 
	PROCEDURE ^ Init*(pc: Context); 
BEGIN
END GfxPrinter.
