MODULE WMClock;
	IMPORT Modules, Kernel, Math, Dates, Strings, Locks, XML, Raster, WMRasterScale, WMRectangles, WMGraphics, WMGraphicUtilities, WMWindowManager, WMPopups, WMRestorable, WMMessages, WMComponents, WMProperties;
CONST 
	ViewModeStandard* = 0; 
	ViewModeDateTime* = 1; 
	ViewModeDayOfWeek* = 2; 
	ViewModeAnalog* = 3; 
	ViewModeFormatted* = 4; 
	WindowWidth = 150; 
	WindowHeight = 50; 
TYPE 
	ContextMenuPar = OBJECT 
	VAR 
		mode: LONGINT; 

		PROCEDURE ^  & New*(m: LONGINT); 
	END ContextMenuPar; 

	KillerMsg = OBJECT 
	END KillerMsg; 

	Window = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		clock: Clock; 
		imageNameAnalog: Strings.String; 
		contextMenu: WMPopups.Popup; 
		dragging, resizing: BOOLEAN; 
		lastX, lastY: LONGINT; 

		PROCEDURE ^  & New*(context: WMRestorable.Context; flags: SET); 
		PROCEDURE ^ Close*; 
		PROCEDURE ^ HandleClose(sender, par: ANY); 
		PROCEDURE ^ HandleToggleColor(sender, data: ANY); 
		PROCEDURE ^ HandleToggleView(sender, par: ANY); 
		PROCEDURE ^ PointerDown*(x, y: LONGINT; keys: SET); 
		PROCEDURE ^ PointerMove*(x, y: LONGINT; keys: SET); 
		PROCEDURE ^ PointerUp*(x, y: LONGINT; keys: SET); 
		PROCEDURE ^ Handle*(VAR x: WMMessages.Message); 
	END Window; 

	Clock* = OBJECT {EXCLUSIVE} (WMComponents.VisualComponent)
	VAR 
		viewMode-: WMProperties.Int32Property; 
		color-: WMProperties.ColorProperty; 
		imageName-: WMProperties.StringProperty; 
		timeOffset-: WMProperties.Int32Property; 
		secondHandLength-, minuteHandLength-, hourHandLength-: WMProperties.Int32Property; 
		secondHandColor-, minuteHandColor-, hourHandColor-: WMProperties.ColorProperty; 
		format-: WMProperties.StringProperty; 
		currentTime: Dates.DateTime; 
		lock: Locks.Lock; 
		str: Strings.String; 
		centerX, centerY: LONGINT; 
		image: WMGraphics.Image; 
		updateInterval: LONGINT; 
		alive, dead: BOOLEAN; 
		timer: Kernel.Timer; 

		PROCEDURE ^  & Init*; 
		PROCEDURE ^ PropertyChanged*(sender, property: ANY); 
		PROCEDURE ^ RecacheProperties*; 
		PROCEDURE ^ DrawHands(canvas: WMGraphics.Canvas; time: Dates.DateTime); 
		PROCEDURE ^ DrawBackground*(canvas: WMGraphics.Canvas); 
		PROCEDURE ^ Finalize*; 
	BEGIN{ACTIVE} 
	END Clock; 
VAR 
	nofWindows: LONGINT; 
	StrClock: Strings.String; 
	PrototypeViewMode: WMProperties.Int32Property; 
	PrototypeColor: WMProperties.ColorProperty; 
	PrototypeImageName: WMProperties.StringProperty; 
	PrototypeSecondHandLength, PrototypeMinuteHandLength, PrototypeHourHandLength: WMProperties.Int32Property; 
	PrototypeSecondHandColor, PrototypeMinuteHandColor, PrototypeHourHandColor: WMProperties.ColorProperty; 
	PrototypeTimeOffset, PrototypeUpdateInterval: WMProperties.Int32Property; 
	PrototypeFormat: WMProperties.StringProperty; 
	contextMenuParStandard, contextMenuParDateTime, contextMenuParDayOfWeek, contextMenuParAnalog: ContextMenuPar; 

	PROCEDURE ^ Open*; 
	PROCEDURE ^ Restore*(context: WMRestorable.Context); 
	PROCEDURE ^ GenClock*(): XML.Element; 
	PROCEDURE ^ InitStrings; 
	PROCEDURE ^ InitPrototypes; 
	PROCEDURE ^ IncCount; 
	PROCEDURE ^ DecCount; 
	PROCEDURE ^ Cleanup; 
BEGIN
END WMClock.
