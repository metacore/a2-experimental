MODULE NbrInt64;
	IMPORT SYSTEM, NbrInt8, NbrInt16, NbrInt32, Streams;
CONST 
	Eq = 16384; 
	Lt = 256; 
	Gt = 0; 
TYPE 
	Integer* = RECORD 
		low, hi: NbrInt32.Integer; 
	END; 
VAR 
	MinNbr-, MaxNbr-, One, Two: Integer; 

	PROCEDURE {FingerPrint(-1109347231)}  - Compare(): NbrInt32.Integer;
	CODE
	END Compare; 
	OPERATOR ^ ">"-(a, b: Integer): BOOLEAN; 
	OPERATOR ^ ">"-(a: Integer; b: NbrInt32.Integer): BOOLEAN; 
	OPERATOR ^ ">"-(a: Integer; b: NbrInt16.Integer): BOOLEAN; 
	OPERATOR ^ ">"-(a: Integer; b: NbrInt8.Integer): BOOLEAN; 
	OPERATOR ^ ">"-(a: NbrInt32.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ ">"-(a: NbrInt16.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ ">"-(a: NbrInt8.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ ">="-(a, b: Integer): BOOLEAN; 
	OPERATOR ^ ">="-(a: Integer; b: NbrInt32.Integer): BOOLEAN; 
	OPERATOR ^ ">="-(a: Integer; b: NbrInt16.Integer): BOOLEAN; 
	OPERATOR ^ ">="-(a: Integer; b: NbrInt8.Integer): BOOLEAN; 
	OPERATOR ^ ">="-(a: NbrInt32.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ ">="-(a: NbrInt16.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ ">="-(a: NbrInt8.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ "<"-(a, b: Integer): BOOLEAN; 
	OPERATOR ^ "<"-(a: Integer; b: NbrInt32.Integer): BOOLEAN; 
	OPERATOR ^ "<"-(a: Integer; b: NbrInt16.Integer): BOOLEAN; 
	OPERATOR ^ "<"-(a: Integer; b: NbrInt8.Integer): BOOLEAN; 
	OPERATOR ^ "<"-(a: NbrInt32.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ "<"-(a: NbrInt16.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ "<"-(a: NbrInt8.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ "<="-(a, b: Integer): BOOLEAN; 
	OPERATOR ^ "<="-(a: Integer; b: NbrInt32.Integer): BOOLEAN; 
	OPERATOR ^ "<="-(a: Integer; b: NbrInt16.Integer): BOOLEAN; 
	OPERATOR ^ "<="-(a: Integer; b: NbrInt8.Integer): BOOLEAN; 
	OPERATOR ^ "<="-(a: NbrInt32.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ "<="-(a: NbrInt16.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ "<="-(a: NbrInt8.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ "="-(a, b: Integer): BOOLEAN; 
	OPERATOR ^ "="-(a: Integer; b: NbrInt32.Integer): BOOLEAN; 
	OPERATOR ^ "="-(a: Integer; b: NbrInt16.Integer): BOOLEAN; 
	OPERATOR ^ "="-(a: Integer; b: NbrInt8.Integer): BOOLEAN; 
	OPERATOR ^ "="-(a: NbrInt32.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ "="-(a: NbrInt16.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ "="-(a: NbrInt8.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ "#"-(a, b: Integer): BOOLEAN; 
	OPERATOR ^ "#"-(a: Integer; b: NbrInt32.Integer): BOOLEAN; 
	OPERATOR ^ "#"-(a: Integer; b: NbrInt16.Integer): BOOLEAN; 
	OPERATOR ^ "#"-(a: Integer; b: NbrInt8.Integer): BOOLEAN; 
	OPERATOR ^ "#"-(a: NbrInt32.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ "#"-(a: NbrInt16.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ "#"-(a: NbrInt8.Integer; b: Integer): BOOLEAN; 
	OPERATOR ^ "-"-(a: Integer): Integer; 
	OPERATOR ^ ":="-(VAR a: Integer; b: NbrInt32.Integer); 
	OPERATOR ^ ":="-(VAR a: Integer; b: NbrInt16.Integer); 
	OPERATOR ^ ":="-(VAR a: Integer; b: NbrInt8.Integer); 
	OPERATOR ^ "+"-(a, b: Integer): Integer; 
	OPERATOR ^ "+"-(a: Integer; b: NbrInt32.Integer): Integer; 
	OPERATOR ^ "+"-(a: Integer; b: NbrInt16.Integer): Integer; 
	OPERATOR ^ "+"-(a: Integer; b: NbrInt8.Integer): Integer; 
	OPERATOR ^ "+"-(a: NbrInt32.Integer; b: Integer): Integer; 
	OPERATOR ^ "+"-(a: NbrInt16.Integer; b: Integer): Integer; 
	OPERATOR ^ "+"-(a: NbrInt8.Integer; b: Integer): Integer; 
	OPERATOR ^ "-"-(a, b: Integer): Integer; 
	OPERATOR ^ "-"-(a: Integer; b: NbrInt32.Integer): Integer; 
	OPERATOR ^ "-"-(a: Integer; b: NbrInt16.Integer): Integer; 
	OPERATOR ^ "-"-(a: Integer; b: NbrInt8.Integer): Integer; 
	OPERATOR ^ "-"-(a: NbrInt32.Integer; b: Integer): Integer; 
	OPERATOR ^ "-"-(a: NbrInt16.Integer; b: Integer): Integer; 
	OPERATOR ^ "-"-(a: NbrInt8.Integer; b: Integer): Integer; 
	OPERATOR ^ "*"-(a, b: Integer): Integer; 
	OPERATOR ^ "*"-(a: Integer; b: NbrInt32.Integer): Integer; 
	OPERATOR ^ "*"-(a: Integer; b: NbrInt16.Integer): Integer; 
	OPERATOR ^ "*"-(a: Integer; b: NbrInt8.Integer): Integer; 
	OPERATOR ^ "*"-(a: NbrInt32.Integer; b: Integer): Integer; 
	OPERATOR ^ "*"-(a: NbrInt16.Integer; b: Integer): Integer; 
	OPERATOR ^ "*"-(a: NbrInt8.Integer; b: Integer): Integer; 
	OPERATOR ^ "DIV"-(a, b: Integer): Integer; 
	OPERATOR ^ "DIV"-(a: Integer; b: NbrInt32.Integer): Integer; 
	OPERATOR ^ "DIV"-(a: Integer; b: NbrInt16.Integer): Integer; 
	OPERATOR ^ "DIV"-(a: Integer; b: NbrInt8.Integer): Integer; 
	OPERATOR ^ "DIV"-(a: NbrInt32.Integer; b: Integer): Integer; 
	OPERATOR ^ "DIV"-(a: NbrInt16.Integer; b: Integer): Integer; 
	OPERATOR ^ "DIV"-(a: NbrInt8.Integer; b: Integer): Integer; 
	OPERATOR ^ "MOD"-(a, b: Integer): Integer; 
	OPERATOR ^ "MOD"-(a: Integer; b: NbrInt32.Integer): Integer; 
	OPERATOR ^ "MOD"-(a: Integer; b: NbrInt16.Integer): Integer; 
	OPERATOR ^ "MOD"-(a: Integer; b: NbrInt8.Integer): Integer; 
	OPERATOR ^ "MOD"-(a: NbrInt32.Integer; b: Integer): Integer; 
	OPERATOR ^ "MOD"-(a: NbrInt16.Integer; b: Integer): Integer; 
	OPERATOR ^ "MOD"-(a: NbrInt8.Integer; b: Integer): Integer; 
	PROCEDURE ^ AbsVal(a: Integer): Integer; 
	PROCEDURE ^ Abs*(a: Integer): Integer; 
	PROCEDURE ^ Dec*(VAR a: Integer); 
	PROCEDURE ^ Inc*(VAR a: Integer); 
	PROCEDURE ^ Odd*(a: Integer): BOOLEAN; 
	PROCEDURE ^ Long*(i: NbrInt32.Integer): Integer; 
	PROCEDURE ^ IsInt32*(i: Integer): BOOLEAN; 
	PROCEDURE ^ Short*(h: Integer): NbrInt32.Integer; 
	PROCEDURE ^ Max*(x1, x2: Integer): Integer; 
	PROCEDURE ^ Min*(x1, x2: Integer): Integer; 
	PROCEDURE ^ Sign*(x: Integer): NbrInt8.Integer; 
	PROCEDURE ^ StringToInt*(string: ARRAY OF CHAR; VAR x: Integer); 
	PROCEDURE ^ IntToString*(x: Integer; VAR string: ARRAY OF CHAR); 
	PROCEDURE ^ Load*(R: Streams.Reader; VAR x: Integer); 
	PROCEDURE ^ Store*(W: Streams.Writer; x: Integer); 
BEGIN
END NbrInt64.
