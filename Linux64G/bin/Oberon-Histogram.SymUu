MODULE Histogram IN Oberon;
	IMPORT Display, Objects, Gadgets, Oberon, BasicGadgets, Fonts, Display3, Printer, Printer3, Strings, Reals IN A2, MathL IN A2, Files;
CONST 
	idversion* = \"Histogram 0.1d7"\; 
	Bins = 256; 
	Mems = 256; 
TYPE 
	Histogram* = POINTER TO HistogramDesc; 

	HistogramDesc* = RECORD (Gadgets.FrameDesc)
		count: ARRAY Bins OF LONGINT; 
		nrBins: INTEGER; 
		offs, width, top: LONGREAL; 
		toosmall, toolarge, nans: LONGINT; 
		nrobs, maxcount: LONGINT; 
		prevmax: LONGREAL; 
		adapting: BOOLEAN; 
		moving: BOOLEAN; 
		suspended: BOOLEAN; 
		logtransform: BOOLEAN; 
		diff: BOOLEAN; 
		lastentry: LONGREAL; 
		mem: ARRAY Mems OF LONGREAL; 
		upd: BOOLEAN; 
	END; 

	PROCEDURE ^ IsNaN(x: LONGREAL): BOOLEAN; 
	PROCEDURE ^ NaN(code: INTEGER): LONGREAL; 
	PROCEDURE ^ LongReal(VAR M: Objects.AttrMsg; VAR x: LONGREAL): BOOLEAN; 
	PROCEDURE ^ LongInt(VAR M: Objects.AttrMsg; VAR x: LONGINT): BOOLEAN; 
	PROCEDURE ^ Update*(H: Histogram); 
	PROCEDURE ^ ClearHistCounts(H: Histogram); 
	PROCEDURE ^ ResetCounts*(H: Histogram); 
	PROCEDURE ^ Reset*(H: Histogram); 
	PROCEDURE ^ AddHistCounts(H: Histogram; x: LONGREAL); 
	PROCEDURE ^ GetHistCounts(H: Histogram; VAR nrcounted: LONGINT); 
	PROCEDURE ^ AddPoint*(H: Histogram; x: LONGREAL); 
	PROCEDURE ^ RestoreFrame(H: Histogram; M: Display3.Mask; x, y, w, h: INTEGER); 
	PROCEDURE ^ Dev(x: INTEGER): INTEGER; 
	PROCEDURE ^ PrintFrame(H: Histogram; VAR Msg: Display.DisplayMsg); 
	PROCEDURE ^ FrameAttr(F: Histogram; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ File(F: Histogram; VAR M: Objects.FileMsg); 
	PROCEDURE ^ CopyFrame*(VAR M: Objects.CopyMsg; from, to: Histogram); 
	PROCEDURE ^ FrameHandler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ InitFrame*(F: Histogram; suspended, diff: BOOLEAN); 
	PROCEDURE ^ NewFrame*; 
	PROCEDURE ^ NewSuspendedFrame*; 
	PROCEDURE ^ NewDiffFrame*; 
	PROCEDURE ^ NewSuspendedDiffFrame*; 
BEGIN
END Histogram.
