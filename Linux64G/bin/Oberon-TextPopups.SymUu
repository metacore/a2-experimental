MODULE TextPopups IN Oberon;
	IMPORT Modules, Display, Objects, OPM, OPS, ListRiders, Links, Attributes, Documents, Desktops, Texts, Oberon, Effects, Fonts, Display3, Gadgets, TextDocs, TextGadgets0, TextGadgets, Input, Views, Strings;
CONST 
	times = OPS.times; 
	and = OPS.and; 
	plus = OPS.plus; 
	minus = OPS.minus; 
	eql = OPS.eql; 
	arrow = OPS.arrow; 
	colon = OPS.colon; 
	rparen = OPS.rparen; 
	lparen = OPS.lparen; 
	ident = OPS.ident; 
	semicolon = OPS.semicolon; 
	end = OPS.end; 
	object = OPS.object; 
	record = OPS.record; 
	begin = OPS.begin; 
	const = OPS.const; 
	type = OPS.type; 
	var = OPS.var; 
	procedure = OPS.procedure; 
	eof = OPS.eof; 
	CR = 0DX; 
	TAB = 9X; 
	SPACE = \" "\; 
	LF = 0AX; 
	MaxHistory = 20; 
	MaxHeight = 250; 
	PopupFileName = \"TextPopups.Text"\; 
TYPE 
	MenuItem = POINTER TO MenuItemDesc; 

	MenuItemDesc = RECORD 
		val: ARRAY 128 OF CHAR; 
		link: MenuItem; 
	END; 

	CmdMenuItem = POINTER TO CmdMenuItemDesc; 

	CmdMenuItemDesc = RECORD (MenuItemDesc)
	END; 

	PMarkerMenuItem = POINTER TO PMarkerMenuItemDesc; 

	PMarkerMenuItemDesc = RECORD (MenuItemDesc)
		pos: LONGINT; 
	END; 

	TMarkerMenuItem = POINTER TO TMarkerMenuItemDesc; 

	TMarkerMenuItemDesc = RECORD (MenuItemDesc)
		pos: LONGINT; 
	END; 

	LMarkerMenuItem = POINTER TO LMarkerMenuItemDesc; 

	LMarkerMenuItemDesc = RECORD (MenuItemDesc)
		pos: LONGINT; 
	END; 

	FileMenuItem = POINTER TO FileMenuItemDesc; 

	FileMenuItemDesc = RECORD (MenuItemDesc)
	END; 

	FileHistory = POINTER TO FileHistoryDesc; 

	FileHistoryDesc = RECORD 
		filename: ARRAY 128 OF CHAR; 
		link: FileHistory; 
	END; 
VAR 
	W: Texts.Writer; 
	nofLines, width: INTEGER; 
	itemList, lastItem: MenuItem; 
	doItem: MenuItem; 
	called: BOOLEAN; 
	fileHistory: FileHistory; 
	sections: ARRAY 7 OF ARRAY 14 OF CHAR; 

	PROCEDURE ^ Call(F: TextGadgets.Frame; T: Texts.Text; x, y: INTEGER); 
	PROCEDURE ^ Do*; 
	PROCEDURE ^ AppendToTypeList(VAR list, last: MenuItem; CONST context, name: ARRAY OF CHAR; pos: LONGINT); 
	PROCEDURE ^ ExtractProcTypeNames(T: Texts.Text; VAR lastProc, lastType: MenuItem); 
	PROCEDURE ^ ExtractHistory(nof: INTEGER); 
	PROCEDURE ^ ExtractSections(t: Texts.Text); 
	PROCEDURE ^ ExtractBibtex(t: Texts.Text); 
	PROCEDURE ^ CreateMenuItems(listR: ListRiders.Rider; T: Texts.Text; CONST ext: ARRAY OF CHAR): BOOLEAN; 
	PROCEDURE ^ GetFileExtension(CONST name: ARRAY OF CHAR; VAR ext: ARRAY OF CHAR); 
	PROCEDURE ^ NewList(F: TextGadgets.Frame; D: Documents.Document): Gadgets.Frame; 
	PROCEDURE ^ CalcPlace(VAR x, y, px, py, w, h: INTEGER); 
	PROCEDURE ^ Popup(F: TextGadgets.Frame; x, y: INTEGER; VAR M: Oberon.InputMsg); 
	PROCEDURE ^ InsertIntoHistory(VAR D: Documents.Document); 
	PROCEDURE ^ PopupHandler(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ Install*; 
	PROCEDURE ^ Remove*; 
BEGIN
END TextPopups.
