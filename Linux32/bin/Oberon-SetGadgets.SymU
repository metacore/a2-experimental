MODULE SetGadgets IN Oberon;
	IMPORT BIT IN A2, Files, Strings, Display, Display3, Printer, Printer3, Objects, Effects, Oberon, Gadgets;
CONST 
	SetVersion = 1; 
	FrameVersion = 1; 
	backC = 14; 
	setC = 15; 
	freeC = 12; 
TYPE 
	Set* = POINTER TO SetDesc; 

	SetDesc* = RECORD (Gadgets.ObjDesc)
		val*: SET; 
	END; 

	Frame* = POINTER TO FrameDesc; 

	FrameDesc* = RECORD (Gadgets.FrameDesc)
		val*: SET; 
	END; 

	PROCEDURE ^ IntToSet*(int: SIGNED32; VAR set: SET); 
	PROCEDURE ^ SetToInt*(set: SET; VAR int: SIGNED32); 
	PROCEDURE ^ CopySet*(VAR M: Objects.CopyMsg; from, to: Set); 
	PROCEDURE ^ SetHandler*(obj: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ InitSet*(obj: Set); 
	PROCEDURE ^ NewSet*; 
	PROCEDURE ^ Field(F: Frame; VAR name: ARRAY OF CHAR); 
	PROCEDURE ^ UpdateModel(F: Frame); 
	PROCEDURE ^ SetModel(F: Frame); 
	PROCEDURE ^ HandleAttributes(F: Frame; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ Restore(F: Frame; Q: Display3.Mask; x, y, w, h: SIGNED16); 
	PROCEDURE ^ Print(F: Frame; VAR M: Display.DisplayMsg); 
	PROCEDURE ^ TrackFrame(F: Frame; x, y, w, h: SIGNED16; VAR M: Oberon.InputMsg); 
	PROCEDURE ^ CopyFrame*(VAR M: Objects.CopyMsg; from, to: Frame); 
	PROCEDURE ^ FrameHandle*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ InitFrame*(F: Frame); 
	PROCEDURE ^ NewFrame*; 
BEGIN
END SetGadgets.
