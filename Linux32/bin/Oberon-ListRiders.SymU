MODULE ListRiders IN Oberon;
	IMPORT Objects, Gadgets;
CONST 
	insert* = 0; 
	delete* = 1; 
	state* = 2; 
TYPE 
	Data* = POINTER TO DataDesc; 

	DataDesc* = RECORD 
	END; 

	Bool* = POINTER TO BoolDesc; 

	BoolDesc* = RECORD (DataDesc)
		b*: BOOLEAN; 
	END; 

	Char* = POINTER TO CharDesc; 

	CharDesc* = RECORD (DataDesc)
		c*: CHAR; 
	END; 

	String* = POINTER TO StringDesc; 

	StringDesc* = RECORD (DataDesc)
		s*: ARRAY 256 OF CHAR; 
	END; 

	Int* = POINTER TO IntDesc; 

	IntDesc* = RECORD (DataDesc)
		i*: SIGNED32; 
	END; 

	Real* = POINTER TO RealDesc; 

	RealDesc* = RECORD (DataDesc)
		x*: FLOAT32; 
	END; 

	LReal* = POINTER TO LRealDesc; 

	LRealDesc* = RECORD (DataDesc)
		x*: FLOAT64; 
	END; 

	Method* = POINTER TO MethodDesc; 

	Rider* = POINTER TO RiderDesc; 

	RiderDesc* = RECORD 
		d*: Data; 
		do*: Method; 
		base*: Objects.Object; 
		dsc*, eol*: BOOLEAN; 
	END; 

	MethodDesc* = RECORD 
		Key*: PROCEDURE (R: Rider):SIGNED32; 
		Seek*: PROCEDURE (R: Rider; key: SIGNED32); 
		Pos*: PROCEDURE (R: Rider):SIGNED32; 
		Set*: PROCEDURE (R: Rider; pos: SIGNED32); 
		Write*: PROCEDURE (R: Rider; d: Data); 
		WriteLink*: PROCEDURE (R, linkR: Rider); 
		DeleteLink*: PROCEDURE (R, linkR: Rider); 
		State*: PROCEDURE (R: Rider):SIGNED32; 
		SetState*: PROCEDURE (R: Rider; s: SIGNED32); 
		Desc*: PROCEDURE (R, old: Rider):Rider; 
		GetStamp*: PROCEDURE (R: Rider):SIGNED32; 
		SetStamp*: PROCEDURE (R: Rider; stamp: SIGNED32); 
	END; 

	ConnectMsg* = RECORD (Objects.ObjMsg)
		R*: Rider; 
	END; 

	UpdateMsg* = RECORD (Gadgets.UpdateMsg)
		id*: SIGNED16; 
	END; 
VAR 
	stamp: SIGNED32; 

	PROCEDURE ^ Stamp*(): SIGNED32; 
BEGIN
END ListRiders.
