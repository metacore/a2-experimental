MODULE PartitionEditor;
	IMPORT Modules, Streams, Commands, Strings, PartitionTable := PartitionEditorTable, PartitionEditorComponents, WMGraphics, WMWindowManager, WMMessages, WMRestorable, WMComponents, WMStandardComponents, WMEditors, WMDialogs;
CONST 
	WindowTitle = \"Partition Table Editor"\; 
	WindowWidth = 680; 
	WindowHeight = 140; 
	Grey = LONGINT(3233857791); 
TYPE 
	KillerMsg = OBJECT 
	END KillerMsg; 

	Window* = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		blockNumberEditor, deviceNameEditor: WMEditors.Editor; 
		editor: PartitionEditorComponents.PartitionTableEditor; 
		loadBtn, storeBtn, clearBtn: WMStandardComponents.Button; 
		statusLabel: WMStandardComponents.Label; 
		reader: Streams.StringReader; 

		PROCEDURE ^ GetBlockNumber(VAR blockNumber: LONGINT): BOOLEAN; 
		PROCEDURE ^ HandleButtons(sender, data: ANY); 
		PROCEDURE ^ CreateForm(): WMComponents.VisualComponent; 
		PROCEDURE ^  & New*(context: WMRestorable.Context); 
		PROCEDURE ^ Load(deviceName: ARRAY OF CHAR; block: LONGINT); 
		PROCEDURE ^ Close*; 
		PROCEDURE ^ Resizing*(VAR width, height: SIZE); 
		PROCEDURE ^ HandleChange(changeType: LONGINT; VAR partition: PartitionTable.Partition); 
		PROCEDURE ^ Handle*(VAR x: WMMessages.Message); 
	END Window; 
VAR 
	nofWindows: LONGINT; 

	PROCEDURE ^ GetErrorMessage(CONST string1, devicename: ARRAY OF CHAR; res: WORD; VAR message: ARRAY OF CHAR); 
	PROCEDURE ^ Open*(context: Commands.Context); 
	PROCEDURE ^ Restore*(context: WMRestorable.Context); 
	PROCEDURE ^ IncCount; 
	PROCEDURE ^ DecCount; 
	PROCEDURE ^ Cleanup; 
BEGIN
END PartitionEditor.
