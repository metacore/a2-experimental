MODULE Documents IN Oberon;
	IMPORT Texts, Objects, Display, Attributes, Links, Gadgets, Modules, Files, Display3, Effects, Oberon, Fonts, Strings, Out, Input;
CONST 
	MaxDocTypes = 48; 
TYPE 
	Document* = POINTER TO DocumentDesc; 

	DocumentDesc* = RECORD (Gadgets.FrameDesc)
		name*: ARRAY 128 OF CHAR; 
		Load*: PROCEDURE (D: Document); 
		Store*: PROCEDURE (D: Document); 
		time: SIGNED32; 
	END; 

	LocateMsg* = RECORD (Display.FrameMsg)
		doc*: Document; 
		X*, Y*: SIGNED16; 
	END; 
VAR 
	Id*: SIGNED16; 
	historyHook*: PROCEDURE (VAR D: Document); 
	reg: SIGNED16; 
	DocExt: ARRAY MaxDocTypes OF ARRAY 32 OF CHAR; 
	DocNewProc: ARRAY MaxDocTypes OF ARRAY 64 OF CHAR; 
	DocService: ARRAY MaxDocTypes OF BOOLEAN; 
	errMsg*: ARRAY 256 OF CHAR; 

	PROCEDURE ^ LoadAttachments*(VAR R: Files.Rider; VAR attr: Attributes.Attr; VAR link: Links.Link); 
	PROCEDURE ^ StoreAttachments*(VAR R: Files.Rider; attr: Attributes.Attr; link: Links.Link); 
	PROCEDURE ^ SplitName(VAR name, MName, PName: ARRAY OF CHAR); 
	PROCEDURE ^ generic(name, newproc: ARRAY OF CHAR; VAR loaderror: BOOLEAN): Document; 
	PROCEDURE ^ Generic(name: ARRAY OF CHAR; VAR loaderror: BOOLEAN): Document; 
	PROCEDURE ^ Cap(ch: CHAR): CHAR; 
	PROCEDURE ^ Open*(name: ARRAY OF CHAR): Document; 
	PROCEDURE ^ Register(ext, newproc: ARRAY OF CHAR; service: BOOLEAN); 
	PROCEDURE ^ RegisterStandardTypes(section: ARRAY OF CHAR; service: BOOLEAN); 
	PROCEDURE ^ SetMask(F: Display.Frame; M: Display3.Mask); 
	PROCEDURE ^ SetMainMask(F: Document); 
	PROCEDURE ^ ToMain(F: Document; ox, oy: SIGNED16; VAR M: Display.FrameMsg); 
	PROCEDURE ^ Absolute(dlink: Objects.Object): BOOLEAN; 
	PROCEDURE ^ AdjustDocument(F: Document; VAR M: Display.ModifyMsg); 
	PROCEDURE ^ AdjustChildDocument(F: Document; VAR M: Display.ModifyMsg); 
	PROCEDURE ^ check(F: Document); 
	PROCEDURE ^ RestoreDocument(F: Document; R: Display3.Mask; ox, oy, x, y, w, h: SIGNED16; VAR M: Display.DisplayMsg); 
	PROCEDURE ^ Copy*(VAR M: Objects.CopyMsg; from, to: Document); 
	PROCEDURE ^ DocumentAttr(F: Document; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ Neutralize(F: Document); 
	PROCEDURE ^ HandleSelect(F: Document; VAR M: Oberon.InputMsg); 
	PROCEDURE ^ Handler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ New*; 
	PROCEDURE ^ Init*(D: Document; main: Gadgets.Frame); 
	PROCEDURE ^ MarkedDoc*(): Document; 
	PROCEDURE ^ InitM; 
BEGIN
END Documents.
