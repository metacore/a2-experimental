MODULE Clocks IN Oberon;
	IMPORT Input, Dates, Strings, Display, Display3, Printer, Printer3, Texts, Objects, Gadgets, Oberon, Fonts, Math IN A2, Files, Modules;
CONST 
	tickId* = 0; 
	alarmId* = 1; 
	Minute = 60; 
	Hour = (60 * Minute); 
	Day = (24 * Hour); 
	digital = 0; 
	calendar = 1; 
	new = 2; 
TYPE 
	Alarm* = POINTER TO AlarmDesc; 

	AlarmHandler* = PROCEDURE (alarm: Alarm; VAR handled: BOOLEAN); 

	AlarmDesc* = RECORD 
		at: SIGNED32; 
		handle*: AlarmHandler; 
		handled: BOOLEAN; 
		next: Alarm; 
	END; 

	EnumAlarmHandler* = PROCEDURE (alarm: Alarm; t, d: SIGNED32; VAR handled: BOOLEAN); 

	TickMsg* = RECORD (Display.FrameMsg)
		id*: SIGNED16; 
		date*, time*: SIGNED32; 
	END; 

	Clock* = POINTER TO ClockDesc; 

	ClockDesc* = RECORD (Gadgets.FrameDesc)
		date, time, timeDiff: SIGNED32; 
		state0: SET; 
		col: SIGNED16; 
	END; 
VAR 
	alarms: BOOLEAN; 
	firstAlarm: Alarm; 
	lastTask, lastAlarm, lastTick, zeroY: SIGNED32; 
	task: Oberon.Task; 
	W: Texts.Writer; 
	font: ARRAY 3 OF Fonts.Font; 

	PROCEDURE ^ ToLinearForm(t, d: SIGNED32): SIGNED32; 
	PROCEDURE ^ ToOberonForm(time: SIGNED32; VAR t, d: SIGNED32); 
	PROCEDURE ^ GetClock(): SIGNED32; 
	PROCEDURE ^ AlarmTask(me: Oberon.Task); 
	PROCEDURE ^ InstallAlarm*(alarm: Alarm; time, date: SIGNED32; handle: AlarmHandler); 
	PROCEDURE ^ RemoveAlarm*(alarm: Alarm); 
	PROCEDURE ^ ShowAlarms*(enum: EnumAlarmHandler); 
	PROCEDURE ^ ClockAttr(F: Clock; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ Line2(M: Display3.Mask; ang: SIGNED16; x0, y0, r1, r2, color: SIGNED16); 
	PROCEDURE ^ RestoreClock(F: Clock; M: Display3.Mask; x, y, w, h: SIGNED16; alarm: BOOLEAN); 
	PROCEDURE ^ PrintClock(F: Clock; VAR M: Display.DisplayMsg); 
	PROCEDURE ^ CopyClock*(VAR M: Objects.CopyMsg; from, to: Clock); 
	PROCEDURE ^ ClockHandler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ InsertDate*; 
	PROCEDURE ^ InsertTime*; 
	PROCEDURE ^ Init(F: Clock); 
	PROCEDURE ^ NewClock*; 
	PROCEDURE ^ NewDigiClock*; 
	PROCEDURE ^ NewCalendar*; 
	PROCEDURE ^ FreeMod; 
BEGIN
END Clocks.
