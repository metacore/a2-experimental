MODULE Gfx IN Oberon;
	IMPORT Math IN A2, Texts, Oberon, GfxMatrix, GfxImages, GfxPaths, GfxFonts;
CONST 
	Version = \"Gfx 1.74/eos 22.06.2000"\; 
	Record* = 0; 
	Fill* = 1; 
	Clip* = 2; 
	Stroke* = 3; 
	EvenOdd* = 4; 
	InPath* = 5; 
	InSubpath* = 6; 
	MaxDashPatSize* = 8; 
	NoJoin* = 0; 
	MiterJoin* = 1; 
	BevelJoin* = 2; 
	RoundJoin* = 3; 
	NoCap* = 0; 
	ButtCap* = 1; 
	SquareCap* = 2; 
	RoundCap* = 3; 
	fillColPat* = 0; 
	strokeColPat* = 1; 
	lineWidth* = 2; 
	dashPat* = 3; 
	capStyle* = 4; 
	joinStyle* = 5; 
	styleLimit* = 6; 
	flatness* = 7; 
	font* = 8; 
	ctm* = 9; 
	clip* = 10; 
	strokeAttr* = {strokeColPat .. styleLimit}; 
	attr* = {fillColPat .. font}; 
	all* = (attr + {ctm, clip}); 
TYPE 
	Context* = POINTER TO ContextDesc; 

	Color* = RECORD 
		r*, g*, b*: SIGNED16; 
	END; 

	Pattern* = POINTER TO PatternDesc; 

	PatternDesc* = RECORD 
		img*: GfxImages.Image; 
		px*, py*: FLOAT32; 
	END; 

	JoinStyle* = SIGNED8; 

	CapStyle* = SIGNED8; 

	ClipArea* = POINTER TO ClipAreaDesc; 

	ClipAreaDesc* = RECORD 
	END; 

	Methods* = POINTER TO MethodBlock; 

	MethodBlock* = RECORD 
		reset*: PROCEDURE (ctxt: Context); 
		resetCTM*: PROCEDURE (ctxt: Context); 
		setCTM*: PROCEDURE (ctxt: Context; VAR mat: GfxMatrix.Matrix); 
		translate*: PROCEDURE (ctxt: Context; dx, dy: FLOAT32); 
		scale*: PROCEDURE (ctxt: Context; sx, sy: FLOAT32); 
		rotate*: PROCEDURE (ctxt: Context; sin, cos: FLOAT32); 
		concat*: PROCEDURE (ctxt: Context; VAR mat: GfxMatrix.Matrix); 
		resetClip*: PROCEDURE (ctxt: Context); 
		getClipRect*: PROCEDURE (ctxt: Context; VAR llx, lly, urx, ury: FLOAT32); 
		getClip*: PROCEDURE (ctxt: Context):ClipArea; 
		setClip*: PROCEDURE (ctxt: Context; clip: ClipArea); 
		setStrokeColor*: PROCEDURE (ctxt: Context; color: Color); 
		setStrokePattern*: PROCEDURE (ctxt: Context; pat: Pattern); 
		setFillColor*: PROCEDURE (ctxt: Context; color: Color); 
		setFillPattern*: PROCEDURE (ctxt: Context; pat: Pattern); 
		setLineWidth*: PROCEDURE (ctxt: Context; width: FLOAT32); 
		setDashPattern*: PROCEDURE (ctxt: Context; VAR on, off: ARRAY OF FLOAT32; len: SIGNED32; phase: FLOAT32); 
		setCapStyle*: PROCEDURE (ctxt: Context; style: CapStyle); 
		setJoinStyle*: PROCEDURE (ctxt: Context; style: JoinStyle); 
		setStyleLimit*: PROCEDURE (ctxt: Context; limit: FLOAT32); 
		setFlatness*: PROCEDURE (ctxt: Context; flatness: FLOAT32); 
		setFont*: PROCEDURE (ctxt: Context; font: GfxFonts.Font); 
		getWidth*: PROCEDURE (ctxt: Context; VAR str: ARRAY OF CHAR; VAR dx, dy: FLOAT32); 
		begin*: PROCEDURE (ctxt: Context; mode: SET); 
		end*: PROCEDURE (ctxt: Context); 
		enter*: PROCEDURE (ctxt: Context; x, y, dx, dy: FLOAT32); 
		exit*: PROCEDURE (ctxt: Context; dx, dy: FLOAT32); 
		close*: PROCEDURE (ctxt: Context); 
		line*: PROCEDURE (ctxt: Context; x, y: FLOAT32); 
		arc*: PROCEDURE (ctxt: Context; x, y, x0, y0, x1, y1, x2, y2: FLOAT32); 
		bezier*: PROCEDURE (ctxt: Context; x, y, x1, y1, x2, y2: FLOAT32); 
		show*: PROCEDURE (ctxt: Context; x, y: FLOAT32; VAR str: ARRAY OF CHAR); 
		flatten*: PROCEDURE (ctxt: Context); 
		outline*: PROCEDURE (ctxt: Context); 
		render*: PROCEDURE (ctxt: Context; mode: SET); 
		rect*: PROCEDURE (ctxt: Context; x0, y0, x1, y1: FLOAT32); 
		ellipse*: PROCEDURE (ctxt: Context; x, y, rx, ry: FLOAT32); 
		image*: PROCEDURE (ctxt: Context; x, y: FLOAT32; img: GfxImages.Image; VAR filter: GfxImages.Filter); 
		newPattern*: PROCEDURE (ctxt: Context; img: GfxImages.Image; px, py: FLOAT32):Pattern; 
	END; 

	ContextDesc* = RECORD 
		do*: Methods; 
		mode*: SET; 
		path*: GfxPaths.Path; 
		cpx*, cpy*: FLOAT32; 
		ctm*: GfxMatrix.Matrix; 
		cam*: GfxMatrix.Matrix; 
		strokeCol*, fillCol*: Color; 
		strokePat*, fillPat*: Pattern; 
		lineWidth*: FLOAT32; 
		dashPatOn*, dashPatOff*: ARRAY MaxDashPatSize OF FLOAT32; 
		dashPatLen*: SIGNED32; 
		dashPhase*: FLOAT32; 
		dashPeriod*: FLOAT32; 
		capStyle*: CapStyle; 
		joinStyle*: JoinStyle; 
		styleLimit*: FLOAT32; 
		flatness*: FLOAT32; 
		font*: GfxFonts.Font; 
	END; 

	State* = RECORD 
		saved: SET; 
		strokeCol, fillCol: Color; 
		strokePat, fillPat: Pattern; 
		lineWidth: FLOAT32; 
		dashPatOn, dashPatOff: ARRAY MaxDashPatSize OF FLOAT32; 
		dashPatLen: SIGNED32; 
		dashPhase: FLOAT32; 
		capStyle: CapStyle; 
		joinStyle: JoinStyle; 
		styleLimit: FLOAT32; 
		flatness: FLOAT32; 
		font: GfxFonts.Font; 
		ctm: GfxMatrix.Matrix; 
		clip: ClipArea; 
	END; 

	PathData = RECORD (GfxPaths.EnumData)
		path: GfxPaths.Path; 
	END; 
VAR 
	Black*, White*, Red*, Green*, Blue*, Cyan*, Magenta*, Yellow*, LGrey*, MGrey*, DGrey*: Color; 
	DefaultCap*: CapStyle; 
	DefaultJoin*: JoinStyle; 
	DashPath: GfxPaths.Path; 
	TmpPath: GfxPaths.Path; 
	W: Texts.Writer; 

	PROCEDURE ^ Reset*(ctxt: Context); 
	PROCEDURE ^ Init*(ctxt: Context); 
	PROCEDURE ^ Save*(ctxt: Context; elems: SET; VAR state: State); 
	PROCEDURE ^ Restore*(ctxt: Context; state: State); 
	PROCEDURE ^ ResetCTM*(ctxt: Context); 
	PROCEDURE ^ SetCTM*(ctxt: Context; VAR mat: GfxMatrix.Matrix); 
	PROCEDURE ^ Translate*(ctxt: Context; dx, dy: FLOAT32); 
	PROCEDURE ^ Scale*(ctxt: Context; sx, sy: FLOAT32); 
	PROCEDURE ^ ScaleAt*(ctxt: Context; sx, sy, x, y: FLOAT32); 
	PROCEDURE ^ Rotate*(ctxt: Context; sin, cos: FLOAT32); 
	PROCEDURE ^ RotateAt*(ctxt: Context; sin, cos, x, y: FLOAT32); 
	PROCEDURE ^ Concat*(ctxt: Context; VAR mat: GfxMatrix.Matrix); 
	PROCEDURE ^ ResetClip*(ctxt: Context); 
	PROCEDURE ^ GetClipRect*(ctxt: Context; VAR llx, lly, urx, ury: FLOAT32); 
	PROCEDURE ^ GetClip*(ctxt: Context): ClipArea; 
	PROCEDURE ^ SetClip*(ctxt: Context; clip: ClipArea); 
	PROCEDURE ^ SetStrokeColor*(ctxt: Context; color: Color); 
	PROCEDURE ^ SetStrokePattern*(ctxt: Context; pat: Pattern); 
	PROCEDURE ^ SetFillColor*(ctxt: Context; color: Color); 
	PROCEDURE ^ SetFillPattern*(ctxt: Context; pat: Pattern); 
	PROCEDURE ^ SetLineWidth*(ctxt: Context; width: FLOAT32); 
	PROCEDURE ^ SetDashPattern*(ctxt: Context; VAR on, off: ARRAY OF FLOAT32; len: SIGNED32; phase: FLOAT32); 
	PROCEDURE ^ SetDashArray*(ctxt: Context; VAR on, off: ARRAY OF FLOAT32; len: SIGNED32); 
	PROCEDURE ^ SetCapStyle*(ctxt: Context; style: CapStyle); 
	PROCEDURE ^ SetJoinStyle*(ctxt: Context; style: JoinStyle); 
	PROCEDURE ^ SetStyleLimit*(ctxt: Context; limit: FLOAT32); 
	PROCEDURE ^ SetFlatness*(ctxt: Context; flatness: FLOAT32); 
	PROCEDURE ^ SetFont*(ctxt: Context; font: GfxFonts.Font); 
	PROCEDURE ^ SetFontName*(ctxt: Context; fontname: ARRAY OF CHAR; size: SIGNED16); 
	PROCEDURE ^ GetStringWidth*(ctxt: Context; str: ARRAY OF CHAR; VAR dx, dy: FLOAT32); 
	PROCEDURE ^ Begin*(ctxt: Context; mode: SET); 
	PROCEDURE ^ End*(ctxt: Context); 
	PROCEDURE ^ MoveTo*(ctxt: Context; x, y: FLOAT32); 
	PROCEDURE ^ Enter*(ctxt: Context; x, y, dx, dy: FLOAT32); 
	PROCEDURE ^ Exit*(ctxt: Context; dx, dy: FLOAT32); 
	PROCEDURE ^ Close*(ctxt: Context); 
	PROCEDURE ^ LineTo*(ctxt: Context; x, y: FLOAT32); 
	PROCEDURE ^ ArcTo*(ctxt: Context; x, y, x0, y0, x1, y1, x2, y2: FLOAT32); 
	PROCEDURE ^ BezierTo*(ctxt: Context; x, y, x1, y1, x2, y2: FLOAT32); 
	PROCEDURE ^ ShowAt*(ctxt: Context; x, y: FLOAT32; str: ARRAY OF CHAR); 
	PROCEDURE ^ Show*(ctxt: Context; str: ARRAY OF CHAR); 
	PROCEDURE ^ Flatten*(ctxt: Context); 
	PROCEDURE ^ EnumPathElem(VAR data: GfxPaths.EnumData); 
	PROCEDURE ^ GetFlattenedPath*(ctxt: Context; path: GfxPaths.Path); 
	PROCEDURE ^ EnterCapStyle*(ctxt: Context; x, y, dx, dy: FLOAT32; path: GfxPaths.Path); 
	PROCEDURE ^ AddCapStyle*(ctxt: Context; x, y, dx, dy: FLOAT32; path: GfxPaths.Path); 
	PROCEDURE ^ ExitCapStyle*(ctxt: Context; x, y, dx, dy: FLOAT32; path: GfxPaths.Path); 
	PROCEDURE ^ ExceedsLimit*(ctxt: Context; hx, hy: FLOAT32): BOOLEAN; 
	PROCEDURE ^ EnterJoinStyle*(ctxt: Context; x, y, idx, idy, hx, hy, odx, ody: FLOAT32; path: GfxPaths.Path); 
	PROCEDURE ^ AddJoinStyle*(ctxt: Context; x, y, idx, idy, hx, hy, odx, ody: FLOAT32; path: GfxPaths.Path); 
	PROCEDURE ^ ExitJoinStyle*(ctxt: Context; x, y, idx, idy, hx, hy, odx, ody: FLOAT32; path: GfxPaths.Path); 
	PROCEDURE ^ Outline*(ctxt: Context); 
	PROCEDURE ^ GetNormVector*(x, y, len: FLOAT32; VAR nx, ny: FLOAT32); 
	PROCEDURE ^ GetHalfAxisVector*(idx, idy, odx, ody: FLOAT32; VAR hx, hy: FLOAT32); 
	PROCEDURE ^ AddEnterJoinStyle(ctxt: Context; x, y, hx, hy, odx, ody: FLOAT32; path: GfxPaths.Path); 
	PROCEDURE ^ AddExitJoinStyle(ctxt: Context; x, y, idx, idy, hx, hy: FLOAT32; path: GfxPaths.Path); 
	PROCEDURE ^ GetPolyOutline(ctxt: Context; VAR x, y: ARRAY OF FLOAT32; n: SIGNED32; dxi, dyi, dxo, dyo: FLOAT32; dst: GfxPaths.Path); 
	PROCEDURE ^ GetStrokeOutline(ctxt: Context; VAR scan: GfxPaths.Scanner; dst: GfxPaths.Path); 
	PROCEDURE ^ GetDashOffsets*(ctxt: Context; offset: FLOAT32; VAR beg, end, next: FLOAT32; VAR idx: SIGNED32); 
	PROCEDURE ^ GetDashOutline(ctxt: Context; VAR scan: GfxPaths.Scanner; dst: GfxPaths.Path); 
	PROCEDURE ^ GetOutline*(ctxt: Context; dst: GfxPaths.Path); 
	PROCEDURE ^ Render*(ctxt: Context; mode: SET); 
	PROCEDURE ^ DrawPath*(ctxt: Context; path: GfxPaths.Path; mode: SET); 
	PROCEDURE ^ DrawLine*(ctxt: Context; x0, y0, x1, y1: FLOAT32; mode: SET); 
	PROCEDURE ^ DrawArc*(ctxt: Context; x, y, r, start, end: FLOAT32; mode: SET); 
	PROCEDURE ^ DrawRect*(ctxt: Context; x0, y0, x1, y1: FLOAT32; mode: SET); 
	PROCEDURE ^ DrawCircle*(ctxt: Context; x, y, r: FLOAT32; mode: SET); 
	PROCEDURE ^ DrawEllipse*(ctxt: Context; x, y, rx, ry: FLOAT32; mode: SET); 
	PROCEDURE ^ DrawStringAt*(ctxt: Context; x, y: FLOAT32; str: ARRAY OF CHAR); 
	PROCEDURE ^ DrawString*(ctxt: Context; str: ARRAY OF CHAR); 
	PROCEDURE ^ DrawImageAt*(ctxt: Context; x, y: FLOAT32; img: GfxImages.Image; VAR filter: GfxImages.Filter); 
	PROCEDURE ^ NewPattern*(ctxt: Context; img: GfxImages.Image; px, py: FLOAT32): Pattern; 
	PROCEDURE ^ DefResetContext*(ctxt: Context); 
	PROCEDURE ^ DefSetCTM*(ctxt: Context; VAR mat: GfxMatrix.Matrix); 
	PROCEDURE ^ DefTranslate*(ctxt: Context; dx, dy: FLOAT32); 
	PROCEDURE ^ DefScale*(ctxt: Context; sx, sy: FLOAT32); 
	PROCEDURE ^ DefRotate*(ctxt: Context; sin, cos: FLOAT32); 
	PROCEDURE ^ DefConcat*(ctxt: Context; VAR mat: GfxMatrix.Matrix); 
	PROCEDURE ^ DefSetStrokeColor*(ctxt: Context; color: Color); 
	PROCEDURE ^ DefSetStrokePattern*(ctxt: Context; pat: Pattern); 
	PROCEDURE ^ DefSetFillColor*(ctxt: Context; color: Color); 
	PROCEDURE ^ DefSetFillPattern*(ctxt: Context; pat: Pattern); 
	PROCEDURE ^ DefSetLineWidth*(ctxt: Context; width: FLOAT32); 
	PROCEDURE ^ DefSetDashPattern*(ctxt: Context; VAR on, off: ARRAY OF FLOAT32; len: SIGNED32; phase: FLOAT32); 
	PROCEDURE ^ DefSetCapStyle*(ctxt: Context; style: CapStyle); 
	PROCEDURE ^ DefSetJoinStyle*(ctxt: Context; style: JoinStyle); 
	PROCEDURE ^ DefSetStyleLimit*(ctxt: Context; limit: FLOAT32); 
	PROCEDURE ^ DefSetFlatness*(ctxt: Context; flatness: FLOAT32); 
	PROCEDURE ^ DefSetFont*(ctxt: Context; font: GfxFonts.Font); 
	PROCEDURE ^ DefGetStringWidth*(ctxt: Context; VAR str: ARRAY OF CHAR; VAR dx, dy: FLOAT32); 
	PROCEDURE ^ DefFlatten*(ctxt: Context); 
	PROCEDURE ^ DefOutline*(ctxt: Context); 
	PROCEDURE ^ DefRect*(ctxt: Context; x0, y0, x1, y1: FLOAT32); 
	PROCEDURE ^ DefEllipse*(ctxt: Context; x, y, rx, ry: FLOAT32); 
	PROCEDURE ^ DefNewPattern*(ctxt: Context; img: GfxImages.Image; px, py: FLOAT32): Pattern; 
	PROCEDURE ^ InitColors; 
BEGIN
END Gfx.
