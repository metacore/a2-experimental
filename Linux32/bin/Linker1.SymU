MODULE Linker1;
	IMPORT SYSTEM, Streams, Files, Commands, KernelLog := Linker0, Heaps := Linker0, Modules := Linker0, Linker0;
CONST 
	Ok* = 0; 
	FileNotFound = 1; 
	TagInvalid = 2; 
	FileCorrupt = 3; 
	FileTooShort = 4; 
	IncompatibleImport = 5; 
	AddressSize = SIZEOF(ADDRESS); 
	FileTag = 0BBX; 
	NoZeroCompress = 0ADX; 
	FileVersion = 0B1X; 
	FileVersionOC = 0B2X; 
	CurrentVersion = 0B4X; 
	MaxStructs = 1024; 
	EUEnd = 0; 
	EURecord = 1; 
	EUobjScope = 0; 
	EUrecScope = 1; 
	EUerrScope =  -1; 
	EUProcFlagBit = 31; 
	Sentinel = LONGINT(4294967295); 
TYPE 
	ObjHeader = RECORD 
		entries, commands, pointers, types, modules, links, dataLinks: LONGINT; 
		codeSize, dataSize, refSize, constSize, exTableLen, procs, maxPtrs, crc: LONGINT; 
		staticTdSize: LONGINT; 
		name: Modules.Name; 
	END; 

	DataLinkRec = RECORD 
		mod: LONGINT; 
		entry: LONGINT; 
		fixups: LONGINT; 
		ofs: POINTER TO ARRAY OF SIZE; 
	END; 

	LinkRec = RECORD 
		mod: LONGINT; 
		entry: LONGINT; 
		link: SIZE; 
	END; 

	TypeRec = RECORD 
		init: BOOLEAN; 
		entry, methods, inhMethods, baseMod: LONGINT; 
		baseEntry: ADDRESS; 
	END; 
VAR 
	trace: BOOLEAN; 

	PROCEDURE ^ ReadHeader(r: Streams.Reader; VAR h: ObjHeader; VAR res: LONGINT); 
	PROCEDURE ^ ReadString8(r: Streams.Reader; VAR str: ARRAY OF CHAR); 
	PROCEDURE ^ AllocateModule(m: Modules.Module; h: ObjHeader); 
	PROCEDURE ^ ReadEntryBlock(r: Streams.Reader; m: Modules.Module): BOOLEAN; 
	PROCEDURE ^ ReadCommandBlock(r: Streams.Reader; m: Modules.Module): BOOLEAN; 
	PROCEDURE ^ ReadPointerBlock(r: Streams.Reader; m: Modules.Module): BOOLEAN; 
	PROCEDURE ^ ReadImportBlock(r: Streams.Reader; m: Modules.Module; VAR res: LONGINT; VAR msg: ARRAY OF CHAR): BOOLEAN; 
	PROCEDURE ^ ReadDataLinkBlock(r: Streams.Reader; dataLinks: LONGINT; VAR d: ARRAY OF DataLinkRec): BOOLEAN; 
	PROCEDURE ^ ReadLinkBlock(r: Streams.Reader; links, entries: LONGINT; VAR l: ARRAY OF LinkRec; VAR f: ARRAY OF LONGINT; VAR caseTableSize: LONGINT): BOOLEAN; 
	PROCEDURE ^ ReadConstBlock(r: Streams.Reader; m: Modules.Module; h: ObjHeader): BOOLEAN; 
	PROCEDURE ^ ReadExportBlock(r: Streams.Reader; m: Modules.Module): BOOLEAN; 
	PROCEDURE ^ ReadCodeBlock(r: Streams.Reader; m: Modules.Module): BOOLEAN; 
	PROCEDURE ^ ReadUseBlock(r: Streams.Reader; m: Modules.Module; VAR dataLink: ARRAY OF DataLinkRec; VAR res: LONGINT; VAR msg: ARRAY OF CHAR): BOOLEAN; 
	PROCEDURE ^ ReadTypeBlock(r: Streams.Reader; m: Modules.Module; VAR type: ARRAY OF TypeRec): BOOLEAN; 
	PROCEDURE ^ ReadRefBlock(r: Streams.Reader; m: Modules.Module): BOOLEAN; 
	PROCEDURE ^ FixupGlobals(m: Modules.Module; VAR dataLink: ARRAY OF DataLinkRec); 
	PROCEDURE ^ FixupLinks(m: Modules.Module; VAR link: ARRAY OF LinkRec; VAR fixupCounts: ARRAY OF LONGINT; caseTableSize: LONGINT; VAR res: LONGINT); 
	PROCEDURE ^ FixupCommands(m: Modules.Module); 
	PROCEDURE ^ InitType(m: Modules.Module; VAR type: ARRAY OF TypeRec; i: LONGINT); 
	PROCEDURE ^ ReadExTableBlock(r: Streams.Reader; m: Modules.Module): BOOLEAN; 
	PROCEDURE ^ ReadPtrsInProcs(r: Streams.Reader; m: Modules.Module): BOOLEAN; 
	PROCEDURE ^ LoadObj*(name, fileName: ARRAY OF CHAR; VAR res: LONGINT; VAR msg: ARRAY OF CHAR): Modules.Module; 
BEGIN
END Linker1.
