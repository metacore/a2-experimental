MODULE PartitionEditorComponents;
	IMPORT Strings, PartitionTable := PartitionEditorTable, WMGraphics, WMRectangles, WMComponents, WMStandardComponents, WMEditors;
CONST 
	NoChangeFound = 0; 
	SizeChanged* = PartitionTable.SizeChanged; 
	StartLbaChanged* = PartitionTable.StartLbaChanged; 
	StartChsChanged* = PartitionTable.StartChsChanged; 
	EndLbaChanged* = PartitionTable.EndLbaChanged; 
	EndChsChanged* = PartitionTable.EndChsChanged; 
	LbaEditorWidth = 100; 
	ChsEditorWidth = 40; 
	LineHeight = 20; 
TYPE 
	BlockEditor = OBJECT {EXCLUSIVE} (WMComponents.VisualComponent)
	VAR 
		lbaEditor: WMEditors.Editor; 
		cylinderEditor, headEditor, sectorEditor: WMEditors.Editor; 

		PROCEDURE ^ Set(block: PartitionTable.Block); 
		PROCEDURE ^ Get(): PartitionTable.Block; 
		PROCEDURE ^ Clear; 
		PROCEDURE ^ GetTitle(CONST caption: ARRAY OF CHAR): WMComponents.VisualComponent; 
		PROCEDURE ^ GetLegend(): WMComponents.VisualComponent; 
		PROCEDURE ^  & Init*; 
	END BlockEditor; 

	PartitionEditor = OBJECT {EXCLUSIVE} (WMComponents.VisualComponent)
	VAR 
		typeEditor, flagEditor: WMEditors.Editor; 
		startBlock, endBlock: BlockEditor; 
		sizeEditor: WMEditors.Editor; 

		PROCEDURE ^ Set(partition: PartitionTable.Partition); 
		PROCEDURE ^ Get(): PartitionTable.Partition; 
		PROCEDURE ^ Clear; 
		PROCEDURE ^ GetTitle(): WMComponents.VisualComponent; 
		PROCEDURE ^ GetLegend(): WMComponents.VisualComponent; 
		PROCEDURE ^  & Init*; 
	END PartitionEditor; 

	ChangeHandler* = PROCEDURE {DELEGATE}(changeType: SIGNED32; VAR partition: PartitionTable.Partition); 

	PartitionTableEditor* = OBJECT {EXCLUSIVE} (WMComponents.VisualComponent)
	VAR 
		partitionEditors: ARRAY 4 OF PartitionEditor; 
		partitionTable: PartitionTable.PartitionTable; 
		changeHandler*: ChangeHandler; 

		PROCEDURE ^ Set*(CONST partitionTable: PartitionTable.PartitionTable); 
		PROCEDURE ^ Get*(): PartitionTable.PartitionTable; 
		PROCEDURE ^ Discard*; 
		PROCEDURE ^ Clear*; 
		PROCEDURE ^ HandleOnEnter(sender, data: ANY); 
		PROCEDURE ^ RegisterOnEnterHandlers; 
		PROCEDURE ^  & Init*; 
	END PartitionTableEditor; 

	PROCEDURE ^ CreateLabel(VAR label: WMStandardComponents.Label; CONST caption: ARRAY OF CHAR; width: SIGNED32); 
	PROCEDURE ^ CreateEditor(VAR editor: WMEditors.Editor; width: SIGNED32); 
BEGIN
END PartitionEditorComponents.
