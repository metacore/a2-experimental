MODULE WMModuleState;
	IMPORT SYSTEM, Streams, Modules, TextUtilities, WMComponents, WMEditors, WMGraphics, WMStandardComponents, WMDialogs, WMWindowManager, Commands, WMRectangles, Kernel;
CONST 
	MaxString = 64; 
	MaxArray = 10; 
	RefreshOff = \"Refresh is off"\; 
	RefreshOn = \"Refresh is on"\; 
TYPE 
	Bytes = Modules.Bytes; 

	StateWindow = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		tw-: TextUtilities.TextWriter; 
		panel: WMStandardComponents.Panel; 
		out-: WMEditors.Editor; 
		open: BOOLEAN; 
		refresh: WMStandardComponents.Button; 
		refreshOn: BOOLEAN; 
		timer: Kernel.Timer; 
		module: Modules.Module; 
		interval: LONGINT; 
		autorefresh: WMStandardComponents.Checkbox; 

		PROCEDURE ^  & New*(title: ARRAY OF CHAR; interval: LONGINT; name: Modules.Name); 
		PROCEDURE ^ Close*; 
		PROCEDURE ^ ClearText(sender, data: ANY); 
		PROCEDURE ^ Load(sender, data: ANY); 
		PROCEDURE ^ OutState(name: Modules.Name); 
		PROCEDURE ^ RefreshSwitch(sender, data: ANY); 
		PROCEDURE ^ Refresh(sender, data: ANY); 
		PROCEDURE ^ SetInterval*(interval: LONGINT); 
		PROCEDURE ^ Variables(refs: Bytes; i: LONGINT; base: ADDRESS; w: Streams.Writer); 
		PROCEDURE ^ FindProc(refs: Bytes; ofs: ADDRESS): LONGINT; 
		PROCEDURE ^ WriteProc(mod: Modules.Module; pc, fp: ADDRESS; VAR refs: Bytes; VAR refpos: LONGINT; VAR base: ADDRESS; w: Streams.Writer); 
		PROCEDURE ^ GetNum(refs: Bytes; VAR i, num: LONGINT); 
	BEGIN{ACTIVE} 
	END StateWindow; 

	WinCollection = POINTER TO ARRAY OF StateWindow; 
VAR 
	stateWins: WinCollection; 
	nrWins: LONGINT; 

	PROCEDURE ^ Remove(stateWin: StateWindow); 
	PROCEDURE ^ Open*(context: Commands.Context); 
BEGIN
END WMModuleState.
