MODULE IMAPUtilities;
	IMPORT Dates, Strings, Classes := TFClasses, Streams, KernelLog, UTF8Strings, Texts, TextUtilities, WMEditors;
CONST 
	CR = 0DX; 
	LF = 0AX; 
	SP = 32; 
TYPE 
	String = Strings.String; 

	Address* = POINTER TO RECORD 
		realName*: String; 
		namePart*: String; 
		domainPart*: String; 
	END; 
VAR 
	base64Table: ARRAY 128 OF SIGNED32; 
	index: SIGNED32; 

	PROCEDURE ^ ParseAddresses*(string: String; VAR addresses: Classes.List); 
	PROCEDURE ^ AddressesToString*(list: Classes.List; VAR string: String); 
	PROCEDURE ^ AddressToString*(address: Address; VAR string: String); 
	PROCEDURE ^ StringLength*(CONST string: ARRAY OF CHAR): SIZE; 
	PROCEDURE ^ StringCopy*(VAR s: ARRAY OF CHAR; index, count: SIZE; VAR result: ARRAY OF CHAR); 
	PROCEDURE ^ StringContains*(string, subString: String): BOOLEAN; 
	PROCEDURE ^ StringStartsWith*(VAR prefix: ARRAY OF CHAR; toffset: SIZE; VAR s: ARRAY OF CHAR): BOOLEAN; 
	PROCEDURE ^ UpperCase*(VAR s: ARRAY OF CHAR); 
	PROCEDURE ^ StrToText*(text: Texts.Text; pos: SIZE; VAR string: ARRAY OF CHAR); 
	PROCEDURE ^ TextToStr*(text: Texts.Text; VAR string: String); 
	PROCEDURE ^ SetEditorText*(editor: WMEditors.Editor; string: String); 
	PROCEDURE ^ NewString*(VAR str: ARRAY OF CHAR): String; 
	PROCEDURE ^ MakeQuotedString*(VAR s: Strings.String); 
	PROCEDURE ^ decodeBase64*(VAR s: ARRAY OF CHAR): String; 
	PROCEDURE ^ decodeQuotedPrintable*(VAR s: ARRAY OF CHAR): String; 
	PROCEDURE ^ encodeQuotedPrintable*(VAR string: String); 
	PROCEDURE ^ encodeXML*(VAR s: ARRAY OF CHAR): String; 
	PROCEDURE ^ replaceEncodedHeaderWord*(VAR buf: ARRAY OF CHAR); 
	PROCEDURE ^ replaceEncodedFolderName*(VAR name: String); 
	PROCEDURE ^ getRFC822Date*(): String; 
BEGIN
END IMAPUtilities.
