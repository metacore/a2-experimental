MODULE Plugins;
CONST 
	Ok* = 0; 
	DuplicateName* = 4101; 
	AlreadyRegistered* = 4102; 
	NeverRegistered* = 4103; 
	EventAdd* = 0; 
	EventRemove* = 1; 
TYPE 
	Name* = ARRAY 32 OF CHAR; 

	Description* = ARRAY 128 OF CHAR; 

	Plugin* = OBJECT 
	VAR 
		name-: Name; 
		desc*: Description; 
		link: Plugin; 
		registry: Registry; 

		PROCEDURE ^ SetName*(CONST name: ARRAY OF CHAR); 
	END Plugin; 

	PluginHandler* = PROCEDURE {DELEGATE}(p: Plugin); 

	EventHandler* = PROCEDURE {DELEGATE}(event: INTEGER; plugin: Plugin); 

	EventHandlerList = POINTER TO RECORD 
		next: EventHandlerList; 
		handler: EventHandler; 
	END; 

	Table* = POINTER TO ARRAY OF Plugin; 

	Registry* = OBJECT {EXCLUSIVE} (Plugin)
	VAR 
		root: Plugin; 
		added: SIZE; 
		handlers: EventHandlerList; 

		PROCEDURE ^ Get*(CONST name: ARRAY OF CHAR): Plugin; 
		PROCEDURE ^ Await*(CONST name: ARRAY OF CHAR): Plugin; 
		PROCEDURE ^ Enumerate*(h: PluginHandler); 
		PROCEDURE ^ GetAll*(VAR table: Table); 
		PROCEDURE ^ Add*(p: Plugin; VAR res: INTEGER); 
		PROCEDURE ^ Remove*(p: Plugin); 
		PROCEDURE ^ AddEventHandler*(h: EventHandler; VAR res: INTEGER); 
		PROCEDURE ^ RemoveEventHandler*(h: EventHandler; VAR res: INTEGER); 
		PROCEDURE ^  & Init*(CONST name, desc: ARRAY OF CHAR); 
	END Registry; 
VAR 
	main*: Registry; 

	PROCEDURE ^ AppendInt(x: SIZE; VAR to: ARRAY OF CHAR); 
	PROCEDURE ^ GenName(n: SIZE; VAR registry, plugin: Name); 
BEGIN
END Plugins.
