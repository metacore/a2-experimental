MODULE Shortreal;
	IMPORT SYSTEM, FoxArrayBase, Commands, Random, Kernel;
CONST 
TYPE 
	Real = REAL; 

	SHORTREAL* = RECORD 
		value*: UNSIGNED16; 

		PROCEDURE ^ ToReal*(): REAL; 
		PROCEDURE ^ Sqrt*(): SHORTREAL; 
	END
	; 

	; 
VAR 
	eps-: SHORTREAL; 

	OPERATOR ^ "SHORT"-(x: Real): SHORTREAL; 
	OPERATOR ^ "LONG"-(x: SHORTREAL): REAL; 
	OPERATOR ^ ":="-(VAR y: REAL; x: SHORTREAL); 
	OPERATOR ^ "+"-(x, y: SHORTREAL): SHORTREAL; 
	OPERATOR ^ "-"-(x, y: SHORTREAL): SHORTREAL; 
	OPERATOR ^ "*"-(x, y: SHORTREAL): SHORTREAL; 
	OPERATOR ^ "/"-(x, y: SHORTREAL): SHORTREAL; 
	OPERATOR ^ "-"-(x: SHORTREAL): SHORTREAL; 
	OPERATOR ^ "ABS"-(x: SHORTREAL): SHORTREAL; 
	OPERATOR ^ "MIN"-(x, y: SHORTREAL): SHORTREAL; 
	OPERATOR ^ "MAX"-(x, y: SHORTREAL): SHORTREAL; 
	OPERATOR ^ "="-(x, y: SHORTREAL): BOOLEAN; 
	OPERATOR ^ "#"-(x, y: SHORTREAL): BOOLEAN; 
	OPERATOR ^ "<"-(x, y: SHORTREAL): BOOLEAN; 
	OPERATOR ^ "<="-(x, y: SHORTREAL): BOOLEAN; 
	OPERATOR ^ ">"-(x, y: SHORTREAL): BOOLEAN; 
	OPERATOR ^ ">="-(x, y: SHORTREAL): BOOLEAN; 
	PROCEDURE ^ Sqrt*(x: SHORTREAL): SHORTREAL; 
	OPERATOR ^ "+"-(CONST x, y: ARRAY [?] OF SHORTREAL): ARRAY [?] OF SHORTREAL; 
	PROCEDURE ^ IsContiguous(desc: FoxArrayBase.UnsafeArray): BOOLEAN; 
	PROCEDURE ^ HaveSameShape(xDesc, yDesc: FoxArrayBase.UnsafeArray): BOOLEAN; 
	PROCEDURE ^ GetNumElems(desc: FoxArrayBase.UnsafeArray): SIZE; 
	PROCEDURE ^ Sqrt0(x: UNSIGNED16): UNSIGNED16; 
	PROCEDURE ^ Abs(x: UNSIGNED16): UNSIGNED16; 
	PROCEDURE ^ Negate(x: UNSIGNED16): UNSIGNED16; 
	PROCEDURE ^ Add(x, y: UNSIGNED16): UNSIGNED16; 
	PROCEDURE ^ Sub(x, y: UNSIGNED16): UNSIGNED16; 
	PROCEDURE ^ Mul(x, y: UNSIGNED16): UNSIGNED16; 
	PROCEDURE ^ Div(x, y: UNSIGNED16): UNSIGNED16; 
	PROCEDURE ^ Equal(x, y: UNSIGNED16): BOOLEAN; 
	PROCEDURE ^ LessThan(x, y: UNSIGNED16): BOOLEAN; 
	PROCEDURE ^ GreaterThan(x, y: UNSIGNED16): BOOLEAN; 
	PROCEDURE ^ AddVecSSE(x, y, z: ADDRESS; numElements: SIZE); 
	PROCEDURE ^ AddVecAVX(x, y, z: ADDRESS; numElements: SIZE); 
	PROCEDURE ^ AddTest(CONST x, y: ARRAY [*] OF UNSIGNED16; VAR z: ARRAY [*] OF UNSIGNED16); 
	PROCEDURE ^ ShortrealToReal(x: UNSIGNED16): REAL; 
	PROCEDURE ^ RealToShortreal(x: REAL): UNSIGNED16; 
	PROCEDURE ^ InitMod; 
	PROCEDURE ^ Round(x: REAL): REAL; 
	PROCEDURE ^ Test*(ctx: Commands.Context); 
	PROCEDURE ^ TestVec*(ctx: Commands.Context); 
	PROCEDURE ^ TestScalarAccessSpeed*(ctx: Commands.Context); 
BEGIN
END Shortreal.
