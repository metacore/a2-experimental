MODULE DTPImage;
	IMPORT Modules, Files, XML, WMStandardComponents, WMGraphics, WMComponents, WMRectangles, WMDialogs, WMEditors, Strings, XMLObjects, WMWindowManager, Raster, WMRasterScale, DTPEditor, DTPData;
CONST 
	pluginVersion = 1.; 
	pluginName = \"Image"\; 
	pluginDesc = \"Loads an Image from the given Filename"\; 
TYPE 
	ImageObject* = OBJECT (DTPData.ContentObject)
	VAR 
		ownerDocument: DTPData.Document; 
		ownerPage: DTPData.PageObject; 
		ownerFrame: DTPData.FrameObject; 
		done: BOOLEAN; 
		img: Raster.Image; 
		filename: ARRAY 128 OF CHAR; 
		properties: ImagePropWindow; 

		PROCEDURE ^  & New*; 
		PROCEDURE ^ Draw*(canvas: WMGraphics.Canvas; x, y, w, h: SIZE; zoomFactor: FLOAT32; quality, preview: BOOLEAN); 
		PROCEDURE ^ Clone*(): DTPData.ContentObject; 
		PROCEDURE ^ LoadImg(CONST file: ARRAY OF CHAR); 
		PROCEDURE ^ Load*(elem: XML.Element); 
		PROCEDURE ^ Store*(VAR w: Files.Writer); 
		PROCEDURE ^ OnCreate*; 
		PROCEDURE ^ Redraw*; 
		PROCEDURE ^ Show*(x, y: SIZE); 
		PROCEDURE ^ Hide*; 
		PROCEDURE ^ Close*; 
	END ImageObject; 

	ImagePropWindow = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		theCaller: ImageObject; 
		shown: BOOLEAN; 
		leftPanel, rightPanel: WMStandardComponents.Panel; 
		fileEdit: WMEditors.Editor; 

		PROCEDURE ^  & New*(caller: ImageObject); 
		PROCEDURE ^ CreatePropertyForm(): WMComponents.VisualComponent; 
		PROCEDURE ^ Show*(x, y: SIZE); 
		PROCEDURE ^ Hide*; 
		PROCEDURE ^ RefreshValues; 
		PROCEDURE ^ SetValueHandler(sender, data: ANY); 
		PROCEDURE ^ Close*; 
	END ImagePropWindow; 

	PROCEDURE ^ GenImage*(): DTPData.ContentObject; 
	PROCEDURE ^ Register*; 
	PROCEDURE ^ Cleanup; 
BEGIN
END DTPImage.
