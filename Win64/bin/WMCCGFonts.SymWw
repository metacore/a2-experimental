MODULE WMCCGFonts;
	IMPORT Files, Streams, WMGraphics, WMRectangles, KernelLog, Strings, Kernel, WMFontManager;
CONST 
	CMDStrokeMove = 0; 
	CMDStrokeLine = 1; 
	CMDStrokeSpline = 2; 
	MaxSplineSeg = 16; 
TYPE 
	StrokeElement* = RECORD 
		cmd*: LONGINT; 
		x*, y*: LONGINT; 
	END; 

	StrokeArray* = POINTER TO ARRAY OF StrokeElement; 

	GlyphRef* = RECORD 
		x*, y*, w*, h*: LONGINT; 
		refucs*, refvariant*: LONGINT; 
		refPtr*: Glyph; 
	END; 

	GlyphRefArray* = POINTER TO ARRAY OF GlyphRef; 

	Glyph* = POINTER TO RECORD 
		ucs*, variant*: LONGINT; 
		nofStrokes*, nofSubComponents*: LONGINT; 
		strokes*: StrokeArray; 
		subComponents*: GlyphRefArray; 
		nextVariant*: Glyph; 
	END; 

	GlyphRange = RECORD 
		firstCode, lastCode: LONGINT; 
		filePos: LONGINT; 
		glyphs: POINTER TO ARRAY OF Glyph; 
	END; 

	RangeArray = POINTER TO ARRAY OF GlyphRange; 

	Font* = OBJECT (WMGraphics.Font)
	VAR 
		gf*: GenericFont; 

		PROCEDURE ^  & New*(gf: GenericFont; size: LONGINT; style: SET); 
		PROCEDURE ^ HasChar*(code: LONGINT): BOOLEAN; 
		PROCEDURE ^ RenderChar*(canvas: WMGraphics.Canvas; x, y: REAL; char: LONGINT); 
		PROCEDURE ^ GetGlyphSpacings*(code: LONGINT; VAR glyphSpacings: WMGraphics.GlyphSpacings); 
	END Font; 

	GenericFont* = OBJECT 
	VAR 
		glyphRanges: RangeArray; 
		fontFile: Files.File; 
		name: ARRAY 256 OF CHAR; 

		PROCEDURE ^ FindGlyphRange(code: LONGINT; VAR glyphRangeIndex: LONGINT): BOOLEAN; 
		PROCEDURE ^ ReadPackedGlyph(r: Streams.Reader; VAR glyph: Glyph); 
		PROCEDURE ^ LoadRange(f: Files.File; rangeIndex: LONGINT); 
		PROCEDURE ^ GetGlyph*(ucs, variant: LONGINT): Glyph; 
		PROCEDURE ^ Load*(fontName: ARRAY OF CHAR): BOOLEAN; 
		PROCEDURE ^ FindGlyphSubComponent(VAR ref: GlyphRef): Glyph; 
		PROCEDURE ^ CalcBB(glyph: Glyph): WMRectangles.Rectangle; 
		PROCEDURE ^ RenderGlyphReal*(canvas: WMGraphics.Canvas; glyph: Glyph; x, y, w, h: REAL; level: LONGINT; filled: BOOLEAN; color: WMGraphics.Color; mode: LONGINT; VAR points: ARRAY OF WMGraphics.Point2d); 
	END GenericFont; 
VAR 
	fontCache: Kernel.FinalizedCollection; 
	searchName: ARRAY 256 OF CHAR; 
	foundFont: GenericFont; 

	PROCEDURE ^ AddPoint(VAR points: ARRAY OF WMGraphics.Point2d; VAR nofPoints: LONGINT; x, y: LONGINT); 
	PROCEDURE ^ SplineReal(canvas: WMGraphics.Canvas; x0, y0, x1, y1, x2, y2, x, y, w, h: REAL; color: WMGraphics.Color; mode: LONGINT); 
	PROCEDURE ^ AddSplinePoints(VAR points: ARRAY OF WMGraphics.Point2d; VAR nofPoints: LONGINT; x0, y0, x1, y1, x2, y2, x, y, w, h: REAL); 
	PROCEDURE ^ CheckFont(obj: ANY; VAR cont: BOOLEAN); 
	PROCEDURE ^ LoadExactFont*(fi: WMFontManager.FontInfo): WMGraphics.Font; 
BEGIN
END WMCCGFonts.
