MODULE DBF IN Oberon;
	IMPORT Files, Dates, Strings;
CONST 
	Done* = 0; 
	CorruptedFile* = 1; 
	OutOfRange* = 2; 
	RecordDeleted* = 3; 
	TypeNotSupported* = 4; 
	Character* = ORD(\"C"\); 
	Date* = ORD(\"D"\); 
	Logical* = ORD(\"L"\); 
	Numeric* = ORD(\"N"\); 
TYPE 
	Field* = POINTER TO FieldDesc; 

	FieldDesc* = RECORD 
		name*: ARRAY 12 OF CHAR; 
		type*: SIGNED32; 
		address: SIGNED32; 
		width: SIGNED32; 
		digits*: SIGNED32; 
		next*: Field; 
	END; 

	FieldValue* = RECORD 
		character*: ARRAY 256 OF CHAR; 
		date*: SIGNED32; 
		logical*: BOOLEAN; 
		numeric*: FLOAT64; 
	END; 

	Reader* = RECORD 
		R: Files.Rider; 
		firstRecord, thisRecord: SIGNED32; 
		nRecords*: SIGNED32; 
		sizeRecord: SIGNED32; 
		fields*: Field; 
		res*: SIGNED16; 
	END; 

	PROCEDURE ^ ReadDate(VAR R: Reader; VAR date: SIGNED32); 
	PROCEDURE ^ ReadLInt(VAR R: Reader; VAR i: SIGNED32); 
	PROCEDURE ^ ReadInt(VAR R: Reader; VAR i: SIGNED16); 
	PROCEDURE ^ Open*(VAR R: Reader; F: Files.File; pos: SIGNED32); 
	PROCEDURE ^ Set*(VAR R: Reader; record: SIGNED32); 
	PROCEDURE ^ ToDate(VAR R: Reader; VAR value: FieldValue); 
	PROCEDURE ^ ToLogical(VAR R: Reader; VAR value: FieldValue); 
	PROCEDURE ^ Read*(VAR R: Reader; field: Field; VAR value: FieldValue); 
BEGIN
END DBF.
