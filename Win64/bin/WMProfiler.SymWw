MODULE WMProfiler;
	IMPORT Modules, Kernel, Strings, HierarchicalProfiler, WMGraphics, WMMessages, WMRestorable, WMWindowManager, WMComponents, WMStandardComponents, WMEditors, WMTrees, WMErrors, WMProgressComponents;
CONST 
	DefaultTime = 30; 
TYPE 
	KillerMsg = OBJECT 
	END KillerMsg; 

	Window* = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		startBtn, stopBtn, continueBtn, getProfileBtn, flattenBtn, filterBtn: WMStandardComponents.Button; 
		timeEdit, typeEdit, infoEdit, filterMaskEdit, filterCountEdit: WMEditors.Editor; 
		tree: WMTrees.Tree; 
		treeView: WMTrees.TreeView; 
		lastSelectedNode: HierarchicalProfiler.Node; 
		lastState: LONGINT; 
		statusLabel: WMStandardComponents.Label; 
		progressBar: WMProgressComponents.ProgressBar; 
		profile: HierarchicalProfiler.Profile; 
		alive, dead: BOOLEAN; 
		timer: Kernel.Timer; 

		PROCEDURE ^ HasVisibleChildren(node: HierarchicalProfiler.Node): BOOLEAN; 
		PROCEDURE ^ AddChildNodes(parent: WMTrees.TreeNode; node: HierarchicalProfiler.Node; expand: BOOLEAN); 
		PROCEDURE ^ ClearExternField(node: HierarchicalProfiler.Node); 
		PROCEDURE ^ UpdateTree; 
		PROCEDURE ^ UpdateStatusBar(forceUpdate: BOOLEAN); 
		PROCEDURE ^ HandleNodeClicked(sender, data: ANY); 
		PROCEDURE ^ HandleNodeSelected(sender, data: ANY); 
		PROCEDURE ^ GetTypeAndInfo(VAR type, info: LONGINT); 
		PROCEDURE ^ GetFilterMask(VAR mask: ARRAY OF CHAR; VAR minPercent: LONGINT); 
		PROCEDURE ^ HandleButtons(sender, data: ANY); 
		PROCEDURE ^ CreateForm(): WMComponents.VisualComponent; 
		PROCEDURE ^  & New*(context: WMRestorable.Context); 
		PROCEDURE ^ Handle*(VAR x: WMMessages.Message); 
		PROCEDURE ^ Close*; 
	BEGIN{ACTIVE} 
	END Window; 
VAR 
	nofWindows: LONGINT; 

	PROCEDURE ^ Open*; 
	PROCEDURE ^ Restore*(context: WMRestorable.Context); 
	PROCEDURE ^ IncCount; 
	PROCEDURE ^ DecCount; 
	PROCEDURE ^ Cleanup; 
BEGIN
END WMProfiler.
