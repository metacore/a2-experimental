MODULE Calc IN Oberon;
	IMPORT MathL IN A2, Texts, Oberon;
CONST 
	Version = \"Calc / cas 28.9.93"\; 
	End = 7; 
	Eps =       1.00000000000000D-9; 
	Eps0 =      5.00000000000000D-10; 
TYPE 
	Symbol = POINTER TO SymbolDesc; 

	SymbolDesc = RECORD 
		name: ARRAY 32 OF CHAR; 
		funct: BOOLEAN; 
		val: LONGREAL; 
		next: Symbol; 
	END; 
VAR 
	lastTime: LONGINT; 
	W: Texts.Writer; 
	S: Texts.Scanner; 
	syms: Symbol; 

	PROCEDURE ^ err; 
	PROCEDURE ^ sign(n: LONGREAL): LONGREAL; 
	PROCEDURE ^ short(n: LONGREAL): REAL; 
	PROCEDURE ^ entier(n: LONGREAL): LONGINT; 
	PROCEDURE ^ sin(n: LONGREAL): LONGREAL; 
	PROCEDURE ^ cos(n: LONGREAL): LONGREAL; 
	PROCEDURE ^ tan(n: LONGREAL): LONGREAL; 
	PROCEDURE ^ arcsin(n: LONGREAL): LONGREAL; 
	PROCEDURE ^ arccos(n: LONGREAL): LONGREAL; 
	PROCEDURE ^ arctan(n: LONGREAL): LONGREAL; 
	PROCEDURE ^ exp(n: LONGREAL): LONGREAL; 
	PROCEDURE ^ ln(n: LONGREAL): LONGREAL; 
	PROCEDURE ^ sqrt(n: LONGREAL): LONGREAL; 
	PROCEDURE ^ Ch(ch: CHAR); 
	PROCEDURE ^ Str(CONST s: ARRAY OF CHAR); 
	PROCEDURE ^ WrHex(n: LONGREAL); 
	PROCEDURE ^ WrInt(n: LONGREAL); 
	PROCEDURE ^ WrChar(n: LONGREAL); 
	PROCEDURE ^ WrReal(n: LONGREAL); 
	PROCEDURE ^ WrValue(n: LONGREAL); 
	PROCEDURE ^ Ln; 
	PROCEDURE ^ Scan(VAR S: Texts.Scanner); 
	PROCEDURE ^ OpenScanner(VAR S: Texts.Scanner); 
	PROCEDURE ^ FindIdent(CONST name: ARRAY OF CHAR; insert: BOOLEAN; VAR val: LONGREAL); 
	PROCEDURE ^ FindFunct(CONST name: ARRAY OF CHAR; insert: BOOLEAN; VAR sym: Symbol); 
	PROCEDURE ^ InitSyms; 
	PROCEDURE ^ Functor(sym: Symbol; VAR n: LONGREAL); 
	PROCEDURE ^ Atom(VAR n: LONGREAL); 
	PROCEDURE ^ Factor(VAR n: LONGREAL); 
	PROCEDURE ^ Term(VAR n: LONGREAL); 
	PROCEDURE ^ Expr(VAR n: LONGREAL); 
	PROCEDURE ^ Hex*; 
	PROCEDURE ^ Dec*; 
	PROCEDURE ^ Real*; 
	PROCEDURE ^ Char*; 
	PROCEDURE ^ Set*; 
	PROCEDURE ^ List*; 
	PROCEDURE ^ Reset*; 
BEGIN
END Calc.
