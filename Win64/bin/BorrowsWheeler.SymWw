MODULE BorrowsWheeler;
CONST 
	BlockSize* = (8 * 1024); 
TYPE 
	MTF = OBJECT 
	TYPE 
		Node = POINTER TO RECORD 
			byte: CHAR; 
			next: Node; 
		END; 
	VAR 
		alpha: Node; 

		PROCEDURE ^ Initialize; 
		PROCEDURE ^ Encode(VAR buf: ARRAY OF CHAR; len: SIZE); 
		PROCEDURE ^ Decode(VAR buf: ARRAY OF CHAR; len: SIZE); 
	END MTF; 

	Encoder* = OBJECT 
	VAR 
		mtf: MTF; 
		sbuf: ARRAY (2 * BlockSize) OF CHAR; 
		bufLength: INTEGER; 
		rotation: ARRAY BlockSize OF SIGNED16; 

		PROCEDURE ^  & New*; 
		PROCEDURE ^ Less(a, b: INTEGER): BOOLEAN; 
		PROCEDURE ^ Swap(a, b: INTEGER); 
		PROCEDURE ^ InsertSort(lo, hi: INTEGER); 
		PROCEDURE ^ SortR(lo, hi: INTEGER); 
		PROCEDURE ^ EncodeBlock*(VAR buf: ARRAY OF CHAR; len: INTEGER): INTEGER; 
	END Encoder; 

	Decoder* = OBJECT 
	VAR 
		mtf: MTF; 
		f, l: ARRAY BlockSize OF CHAR; 
		lc, fc: ARRAY BlockSize OF SIGNED16; 

		PROCEDURE ^  & New*; 
		PROCEDURE  - Swap(a, b: INTEGER);
		VAR 
			tmp: CHAR; 
		BEGIN
			tmp := f[a]; 
			f[a] := f[b]; 
			f[b] := tmp
		END Swap; 
		PROCEDURE ^ SortF(lo, hi: INTEGER); 
		PROCEDURE ^ DecodeBlock*(VAR buf: ARRAY OF CHAR; len, index: INTEGER); 
	END Decoder; 
BEGIN
END BorrowsWheeler.
