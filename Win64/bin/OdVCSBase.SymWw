MODULE OdVCSBase;
	IMPORT SYSTEM, Dates, Strings, Files, Out := KernelLog, Clock;
CONST 
	BaseDir* = \"FTP:/WebDAV/repo/"\; 
	TmpDFile = \"FTP:/WebDAV/repo/VCSBaseD.Temp"\; 
	FormatLen* = 8; 
	FormatName* = \"dsfantf1"\; 
	MakroBit* = 0; 
	VersionTag = 1X; 
	DateTag = 2X; 
	AuthorTag = 3X; 
	LogTextTag = 4X; 
	DeltaAddTag = 5X; 
	DeltaCopyTag = 6X; 
	AttachmentTag = 7X; 
	TextTag = 8X; 
	DiffTag = 9X; 
	AccessTag = 0AX; 
	HashLen = 16381; 
	D = 256; 
	PrefixLen = 7; 
	MaxVersions* = 100; 
TYPE 
	PLinkNode = POINTER TO TLinkNode; 

	TLinkNode = RECORD 
		next: PLinkNode; 
		pos: LONGINT; 
	END; 

	THashList = ARRAY HashLen OF PLinkNode; 

	PHashList = POINTER TO THashList; 

	TWorkBytes = ARRAY PrefixLen OF CHAR; 

	TData = POINTER TO ARRAY OF CHAR; 

	TLog* = RECORD 
		versionID*: LONGINT; 
		author*: ARRAY 127 OF CHAR; 
		logText*: ARRAY 256 OF CHAR; 
		date*: ARRAY 22 OF CHAR; 
		lenOfDelta: LONGINT; 
		lenOfOld: LONGINT; 
		flags*: SET; 
	END; 

	TFileName* = ARRAY 256 OF CHAR; 

	TDeltaEntry* = ARRAY 20 OF CHAR; 

	TDList* = ARRAY MaxVersions OF TDeltaEntry; 
VAR 
	errMsg*: ARRAY 256 OF CHAR; 
	formatStr: ARRAY (FormatLen + 1) OF CHAR; 
	res: WORD; 

	PROCEDURE ^ splitDirBase(fileName: ARRAY OF CHAR; VAR dir, base: ARRAY OF CHAR); 
	PROCEDURE ^ makeDirs(name: ARRAY OF CHAR): WORD; 
	PROCEDURE ^ DateTime*(VAR s: ARRAY OF CHAR); 
	PROCEDURE ^ Hash(toHash: TWorkBytes): LONGINT; 
	PROCEDURE ^ AccessArray(arr: TData; len, left, right: LONGINT; VAR ret: ARRAY OF CHAR); 
	PROCEDURE ^ BuildLinkList(new: TData; lenNew: LONGINT; hashList: PHashList); 
	PROCEDURE ^ FindLongest(old, new: TData; lenOld, lenNew, oldPos: LONGINT; VAR copyStart: PLinkNode; VAR copyLen: LONGINT; hashList: PHashList); 
	PROCEDURE ^ EmitAdd(old: TData; VAR dr: Files.Rider; offset, length: LONGINT); 
	PROCEDURE ^ EmitCopy(VAR dr: Files.Rider; offset, length: LONGINT); 
	PROCEDURE ^ CreateDelta*(old, new: TData; VAR dr: Files.Rider; lenOld, lenNew: LONGINT); 
	PROCEDURE ^ ApplyDelta*(old, new: TData; dr: Files.Rider); 
	PROCEDURE ^ NameToDelta(name: TFileName; VAR df: TFileName); 
	PROCEDURE ^ NameToBak(name: TFileName; VAR df: TFileName); 
	PROCEDURE ^ GetTextLen(VAR fr: Files.Rider; f: Files.File): LONGINT; 
	PROCEDURE ^ GetNewestVersion(fr: Files.Rider; f: Files.File): LONGINT; 
	PROCEDURE ^ GetDiffPos(fr: Files.Rider; f: Files.File; n: LONGINT): LONGINT; 
	PROCEDURE ^ Init*(name: TFileName): LONGINT; 
	PROCEDURE ^ GetLog*(name: TFileName; n: LONGINT; VAR log: TLog); 
	PROCEDURE ^ GetDelta*(name: TFileName; n: LONGINT; VAR df: Files.File; VAR dr: Files.Rider); 
	PROCEDURE ^ SetLog*(name: TFileName; n: INTEGER; log: TLog); 
	PROCEDURE ^ GetDeltaList*(name: TFileName; VAR list: TDList): INTEGER; 
	PROCEDURE ^ WriteTag(VAR rdr: Files.Rider; tag: CHAR; len: LONGINT; VAR data: ARRAY OF CHAR); 
	PROCEDURE ^ Create*(historyName, name: TFileName; log: TLog; flags: SET): LONGINT; 
	PROCEDURE ^ NewVersion*(name: TFileName; log: TLog; flags: SET): LONGINT; 
	PROCEDURE ^ newVersion(historyName, name: TFileName; log: TLog; flags: SET): LONGINT; 
	PROCEDURE ^ View*(name: TFileName; n: LONGINT; newFileName: TFileName): WORD; 
	PROCEDURE ^ Extract*(name: TFileName; n: LONGINT): LONGINT; 
BEGIN
END OdVCSBase.
