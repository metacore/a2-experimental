MODULE VideoExample;
	IMPORT Modules, Kernel, KernelLog, GDI32, Kernel32, User32, SYSTEM, WMWindowManager, Strings, WMRectangles, WMGraphics, Raster, RasterPixelFormats, VfW, Codecs, Commands, Files, Streams;
CONST 
TYPE 
	FrameHandler* = PROCEDURE {DELEGATE}(buffer: Raster.Image); 

	PreviewWindow* = OBJECT {EXCLUSIVE} (WMWindowManager.BufferWindow)

		PROCEDURE ^  & New*(width, height: SIZE); 
		PROCEDURE ^ Draw*(canvas: WMGraphics.Canvas; w, h: SIZE; q: WORD); 
	END PreviewWindow; 

	Starter* = OBJECT {EXCLUSIVE} 
	VAR 
		opened, stopped: BOOLEAN; 

		PROCEDURE ^ Open; 
		PROCEDURE ^ Stop; 
		PROCEDURE ^ MsgLoop; 
	BEGIN{ACTIVE} 
	END Starter; 
VAR 
	s: PreviewWindow; 
	handle: VfW.HWND; 
	buffer: Raster.Image; 
	starter: Starter; 
	frameHandler: FrameHandler; 

	PROCEDURE ^ SimulateImage*(context: Commands.Context); 
	PROCEDURE ^ GetTimer(): HUGEINT; 
	PROCEDURE ^ GetFreq(): HUGEINT; 
	PROCEDURE ^ {WINAPI} FrameReceived(hWnd: VfW.HWND; VAR lpVHdr: VfW.VHdr): User32.LResult; 
	PROCEDURE ^ {WINAPI} YieldCallback(hWnd: VfW.HWND): User32.LResult; 
	PROCEDURE ^ SnapshotFirstPossible*; 
	PROCEDURE ^ Start*; 
	PROCEDURE ^ Stop*; 
	PROCEDURE ^ InstallFrameHandler*(handler: FrameHandler); 
	PROCEDURE ^ Cleanup; 
BEGIN
END VideoExample.
