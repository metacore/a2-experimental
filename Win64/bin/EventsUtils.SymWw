MODULE EventsUtils;
	IMPORT Commands, Events, Streams, Files, Dates, Strings;
CONST 
	Ok* = 0; 
	Error* = 1; 
	Uncomplete* = 3; 
	EOF = 4; 
	DateTimeFormat = \"dd.mm.yyyy hh:nn:ss"\; 
TYPE 
	EventWrapper* = POINTER TO RECORD 
		nextIndex-: LONGINT; 
		events-: POINTER TO ARRAY OF Events.Event; 
		next-: EventWrapper; 
	END; 

	EventContainer* = OBJECT {EXCLUSIVE} (Events.Sink)
	VAR 
		nofWrappers, nofEvents: LONGINT; 
		lastCleared, lastAdded: LONGINT; 
		events, current: EventWrapper; 
		maxNofWrappers, eventsPerWrapper: LONGINT; 

		PROCEDURE ^ GetStamp*(): LONGINT; 
		PROCEDURE ^ GetEvents*(VAR nofEvents: LONGINT; VAR full: BOOLEAN; VAR lastCleared: LONGINT): EventWrapper; 
		PROCEDURE ^ IsFull*(): BOOLEAN; 
		PROCEDURE ^ Clear*; 
		PROCEDURE ^ GetSize*(): LONGINT; 
		PROCEDURE ^ Handle*(event: Events.Event); 
		PROCEDURE ^  & Init*(maxNofWrappers, eventsPerWrapper: LONGINT); 
	END EventContainer; 

	PROCEDURE ^ LoadFromFile*(CONST filename: ARRAY OF CHAR; VAR events: EventContainer; VAR msg: ARRAY OF CHAR; VAR res: WORD); 
	PROCEDURE ^ StoreToFile*(CONST filename: ARRAY OF CHAR; events: EventContainer; VAR msg: ARRAY OF CHAR; VAR res: WORD); 
	PROCEDURE ^ ToStream*(w: Streams.Writer; event: Events.Event); 
	PROCEDURE ^ FromStream*(r: Streams.Reader; VAR event: Events.Event; VAR msg: ARRAY OF CHAR; VAR res: WORD); 
	PROCEDURE ^ DateTimeFromStream(r: Streams.Reader; VAR dt: Dates.DateTime): BOOLEAN; 
	PROCEDURE ^ GetTypeString*(type: LONGINT; VAR string: ARRAY OF CHAR); 
	PROCEDURE ^ GetType*(CONST string: ARRAY OF CHAR): SHORTINT; 
	PROCEDURE ^ GenerateEvent*(context: Commands.Context); 
BEGIN
END EventsUtils.
