MODULE CUSM IN Oberon;
	IMPORT SYSTEM, NetSystem, IP IN A2, Texts, Oberon, Out, Objects, Gadgets, BasicGadgets, Pictures, RembrandtDocs, Display, Math IN A2, Modules;
CONST 
	MAXSNDBUFLEN = 500; 
	MAXRCVBUFLEN = 2048; 
	VPHLEN = 26; 
	OCDLEN = 30; 
	CILEN = 12; 
	kGroup = 0; 
	kClient = 1; 
	kReflect = 2; 
	VIDPORT = 7648; 
	SENDPORT = 6666; 
	kOpenConnection = 1; 
	kCloseConnection = 6; 
	kConfigVideoType = 101; 
	kMessageType1 = 104; 
	kMessageType2 = 105; 
	kHalfSizeVideoType = 1; 
	kFullSizeVideoType = 2; 
	RECAUDIO = 1; 
	AUDIOCAPABLE = 2; 
	WANTLURCKERS = 4; 
	PCCLIENT = 8; 
	PRIVATEAUDIO = 16; 
	WANTVERSION = 32; 
	MSECINDAY = 86400000; 
TYPE 
	Addr = RECORD 
		family: SIGNED16; 
		port: SIGNED16; 
		addr: SIGNED32; 
	END; 

	Routing = RECORD 
		dest: Addr; 
		src: Addr; 
	END; 

	VideoPacketHeader = POINTER TO VideoPacketHeaderDesc; 

	VideoPacketHeaderDesc = RECORD 
		routing: Routing; 
		seqNum: SIGNED32; 
		message: SIGNED16; 
		dataType: SIGNED16; 
		len: SIGNED16; 
	END; 

	OpenContinueData = POINTER TO OpenContinueDataDesc; 

	OpenContinueDataDesc = RECORD 
		clientCount: SIGNED16; 
		seqNum: SIGNED32; 
		name: ARRAY 20 OF CHAR; 
		sendMode: CHAR; 
		recvMode: CHAR; 
		flags: CHAR; 
		version: CHAR; 
	END; 

	Image = POINTER TO ImageDesc; 

	ImageDesc = RECORD 
		width: SIGNED16; 
		height: SIGNED16; 
		picture: Pictures.Picture; 
	END; 

	Client = POINTER TO ClientDesc; 

	ClientDesc = RECORD 
		next: Client; 
		clAdr: SIGNED32; 
		clAdrStr: ARRAY 16 OF CHAR; 
		name: ARRAY 256 OF CHAR; 
		lastSeqNum: SIGNED32; 
		sndBufOffset: SIGNED16; 
		sender: BOOLEAN; 
		timeOut: SIGNED8; 
		wantVideo: BOOLEAN; 
		image: Image; 
	END; 

	Connection = POINTER TO ConnectionDesc; 

	ConnectionDesc = RECORD 
		reflAdr: SIGNED32; 
		reflAdrStr: ARRAY 16 OF CHAR; 
		confID: SIGNED16; 
		connected: BOOLEAN; 
		timeOut: SIGNED16; 
		sndBuf: ARRAY MAXSNDBUFLEN OF CHAR; 
		sndBufLen: SIGNED16; 
		vphSeqNum: SIGNED16; 
		ocdSeqNum: SIGNED16; 
		timeToSend, timeToUpdate: SIGNED32; 
		clientsList: Client; 
		next: Connection; 
	END; 
VAR 
	connectionsList: Connection; 
	currentConnection: Connection; 
	hostAdr, reflAdr: SIGNED32; 
	rcvBuf: ARRAY MAXRCVBUFLEN OF CHAR; 
	sndTask, rcvTask: Oberon.Task; 
	rcvScktStarted, sndScktStarted: BOOLEAN; 
	sndSocket, rcvSocket: NetSystem.Socket; 
	rcvVPH: VideoPacketHeader; 
	rcvOCD: OpenContinueData; 
	reflAdrStr: BasicGadgets.String; 
	conferenceID: BasicGadgets.Integer; 
	hostName: BasicGadgets.String; 
	connectionsLog, videosLog*: Texts.Text; 
	intraRowBytes: ARRAY 16 OF SIGNED16; 
	interRowDiff: ARRAY 16 OF SIGNED32; 
	wordDiff: ARRAY 256 OF SIGNED16; 
	longDiff: ARRAY 256 OF SIGNED32; 
	conv4To8Bit: ARRAY 256 OF SIGNED16; 
	lumin, contr: SIGNED16; 
	gamma: FLOAT32; 

	PROCEDURE ^ ReflAdrStrHandler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ ConfIDHandler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ HostNameHandler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ ConnHandler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ VideosHandler*(F: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ NewReflAdrStr*; 
	PROCEDURE ^ NewConfID*; 
	PROCEDURE ^ NewHostName*; 
	PROCEDURE ^ NewConnLog*; 
	PROCEDURE ^ NewVideosLog*; 
	PROCEDURE ^ SetPalette; 
	PROCEDURE ^ InitVideo; 
	PROCEDURE ^ Decode*(VAR image: Image; VAR data: ARRAY OF CHAR; pos: SIGNED16; imType: SIGNED16; name: ARRAY OF CHAR); 
	PROCEDURE ^ BlackPicture(im: Image); 
	PROCEDURE ^ SetLum*; 
	PROCEDURE ^ SetContr*; 
	PROCEDURE ^ SetGamma*; 
	PROCEDURE ^ StartSndTask; 
	PROCEDURE ^ StopSndTask; 
	PROCEDURE ^ StartRcvTask; 
	PROCEDURE ^ StopRcvTask; 
	PROCEDURE ^ ConvIpAdrLtoS(adr: SIGNED32; VAR ip: ARRAY OF CHAR); 
	PROCEDURE ^ UpdateConnLog; 
	PROCEDURE ^ UpdateVideoStreamsLog; 
	PROCEDURE ^ SearchConnection(rAddr: SIGNED32): Connection; 
	PROCEDURE ^ RemoveConnection(con: Connection); 
	PROCEDURE ^ SearchClientByAdr(con: Connection; ipAdr: SIGNED32): Client; 
	PROCEDURE ^ SearchClientByStrAdr(con: Connection; adr: ARRAY OF CHAR): Client; 
	PROCEDURE ^ RemoveClient(con: Connection; cl: Client); 
	PROCEDURE ^ Turn(ipAdr: SIGNED32): SIGNED32; 
	PROCEDURE ^ FullSndBuf(con: Connection; conferenceID: SIGNED16; VAR hostName: ARRAY OF CHAR); 
	PROCEDURE ^ InsertClientInfo(con: Connection; ipAdr: SIGNED32; recv: BOOLEAN); 
	PROCEDURE ^ ReadVPH(VAR vph: VideoPacketHeader; VAR pos: SIGNED16); 
	PROCEDURE ^ ReadOCD(VAR ocd: OpenContinueData; VAR pos: SIGNED16); 
	PROCEDURE ^ UpdateClientsList(con: Connection); 
	PROCEDURE ^ Sender(me: Oberon.Task); 
	PROCEDURE ^ OutMsg(mLen: SIGNED16; pos: SIGNED16); 
	PROCEDURE ^ Receiver(me: Oberon.Task); 
	PROCEDURE ^ Connect*; 
	PROCEDURE ^ GetHostAdr; 
	PROCEDURE ^ SetHostName*; 
	PROCEDURE ^ SetReflAdr*; 
	PROCEDURE ^ SetReflAdrFromList*; 
	PROCEDURE ^ SetConferenceID*; 
	PROCEDURE ^ HandleReflectorLogClick*; 
	PROCEDURE ^ OutLurckersList*; 
	PROCEDURE ^ StartStopVideo*; 
	PROCEDURE ^ Init; 
	PROCEDURE ^ End*; 
BEGIN
END CUSM.
