MODULE WMPerfMonTabSystem;
	IMPORT Plugins := WMPerfMonPlugins, Perf := WMPerfMonComponents, Machine, Heaps, Kernel, Commands, Streams, Dates, Strings, UpTime, WMComponents, WMStandardComponents;
CONST 
TYPE 
	SystemTab* = OBJECT {EXCLUSIVE} (WMComponents.VisualComponent)
	VAR 
		clockrate: LONGINT; 
		gcCurrentRun: Perf.Indicator; 
		line1, line2, line3: Perf.Indicator; 
		cpuClockrate: Perf.Indicator; 
		milliTimer: Kernel.MilliTimer; 
		lastTimestamp: HUGEINT; 
		lastGcCyclesAllRuns: HUGEINT; 
		lastNgc: SIZE; 
		started: BOOLEAN; 
		startBtn: WMStandardComponents.Button; 
		elapsed: Perf.Indicator; 
		format: ARRAY 32 OF CHAR; 
		timeLabel, uptimeLabel: Perf.Indicator; 
		w: Streams.StringWriter; 
		unloadBtn: WMStandardComponents.Button; 
		timer: Kernel.Timer; 
		alive, dead: BOOLEAN; 

		PROCEDURE ^ EstimateClockRate(): LONGINT; 
		PROCEDURE ^ HandleGcButton(sender, data: ANY); 
		PROCEDURE ^ HandleDetectButton(sender, data: ANY); 
		PROCEDURE ^ HandleTimerButton(sender, data: ANY); 
		PROCEDURE ^ HandleUnloadButton(sender, data: ANY); 
		PROCEDURE ^ CreateSysinfoPanel(): WMStandardComponents.Panel; 
		PROCEDURE ^ CreateGcStatisticsPanel(): WMStandardComponents.Panel; 
		PROCEDURE ^ CreateCPUClockratePanel(): WMStandardComponents.Panel; 
		PROCEDURE ^ CreateTimerPanel(): WMStandardComponents.Panel; 
		PROCEDURE ^ CreateUnloadPanel(): WMStandardComponents.Panel; 
		PROCEDURE ^ UpdateTime; 
		PROCEDURE ^ Finalize*; 
		PROCEDURE ^  & Init*; 
	BEGIN{ACTIVE} 
	END SystemTab; 
VAR 
	StrSystemTab: Strings.String; 

BEGIN
END WMPerfMonTabSystem.
