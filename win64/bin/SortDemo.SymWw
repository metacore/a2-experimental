MODULE SortDemo;
	IMPORT Raster, Random, WMRectangles, Strings, WMMessages, WM := WMWindowManager, WMComponents, WMStandardComponents, Log := KernelLog, Clock, Kernel, Machine;
CONST 
	N = 120; 
	ElemSize = 5; 
	MaxConcurrentSorters = 5; 
	WindowSize = (N * ElemSize); 
TYPE 
	SortData = POINTER TO ARRAY N OF LONGINT; 

	ArrayView* = OBJECT {EXCLUSIVE} (WM.BufferWindow)
	VAR 
		cw: ControlWindow; 
		white, grey, col1, yellow: Raster.Pixel; 
		data: SortData; 
		sortname: ARRAY 32 OF CHAR; 
		random: Random.Generator; 
		delay: LONGINT; 
		concSorters: LONGINT; 
		nofcomps, nofswaps: LONGINT; 

		PROCEDURE ^  & New(win: ControlWindow); 
		PROCEDURE ^ Handle*(VAR x: WMMessages.Message); 
		PROCEDURE ^ InitSort; 
		PROCEDURE ^ FinishSort; 
		PROCEDURE ^ DrawElement(n: LONGINT); 
		PROCEDURE ^ Highlight(n: LONGINT); 
		PROCEDURE ^ Clear(n: LONGINT); 
		PROCEDURE ^ Update; 
		PROCEDURE ^ Randomize(n: LONGINT); 
		PROCEDURE ^ OrderData; 
		PROCEDURE ^ RevOrderData; 
		PROCEDURE ^ BadOrder; 
		PROCEDURE ^ Swap(i, j: LONGINT); 
		PROCEDURE ^ Less(i, j: LONGINT): BOOLEAN; 
		PROCEDURE ^ DecSpeed; 
		PROCEDURE ^ IncSpeed; 
		PROCEDURE ^ BubbleSort; 
		PROCEDURE ^ SelectSort; 
		PROCEDURE ^ ShellSort; 
		PROCEDURE ^ QuickSort; 
		PROCEDURE ^ ConcQuickSort; 
		PROCEDURE ^ Quick(lo, hi: LONGINT; conc: BOOLEAN); 
		PROCEDURE ^ HeapSort; 
		PROCEDURE ^ SmoothSort; 
	END ArrayView; 

	ConcurrentQuick = OBJECT {EXCLUSIVE} 
	VAR 
		lo, hi: LONGINT; 
		av: ArrayView; 

		PROCEDURE ^  & Init(sdw: ArrayView; low, high: LONGINT); 
	BEGIN{ACTIVE} 
	END ConcurrentQuick; 

	SortProcedure = PROCEDURE {DELEGATE}; 

	Sorter = OBJECT {EXCLUSIVE} 
	VAR 
		sort: SortProcedure; 
		av: ArrayView; 
		running, terminated: BOOLEAN; 

		PROCEDURE ^  & Init(win: ArrayView); 
		PROCEDURE ^ Start(proc: SortProcedure); 
		PROCEDURE ^ Terminate; 
	BEGIN{ACTIVE} 
	END Sorter; 

	ControlWindow = OBJECT {EXCLUSIVE} (WMComponents.FormWindow)
	VAR 
		toolbar: WMStandardComponents.Panel; 
		button: WMStandardComponents.Button; 
		av: ArrayView; 
		sorter: Sorter; 

		PROCEDURE ^  & New; 
		PROCEDURE ^ Handle*(VAR x: WMMessages.Message); 
		PROCEDURE ^ Close*; 
		PROCEDURE ^ CreateForm(): WMComponents.VisualComponent; 
		PROCEDURE ^ Order(sender, data: ANY); 
		PROCEDURE ^ RevOrder(sender, data: ANY); 
		PROCEDURE ^ BadOrder(sender, data: ANY); 
		PROCEDURE ^ Rand10(sender, data: ANY); 
		PROCEDURE ^ Rand100(sender, data: ANY); 
		PROCEDURE ^ Rand200(sender, data: ANY); 
		PROCEDURE ^ IncSpeed(sender, data: ANY); 
		PROCEDURE ^ DecSpeed(sender, data: ANY); 
		PROCEDURE ^ StartBubbleSort(sender, data: ANY); 
		PROCEDURE ^ StartSelectSort(sender, data: ANY); 
		PROCEDURE ^ StartShellSort(sender, data: ANY); 
		PROCEDURE ^ StartQuickSort(sender, data: ANY); 
		PROCEDURE ^ StartConcQuickSort(sender, data: ANY); 
		PROCEDURE ^ StartHeapSort(sender, data: ANY); 
		PROCEDURE ^ StartSmoothSort(sender, data: ANY); 
	END ControlWindow; 
VAR 
	w: ControlWindow; 

	PROCEDURE ^ Open*; 
BEGIN
END SortDemo.
