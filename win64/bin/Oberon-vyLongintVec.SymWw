MODULE vyLongintVec IN Oberon;
	IMPORT Files, Objects, Texts, vyBase, vyHostTexts, vyinteger := vyLongint, vyName;
CONST 
	idversion* = \"vyLongintVec 0.0a4"\; 
	cBadType* = 1; 
TYPE 
	integer* = LONGINT; 

	index* = LONGINT; 

	tVector* = POINTER TO tVectorDesc; 

	tVectorDesc* = RECORD (vyBase.tVectorDesc)
	END; 

	tLONGINT* = POINTER TO tLONGINTDesc; 

	tLONGINTDesc* = RECORD (vyBase.tDataDesc)
		i*: LONGINT; 
	END; 

	tMinMaxCache = POINTER TO tMinMaxCacheDesc; 

	tMinMaxCacheDesc = RECORD (vyBase.tCacheDesc)
		min, max: integer; 
		minpos, maxpos, nans: LONGINT; 
	END; 

	tMeanCache = POINTER TO tMeanCacheDesc; 

	tMeanCacheDesc = RECORD (vyBase.tCacheDesc)
		mean, ssq: LONGREAL; 
		nans: LONGINT; 
	END; 

	tBuf* = POINTER TO tBufDesc; 

	tBufDesc* = RECORD (vyBase.tBufDesc)
		data*: POINTER TO ARRAY OF LONGINT; 
	END; 

	ArrayOp1Function* = PROCEDURE (VAR arg: ARRAY OF LONGINT); 

	ArrayOp2Function* = PROCEDURE (VAR arg1, arg2: ARRAY OF LONGINT); 
VAR 
	newv: tVector; 

	PROCEDURE ^ FlushVecCaches(vec: vyBase.tVector); 
	PROCEDURE ^ BufMinMax(buf: vyBase.tBuf): tMinMaxCache; 
	PROCEDURE ^ BufMean(buf: vyBase.tBuf): tMeanCache; 
	PROCEDURE ^ NewBufs*(size: index): tBuf; 
	PROCEDURE ^ Store0(VAR R: Files.Rider; o: tVector); 
	PROCEDURE ^ Store0LONGINT(VAR R: Files.Rider; o: tLONGINT); 
	PROCEDURE ^ Load0LONGINT(VAR R: Files.Rider; o: tLONGINT); 
	PROCEDURE ^ Load0(VAR R: Files.Rider; o: tVector); 
	PROCEDURE ^ HandleAttributes(o: tVector; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ HandleAttributesLONGINT(o: tLONGINT; VAR M: Objects.AttrMsg); 
	PROCEDURE ^ Handler*(o: Objects.Object; VAR M: Objects.ObjMsg); 
	PROCEDURE ^ Gen*; 
	PROCEDURE ^ SetNrData(vec: tVector; size: index); 
	PROCEDURE ^ New*(size: LONGINT): tVector; 
	PROCEDURE ^ GenLongintObject*; 
	PROCEDURE ^ NewLongintObject*(i: LONGINT): tLONGINT; 
	PROCEDURE ^ NewLongintMatrix*(rows, columns: LONGINT): vyBase.tVector; 
	PROCEDURE ^ NewConstVector*(size: LONGINT; val: integer): vyBase.tVector; 
	PROCEDURE ^ GC*(vec: vyBase.tVector); 
	PROCEDURE ^ Allocate*(vec: vyBase.tVector; size: index); 
	PROCEDURE ^ SetLen*(vec: vyBase.tVector; size: index); 
	PROCEDURE ^ Len*(vec: vyBase.tVector): LONGINT; 
	PROCEDURE ^ NewLongintArray*(sizes: ARRAY OF LONGINT): vyBase.tVector; 
	PROCEDURE ^ NewAlikeVector*(model: vyBase.tVector): vyBase.tVector; 
	PROCEDURE ^ Append*(x: LONGINT; v: vyBase.tVector); 
	PROCEDURE ^ Get*(v: vyBase.tVector; pos: LONGINT): LONGINT; 
	PROCEDURE ^ Set*(val: LONGINT; v: vyBase.tVector; pos: LONGINT); 
	PROCEDURE ^ GetIndexed*(v: vyBase.tVector; indexvec: vyBase.tVector; pos: index): integer; 
	PROCEDURE ^ SetIndexed*(xval: integer; v: vyBase.tVector; indexvec: vyBase.tVector; pos: index); 
	PROCEDURE ^ GetMinMax*(v: vyBase.tVector; VAR min, max: LONGINT; VAR nrNaNs: LONGINT); 
	PROCEDURE ^ GetMeanSsq*(v: vyBase.tVector; VAR Mean, Ssq: LONGREAL; VAR nrNaNs: LONGINT); 
	PROCEDURE ^ CopyToArray*(v: vyBase.tVector; VAR A: ARRAY OF LONGINT); 
	PROCEDURE ^ CopyData*(src, dest: vyBase.tVector); 
	PROCEDURE ^ CopyToVec*(VAR A: ARRAY OF LONGINT; v: vyBase.tVector; len: LONGINT; srcoffs, destoffs: LONGINT); 
	PROCEDURE ^ DoArrayOp1*(v: vyBase.tVector; op1: ArrayOp1Function); 
	PROCEDURE ^ DoArrayOp2*(v1, v2: vyBase.tVector; op2: ArrayOp2Function); 
	PROCEDURE ^ Fill*(v: vyBase.tVector; val: LONGINT; offs, count: LONGINT); 
	PROCEDURE ^ NewFilledNamed*(count: LONGINT; val: integer; name: ARRAY OF CHAR): tVector; 
	PROCEDURE ^ FillSeq*(v: vyBase.tVector; startval: LONGINT; offs, count: LONGINT); 
	PROCEDURE ^ SortEachChunkLONGINT*(c: tBuf); 
	PROCEDURE ^ SortEachChunkLONGINTWId*(c: tBuf; cid: tBuf); 
	PROCEDURE ^ tcL*(c: vyBase.tBuf): tBuf; 
	PROCEDURE ^ MergeSortedChunkLONGINT(s1, s2: tBuf): BOOLEAN; 
	PROCEDURE ^ MergeSortedChunkLONGINTWId(s1, s2: tBuf; s1id, s2id: tBuf): BOOLEAN; 
	PROCEDURE ^ OrderedLongInt(left, right: vyBase.tBuf): BOOLEAN; 
	PROCEDURE ^ SortBuf*(VAR chunk: tBuf); 
	PROCEDURE ^ SortBufWId*(VAR chunk: tBuf; VAR chunkid: tBuf); 
	PROCEDURE ^ Sort*(VAR v: tVector); 
	PROCEDURE ^ SortById*(VAR v: tVector; VAR WId: vyBase.tVector); 
	PROCEDURE ^ SortWId*(VAR v: vyBase.tVector; VAR WId: vyBase.tVector); 
	PROCEDURE ^ SSQ*(x, y: vyBase.tVector): LONGREAL; 
	PROCEDURE ^ WriteChunk(VAR w: Texts.Writer; chunk: vyBase.tBuf); 
	PROCEDURE ^ Write*(VAR w: Texts.Writer; v: vyBase.tData); 
	PROCEDURE ^ ChunkSummary*(VAR w: Texts.Writer; chunk: vyBase.tBuf); 
BEGIN
END vyLongintVec.
